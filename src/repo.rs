use serde_derive::Deserialize;
use serde_derive::Serialize;

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Root {
    #[serde(rename = "0")]
    pub n0: n0,
    #[serde(rename = "1")]
    pub n1: n1,
    #[serde(rename = "2")]
    pub n2: n2,
    #[serde(rename = "10")]
    pub n10: n10,
    #[serde(rename = "11")]
    pub n11: n11,
    #[serde(rename = "12")]
    pub n12: n12,
    #[serde(rename = "13")]
    pub n13: n13,
    #[serde(rename = "14")]
    pub n14: n14,
    #[serde(rename = "15")]
    pub n15: n15,
    #[serde(rename = "16")]
    pub n16: n16,
    #[serde(rename = "17")]
    pub n17: n17,
    #[serde(rename = "18")]
    pub n18: n18,
    #[serde(rename = "19")]
    pub n19: n19,
    #[serde(rename = "20")]
    pub n20: n20,
    #[serde(rename = "21")]
    pub n21: n21,
    #[serde(rename = "22")]
    pub n22: n22,
    #[serde(rename = "23")]
    pub n23: n23,
    #[serde(rename = "24")]
    pub n24: n24,
    #[serde(rename = "25")]
    pub n25: n25,
    #[serde(rename = "26")]
    pub n26: n26,
    #[serde(rename = "27")]
    pub n27: n27,
    #[serde(rename = "28")]
    pub n28: n28,
    #[serde(rename = "365")]
    pub n365: n365,
    #[serde(rename = "1000")]
    pub n1000: n1000,
    #[serde(rename = "6000")]
    pub n6000: n6000,
    #[serde(rename = "22750")]
    pub n22750: n22750,
    #[serde(rename = "23000")]
    pub n23000: n23000,
    #[serde(rename = "32044")]
    pub n32044: n32044,
    #[serde(rename = "102842")]
    pub n102842: n102842,
    #[serde(rename = "116000")]
    pub n116000: n116000,
    #[serde(rename = "190000")]
    pub n190000: n190000,
    #[serde(rename = "282939")]
    pub n282939: n282939,
    #[serde(rename = "83124311")]
    pub n83124311: n83124311,
    #[serde(rename = "3333333333")]
    pub n3333333333: n3333333333,
    #[serde(rename = "bitquark-subdomains-top100000")]
    pub bitquark_subdomains_top100000: BitquarkSubdomainsTop100000,
    pub deepmagic: Deepmagic,
    #[serde(rename = "dns-Jhaddix")]
    pub dns_jhaddix: DnsJhaddix,
    #[serde(rename = "fierce-hostlist")]
    pub fierce_hostlist: FierceHostlist,
    pub namelist: Namelist,
    #[serde(rename = "shubs-stackoverflow")]
    pub shubs_stackoverflow: ShubsStackoverflow,
    #[serde(rename = "shubs-subdomains")]
    pub shubs_subdomains: ShubsSubdomains,
    #[serde(rename = "sortedcombined-knock-dnsrecon-fierce-reconng")]
    pub sortedcombined_knock_dnsrecon_fierce_reconng: SortedcombinedKnockDnsreconFierceReconng,
    #[serde(rename = "subdomains-top1million-110000")]
    pub subdomains_top1million_110000: SubdomainsTop1million110000,
    #[serde(rename = "subdomains-top1million-20000")]
    pub subdomains_top1million_20000: SubdomainsTop1million20000,
    #[serde(rename = "subdomains-top1million-5000")]
    pub subdomains_top1million_5000: SubdomainsTop1million5000,
    #[serde(rename = "common-http-ports")]
    pub common_http_ports: CommonHttpPorts,
    #[serde(rename = "common-router-ips")]
    pub common_router_ips: CommonRouterIps,
    #[serde(rename = "nmap-ports-top1000")]
    pub nmap_ports_top1000: NmapPortsTop1000,
    #[serde(rename = "default_cics_transactions")]
    pub default_cics_transactions: DefaultCicsTransactions,
    #[serde(rename = "common-snmp-community-strings-onesixtyone")]
    pub common_snmp_community_strings_onesixtyone: CommonSnmpCommunityStringsOnesixtyone,
    #[serde(rename = "common-snmp-community-strings")]
    pub common_snmp_community_strings: CommonSnmpCommunityStrings,
    #[serde(rename = "snmp-onesixtyone")]
    pub snmp_onesixtyone: SnmpOnesixtyone,
    pub snmp: Snmp,
    #[serde(rename = "secret-keywords")]
    pub secret_keywords: SecretKeywords,
    #[serde(rename = "AdobeCQ-AEM")]
    pub adobe_cq_aem: AdobeCqAem,
    #[serde(rename = "AdobeXML")]
    pub adobe_xml: AdobeXml,
    #[serde(rename = "Apache")]
    pub apache: Apache,
    #[serde(rename = "ApacheTomcat")]
    pub apache_tomcat: ApacheTomcat,
    #[serde(rename = "lowercase-headers")]
    pub lowercase_headers: LowercaseHeaders,
    #[serde(rename = "uppercase-headers")]
    pub uppercase_headers: UppercaseHeaders,
    #[serde(rename = "CGI-HTTP-POST-Windows")]
    pub cgi_http_post_windows: CgiHttpPostWindows,
    #[serde(rename = "CGI-HTTP-POST")]
    pub cgi_http_post: CgiHttpPost,
    #[serde(rename = "CGI-Microsoft")]
    pub cgi_microsoft: CgiMicrosoft,
    #[serde(rename = "CGI-XPlatform")]
    pub cgi_xplatform: CgiXplatform,
    #[serde(rename = "CGIs")]
    pub cgis: Cgis,
    #[serde(rename = "ColdFusion")]
    pub cold_fusion: ColdFusion,
    #[serde(rename = "SAP")]
    pub sap: Sap,
    #[serde(rename = "Sharepoint")]
    pub sharepoint: Sharepoint,
    #[serde(rename = "SiteMinder")]
    pub site_minder: SiteMinder,
    #[serde(rename = "Sitefinity-fuzz")]
    pub sitefinity_fuzz: SitefinityFuzz,
    #[serde(rename = "Umbraco")]
    pub umbraco: Umbraco,
    #[serde(rename = "caobox-cms")]
    pub caobox_cms: CaoboxCms,
    #[serde(rename = "drupal-themes")]
    pub drupal_themes: DrupalThemes,
    #[serde(rename = "flyspray-1")]
    pub flyspray_1: Flyspray1,
    #[serde(rename = "joomla-plugins")]
    pub joomla_plugins: JoomlaPlugins,
    #[serde(rename = "joomla-themes")]
    pub joomla_themes: JoomlaThemes,
    #[serde(rename = "kentico-cms-modules-themes")]
    pub kentico_cms_modules_themes: KenticoCmsModulesThemes,
    #[serde(rename = "modx-revolution-plugins")]
    pub modx_revolution_plugins: ModxRevolutionPlugins,
    #[serde(rename = "php-nuke")]
    pub php_nuke: PhpNuke,
    #[serde(rename = "piwik-3")]
    pub piwik_3: Piwik3,
    #[serde(rename = "sharepoint")]
    pub sharepoint2: Sharepoint2,
    pub shopware: Shopware,
    pub sitecore: Sitecore,
    #[serde(rename = "sitemap-magento")]
    pub sitemap_magento: SitemapMagento,
    #[serde(rename = "symfony-315-demo")]
    pub symfony_315_demo: Symfony315Demo,
    #[serde(rename = "symphony-267-xslt-cms")]
    pub symphony_267_xslt_cms: Symphony267XsltCms,
    pub wordpress: Wordpress,
    #[serde(rename = "wp-plugins")]
    pub wp_plugins: WpPlugins,
    #[serde(rename = "wp-themes")]
    pub wp_themes: WpThemes,
    #[serde(rename = "Common-DB-Backups")]
    pub common_db_backups: CommonDbBackups,
    #[serde(rename = "Common-PHP-Filenames")]
    pub common_php_filenames: CommonPhpFilenames,
    #[serde(rename = "CommonBackdoors-ASP")]
    pub common_backdoors_asp: CommonBackdoorsAsp,
    #[serde(rename = "CommonBackdoors-JSP")]
    pub common_backdoors_jsp: CommonBackdoorsJsp,
    #[serde(rename = "CommonBackdoors-PHP")]
    pub common_backdoors_php: CommonBackdoorsPhp,
    #[serde(rename = "CommonBackdoors-PL")]
    pub common_backdoors_pl: CommonBackdoorsPl,
    #[serde(rename = "Commands-Documents")]
    pub commands_documents: CommandsDocuments,
    #[serde(rename = "Commands-NSF")]
    pub commands_nsf: CommandsNsf,
    #[serde(rename = "Commands-Views")]
    pub commands_views: CommandsViews,
    #[serde(rename = "Domino-Files")]
    pub domino_files: DominoFiles,
    pub dh: Dh,
    #[serde(rename = "FatwireCMS")]
    pub fatwire_cms: FatwireCms,
    #[serde(rename = "Frontpage")]
    pub frontpage: Frontpage,
    #[serde(rename = "HTTP-POST-Microsoft")]
    pub http_post_microsoft: HttpPostMicrosoft,
    #[serde(rename = "Hyperion")]
    pub hyperion: Hyperion,
    #[serde(rename = "IIS")]
    pub iis: Iis,
    #[serde(rename = "JRun")]
    pub jrun: Jrun,
    #[serde(rename = "JavaScript-Miners")]
    pub java_script_miners: JavaScriptMiners,
    #[serde(rename = "JavaServlets-Common")]
    pub java_servlets_common: JavaServletsCommon,
    #[serde(rename = "Jenkins-Hudson")]
    pub jenkins_hudson: JenkinsHudson,
    #[serde(rename = "KitchensinkDirectories")]
    pub kitchensink_directories: KitchensinkDirectories,
    #[serde(rename = "LinuxFileList")]
    pub linux_file_list: LinuxFileList,
    #[serde(rename = "Logins")]
    pub logins: Logins,
    #[serde(rename = "LotusNotes")]
    pub lotus_notes: LotusNotes,
    #[serde(rename = "Oracle EBS wordlist")]
    pub oracle_ebs_wordlist: OracleEbsWordlist,
    #[serde(rename = "Oracle9i")]
    pub oracle9i: Oracle9i,
    #[serde(rename = "OracleAppServer")]
    pub oracle_app_server: OracleAppServer,
    #[serde(rename = "PHP")]
    pub php: Php,
    #[serde(rename = "Passwords")]
    pub passwords: Passwords,
    #[serde(rename = "Public-Source-Repo-Issues")]
    pub public_source_repo_issues: PublicSourceRepoIssues,
    #[serde(rename = "Randomfiles")]
    pub randomfiles: Randomfiles,
    #[serde(rename = "RobotsDisallowed-Top10")]
    pub robots_disallowed_top10: RobotsDisallowedTop10,
    #[serde(rename = "RobotsDisallowed-Top100")]
    pub robots_disallowed_top100: RobotsDisallowedTop100,
    #[serde(rename = "RobotsDisallowed-Top1000")]
    pub robots_disallowed_top1000: RobotsDisallowedTop1000,
    #[serde(rename = "RobotsDisallowed-Top500")]
    pub robots_disallowed_top500: RobotsDisallowedTop500,
    #[serde(rename = "Roundcube-123")]
    pub roundcube_123: Roundcube123,
    #[serde(rename = "all-dirs")]
    pub all_dirs: AllDirs,
    #[serde(rename = "all-extensionless")]
    pub all_extensionless: AllExtensionless,
    pub all: All,
    pub conf: Conf,
    pub config: Config,
    pub htaccess: Htaccess,
    pub properties: Properties,
    pub inc: Inc,
    pub ini: Ini,
    pub mdb: Mdb,
    pub mdf: Mdf,
    pub sql: Sql,
    pub xml: Xml,
    pub ascx: Ascx,
    pub asp: Asp,
    pub aspx: Aspx,
    pub c: C,
    pub cfm: Cfm,
    pub cpp: Cpp,
    pub cs: Cs,
    pub css: Css,
    pub html: Html,
    pub jar: Jar,
    pub java: Java,
    pub js: Js,
    pub jsp: Jsp,
    pub jspf: Jspf,
    #[serde(rename = "php")]
    pub php2: Php2,
    pub php3: Php3,
    pub php5: Php5,
    pub phpt: Phpt,
    pub pl: Pl,
    pub py: Py,
    pub rb: Rb,
    pub sh: Sh,
    pub swf: Swf,
    pub tpl: Tpl,
    pub vb: Vb,
    pub wsdl: Wsdl,
    pub csproj: Csproj,
    pub pdb: Pdb,
    pub resx: Resx,
    pub sln: Sln,
    pub suo: Suo,
    pub vbproj: Vbproj,
    pub admin: Admin,
    pub debug: Debug,
    pub error: Error,
    pub help: Help,
    pub index: Index,
    pub install: Install,
    pub log: Log,
    pub root: Root2,
    pub setup: Setup,
    pub test: Test,
    pub symfony: Symfony,
    #[serde(rename = "SunAppServerGlassfish")]
    pub sun_app_server_glassfish: SunAppServerGlassfish,
    #[serde(rename = "SuniPlanet")]
    pub suni_planet: SuniPlanet,
    #[serde(rename = "urls-Drupal-7")]
    pub urls_drupal_7: UrlsDrupal7,
    #[serde(rename = "urls-SAP")]
    pub urls_sap: UrlsSap,
    #[serde(rename = "urls-joomla-3")]
    pub urls_joomla_3: UrlsJoomla3,
    #[serde(rename = "urls-wordpress-3")]
    pub urls_wordpress_3: UrlsWordpress3,
    #[serde(rename = "UnixDotfiles")]
    pub unix_dotfiles: UnixDotfiles,
    #[serde(rename = "Vignette")]
    pub vignette: Vignette,
    #[serde(rename = "SOAP-functions")]
    pub soap_functions: SoapFunctions,
    #[serde(rename = "apache")]
    pub apache2: Apache2,
    #[serde(rename = "actions-lowercase")]
    pub actions_lowercase: ActionsLowercase,
    #[serde(rename = "actions-uppercase")]
    pub actions_uppercase: ActionsUppercase,
    pub actions: Actions,
    #[serde(rename = "api-seen-in-wild")]
    pub api_seen_in_wild: ApiSeenInWild,
    #[serde(rename = "common_paths")]
    pub common_paths: CommonPaths,
    #[serde(rename = "objects-lowercase")]
    pub objects_lowercase: ObjectsLowercase,
    #[serde(rename = "objects-uppercase")]
    pub objects_uppercase: ObjectsUppercase,
    pub objects: Objects,
    pub axis: Axis,
    pub big: Big,
    #[serde(rename = "burp-parameter-names")]
    pub burp_parameter_names: BurpParameterNames,
    pub coldfusion: Coldfusion,
    #[serde(rename = "common-and-dutch")]
    pub common_and_dutch: CommonAndDutch,
    #[serde(rename = "common-and-french")]
    pub common_and_french: CommonAndFrench,
    #[serde(rename = "common-and-italian")]
    pub common_and_italian: CommonAndItalian,
    #[serde(rename = "common-and-portugese")]
    pub common_and_portugese: CommonAndPortugese,
    #[serde(rename = "common-and-spanish")]
    pub common_and_spanish: CommonAndSpanish,
    #[serde(rename = "common-api-endpoints-mazen160")]
    pub common_api_endpoints_mazen160: CommonApiEndpointsMazen160,
    pub common: Common,
    #[serde(rename = "confluence-administration")]
    pub confluence_administration: ConfluenceAdministration,
    #[serde(rename = "default-web-root-directory-linux")]
    pub default_web_root_directory_linux: DefaultWebRootDirectoryLinux,
    #[serde(rename = "default-web-root-directory-windows")]
    pub default_web_root_directory_windows: DefaultWebRootDirectoryWindows,
    #[serde(rename = "domino-dirs-coldfusion39")]
    pub domino_dirs_coldfusion39: DominoDirsColdfusion39,
    #[serde(rename = "domino-endpoints-coldfusion39")]
    pub domino_endpoints_coldfusion39: DominoEndpointsColdfusion39,
    #[serde(rename = "fnf-fuzz")]
    pub fnf_fuzz: FnfFuzz,
    #[serde(rename = "frontpage")]
    pub frontpage2: Frontpage2,
    pub golang: Golang,
    pub graphql: Graphql,
    pub hpsmh: Hpsmh,
    #[serde(rename = "hyperion")]
    pub hyperion2: Hyperion2,
    pub iplanet: Iplanet,
    pub jboss: Jboss,
    #[serde(rename = "jrun")]
    pub jrun2: Jrun2,
    #[serde(rename = "local-ports")]
    pub local_ports: LocalPorts,
    pub netware: Netware,
    pub nginx: Nginx,
    pub oracle: Oracle,
    #[serde(rename = "proxy-conf")]
    pub proxy_conf: ProxyConf,
    pub quickhits: Quickhits,
    #[serde(rename = "raft-large-directories-lowercase")]
    pub raft_large_directories_lowercase: RaftLargeDirectoriesLowercase,
    #[serde(rename = "raft-large-directories")]
    pub raft_large_directories: RaftLargeDirectories,
    #[serde(rename = "raft-large-extensions-lowercase")]
    pub raft_large_extensions_lowercase: RaftLargeExtensionsLowercase,
    #[serde(rename = "raft-large-extensions")]
    pub raft_large_extensions: RaftLargeExtensions,
    #[serde(rename = "raft-large-files-lowercase")]
    pub raft_large_files_lowercase: RaftLargeFilesLowercase,
    #[serde(rename = "raft-large-files")]
    pub raft_large_files: RaftLargeFiles,
    #[serde(rename = "raft-large-words-lowercase")]
    pub raft_large_words_lowercase: RaftLargeWordsLowercase,
    #[serde(rename = "raft-large-words")]
    pub raft_large_words: RaftLargeWords,
    #[serde(rename = "raft-medium-directories-lowercase")]
    pub raft_medium_directories_lowercase: RaftMediumDirectoriesLowercase,
    #[serde(rename = "raft-medium-directories")]
    pub raft_medium_directories: RaftMediumDirectories,
    #[serde(rename = "raft-medium-extensions-lowercase")]
    pub raft_medium_extensions_lowercase: RaftMediumExtensionsLowercase,
    #[serde(rename = "raft-medium-extensions")]
    pub raft_medium_extensions: RaftMediumExtensions,
    #[serde(rename = "raft-medium-files-lowercase")]
    pub raft_medium_files_lowercase: RaftMediumFilesLowercase,
    #[serde(rename = "raft-medium-files")]
    pub raft_medium_files: RaftMediumFiles,
    #[serde(rename = "raft-medium-words-lowercase")]
    pub raft_medium_words_lowercase: RaftMediumWordsLowercase,
    #[serde(rename = "raft-medium-words")]
    pub raft_medium_words: RaftMediumWords,
    #[serde(rename = "raft-small-directories-lowercase")]
    pub raft_small_directories_lowercase: RaftSmallDirectoriesLowercase,
    #[serde(rename = "raft-small-directories")]
    pub raft_small_directories: RaftSmallDirectories,
    #[serde(rename = "raft-small-extensions-lowercase")]
    pub raft_small_extensions_lowercase: RaftSmallExtensionsLowercase,
    #[serde(rename = "raft-small-extensions")]
    pub raft_small_extensions: RaftSmallExtensions,
    #[serde(rename = "raft-small-files-lowercase")]
    pub raft_small_files_lowercase: RaftSmallFilesLowercase,
    #[serde(rename = "raft-small-files")]
    pub raft_small_files: RaftSmallFiles,
    #[serde(rename = "raft-small-words-lowercase")]
    pub raft_small_words_lowercase: RaftSmallWordsLowercase,
    #[serde(rename = "raft-small-words")]
    pub raft_small_words: RaftSmallWords,
    #[serde(rename = "reverse-proxy-inconsistencies")]
    pub reverse_proxy_inconsistencies: ReverseProxyInconsistencies,
    pub ror: Ror,
    #[serde(rename = "sap")]
    pub sap2: Sap2,
    #[serde(rename = "spring-boot")]
    pub spring_boot: SpringBoot,
    pub sunas: Sunas,
    pub swagger: Swagger,
    pub tests: Tests,
    pub tftp: Tftp,
    pub tomcat: Tomcat,
    #[serde(rename = "web-all-content-types")]
    pub web_all_content_types: WebAllContentTypes,
    #[serde(rename = "web-extensions")]
    pub web_extensions: WebExtensions,
    #[serde(rename = "web-mutations")]
    pub web_mutations: WebMutations,
    pub weblogic: Weblogic,
    pub websphere: Websphere,
    #[serde(rename = "1-4_all_letters_a-z")]
    pub n1_4_all_letters_a_z: n14AllLettersAZ,
    #[serde(rename = "3-digits-000-999")]
    pub n3_digits_000_999: n3Digits000999,
    #[serde(rename = "4-digits-0000-9999")]
    pub n4_digits_0000_9999: n4Digits00009999,
    #[serde(rename = "5-digits-00000-99999")]
    pub n5_digits_00000_99999: n5Digits0000099999,
    #[serde(rename = "6-digits-000000-999999")]
    pub n6_digits_000000_999999: n6Digits000000999999,
    #[serde(rename = "MSSQL-Enumeration")]
    pub mssql_enumeration: MssqlEnumeration,
    #[serde(rename = "MSSQL")]
    pub mssql: Mssql,
    #[serde(rename = "MySQL-Read-Local-Files")]
    pub my_sql_read_local_files: MySqlReadLocalFiles,
    #[serde(rename = "MySQL-SQLi-Login-Bypass")]
    pub my_sql_sqli_login_bypass: MySqlSqliLoginBypass,
    #[serde(rename = "MySQL")]
    pub my_sql: MySql,
    #[serde(rename = "NoSQL")]
    pub no_sql: NoSql,
    #[serde(rename = "Oracle")]
    pub oracle2: Oracle2,
    #[serde(rename = "Postgres-Enumeration")]
    pub postgres_enumeration: PostgresEnumeration,
    pub db2enumeration: Db2enumeration,
    #[serde(rename = "FormatString-Jhaddix")]
    pub format_string_jhaddix: FormatStringJhaddix,
    #[serde(rename = "FuzzingStrings-SkullSecurity")]
    pub fuzzing_strings_skull_security: FuzzingStringsSkullSecurity,
    #[serde(rename = "HTML5sec-Injections-Jhaddix")]
    pub html5sec_injections_jhaddix: Html5secInjectionsJhaddix,
    #[serde(rename = "JSON")]
    pub json: Json,
    #[serde(rename = "LDAP")]
    pub ldap: Ldap,
    #[serde(rename = "LFI-Jhaddix")]
    pub lfi_jhaddix: LfiJhaddix,
    #[serde(rename = "LFI-LFISuite-pathtotest-huge")]
    pub lfi_lfisuite_pathtotest_huge: LfiLfisuitePathtotestHuge,
    #[serde(rename = "LFI-LFISuite-pathtotest")]
    pub lfi_lfisuite_pathtotest: LfiLfisuitePathtotest,
    #[serde(rename = "Metacharacters")]
    pub metacharacters: Metacharacters,
    #[serde(rename = "SQLi-Polyglots")]
    pub sqli_polyglots: SqliPolyglots,
    #[serde(rename = "XSS-Polyglot-Ultimate-0xsobky")]
    pub xss_polyglot_ultimate_0xsobky: XssPolyglotUltimate0xsobky,
    #[serde(rename = "XSS-Polyglots-Dmiessler")]
    pub xss_polyglots_dmiessler: XssPolyglotsDmiessler,
    #[serde(rename = "XSS-Polyglots")]
    pub xss_polyglots: XssPolyglots,
    #[serde(rename = "XSS-innerht-ml")]
    pub xss_innerht_ml: XssInnerhtMl,
    #[serde(rename = "Generic-BlindSQLi")]
    pub generic_blind_sqli: GenericBlindSqli,
    #[serde(rename = "Generic-SQLi")]
    pub generic_sqli: GenericSqli,
    #[serde(rename = "SSI-Injection-Jhaddix")]
    pub ssi_injection_jhaddix: SsiInjectionJhaddix,
    #[serde(rename = "URI-XSS")]
    pub uri_xss: UriXss,
    #[serde(rename = "URI-hex")]
    pub uri_hex: UriHex,
    #[serde(rename = "Unicode")]
    pub unicode: Unicode,
    #[serde(rename = "UnixAttacks")]
    pub unix_attacks: UnixAttacks,
    #[serde(rename = "UserAgents-IE")]
    pub user_agents_ie: UserAgentsIe,
    #[serde(rename = "UserAgents")]
    pub user_agents: UserAgents,
    pub billboard: Billboard,
    pub car: Car,
    pub computer: Computer,
    #[serde(rename = "ebook-reader")]
    pub ebook_reader: EbookReader,
    #[serde(rename = "game-console")]
    pub game_console: GameConsole,
    pub glasses: Glasses,
    #[serde(rename = "handheld-game")]
    pub handheld_game: HandheldGame,
    #[serde(rename = "large-screen")]
    pub large_screen: LargeScreen,
    #[serde(rename = "media-player")]
    pub media_player: MediaPlayer,
    pub mobile: Mobile,
    #[serde(rename = "music-player")]
    pub music_player: MusicPlayer,
    pub pda: Pda,
    pub phone: Phone,
    pub server: Server,
    pub tablet: Tablet,
    pub tv: Tv,
    pub blink: Blink,
    pub edgehtml: Edgehtml,
    pub gecko: Gecko,
    pub goanna: Goanna,
    pub khtml: Khtml,
    pub netfront: Netfront,
    pub presto: Presto,
    pub trident: Trident,
    pub webkit: Webkit,
    pub admire: Admire,
    pub android: Android,
    #[serde(rename = "aopen-etile-19")]
    pub aopen_etile_19: AopenEtile19,
    #[serde(rename = "blackberry-10")]
    pub blackberry_10: Blackberry10,
    #[serde(rename = "blackberry-2-3")]
    pub blackberry_2_3: Blackberry23,
    #[serde(rename = "blackberry-3-0-0")]
    pub blackberry_3_0_0: Blackberry300,
    #[serde(rename = "blackberry-4-0-2")]
    pub blackberry_4_0_2: Blackberry402,
    #[serde(rename = "blackberry-4-0")]
    pub blackberry_4_0: Blackberry40,
    #[serde(rename = "blackberry-4-1-0")]
    pub blackberry_4_1_0: Blackberry410,
    #[serde(rename = "blackberry-4")]
    pub blackberry_4: Blackberry4,
    #[serde(rename = "blackberry-7100")]
    pub blackberry_7100: Blackberry7100,
    #[serde(rename = "blackberry-7130")]
    pub blackberry_7130: Blackberry7130,
    #[serde(rename = "blackberry-7250")]
    pub blackberry_7250: Blackberry7250,
    #[serde(rename = "blackberry-7290")]
    pub blackberry_7290: Blackberry7290,
    #[serde(rename = "blackberry-7520")]
    pub blackberry_7520: Blackberry7520,
    #[serde(rename = "blackberry-8-0")]
    pub blackberry_8_0: Blackberry80,
    #[serde(rename = "blackberry-8100")]
    pub blackberry_8100: Blackberry8100,
    #[serde(rename = "blackberry-8110")]
    pub blackberry_8110: Blackberry8110,
    #[serde(rename = "blackberry-8120")]
    pub blackberry_8120: Blackberry8120,
    #[serde(rename = "blackberry-8220")]
    pub blackberry_8220: Blackberry8220,
    #[serde(rename = "blackberry-8300")]
    pub blackberry_8300: Blackberry8300,
    #[serde(rename = "blackberry-8310")]
    pub blackberry_8310: Blackberry8310,
    #[serde(rename = "blackberry-8320")]
    pub blackberry_8320: Blackberry8320,
    #[serde(rename = "blackberry-8330")]
    pub blackberry_8330: Blackberry8330,
    #[serde(rename = "blackberry-8520")]
    pub blackberry_8520: Blackberry8520,
    #[serde(rename = "blackberry-8530")]
    pub blackberry_8530: Blackberry8530,
    #[serde(rename = "blackberry-8700")]
    pub blackberry_8700: Blackberry8700,
    #[serde(rename = "blackberry-8800")]
    pub blackberry_8800: Blackberry8800,
    #[serde(rename = "blackberry-8820")]
    pub blackberry_8820: Blackberry8820,
    #[serde(rename = "blackberry-8900")]
    pub blackberry_8900: Blackberry8900,
    #[serde(rename = "blackberry-9000")]
    pub blackberry_9000: Blackberry9000,
    #[serde(rename = "blackberry-9100")]
    pub blackberry_9100: Blackberry9100,
    #[serde(rename = "blackberry-9105")]
    pub blackberry_9105: Blackberry9105,
    #[serde(rename = "blackberry-9220")]
    pub blackberry_9220: Blackberry9220,
    #[serde(rename = "blackberry-9300")]
    pub blackberry_9300: Blackberry9300,
    #[serde(rename = "blackberry-9310")]
    pub blackberry_9310: Blackberry9310,
    #[serde(rename = "blackberry-9315")]
    pub blackberry_9315: Blackberry9315,
    #[serde(rename = "blackberry-9320")]
    pub blackberry_9320: Blackberry9320,
    #[serde(rename = "blackberry-9330")]
    pub blackberry_9330: Blackberry9330,
    #[serde(rename = "blackberry-9350")]
    pub blackberry_9350: Blackberry9350,
    #[serde(rename = "blackberry-9360")]
    pub blackberry_9360: Blackberry9360,
    #[serde(rename = "blackberry-9370")]
    pub blackberry_9370: Blackberry9370,
    #[serde(rename = "blackberry-9380")]
    pub blackberry_9380: Blackberry9380,
    #[serde(rename = "blackberry-9500")]
    pub blackberry_9500: Blackberry9500,
    #[serde(rename = "blackberry-9520")]
    pub blackberry_9520: Blackberry9520,
    #[serde(rename = "blackberry-9530")]
    pub blackberry_9530: Blackberry9530,
    #[serde(rename = "blackberry-9550")]
    pub blackberry_9550: Blackberry9550,
    #[serde(rename = "blackberry-9620")]
    pub blackberry_9620: Blackberry9620,
    #[serde(rename = "blackberry-9630")]
    pub blackberry_9630: Blackberry9630,
    #[serde(rename = "blackberry-9650")]
    pub blackberry_9650: Blackberry9650,
    #[serde(rename = "blackberry-9670")]
    pub blackberry_9670: Blackberry9670,
    #[serde(rename = "blackberry-9700")]
    pub blackberry_9700: Blackberry9700,
    #[serde(rename = "blackberry-9720")]
    pub blackberry_9720: Blackberry9720,
    #[serde(rename = "blackberry-9780")]
    pub blackberry_9780: Blackberry9780,
    #[serde(rename = "blackberry-9790")]
    pub blackberry_9790: Blackberry9790,
    #[serde(rename = "blackberry-9800")]
    pub blackberry_9800: Blackberry9800,
    #[serde(rename = "blackberry-9810")]
    pub blackberry_9810: Blackberry9810,
    #[serde(rename = "blackberry-9850")]
    pub blackberry_9850: Blackberry9850,
    #[serde(rename = "blackberry-9860")]
    pub blackberry_9860: Blackberry9860,
    #[serde(rename = "blackberry-9890")]
    pub blackberry_9890: Blackberry9890,
    #[serde(rename = "blackberry-9900")]
    pub blackberry_9900: Blackberry9900,
    #[serde(rename = "blackberry-9930")]
    pub blackberry_9930: Blackberry9930,
    #[serde(rename = "blackberry-99900")]
    pub blackberry_99900: Blackberry99900,
    #[serde(rename = "blackberry-q10")]
    pub blackberry_q10: BlackberryQ10,
    #[serde(rename = "blackberry-z-series")]
    pub blackberry_z_series: BlackberryZSeries,
    pub buckle: Buckle,
    #[serde(rename = "china-mid-tablet")]
    pub china_mid_tablet: ChinaMidTablet,
    pub cricket: Cricket,
    #[serde(rename = "danger-hiptop-1-0")]
    pub danger_hiptop_1_0: DangerHiptop10,
    #[serde(rename = "danger-hiptop-2-0")]
    pub danger_hiptop_2_0: DangerHiptop20,
    #[serde(rename = "dec-alpha")]
    pub dec_alpha: DecAlpha,
    #[serde(rename = "desire-1")]
    pub desire_1: Desire1,
    #[serde(rename = "desire-10")]
    pub desire_10: Desire10,
    #[serde(rename = "desire-2")]
    pub desire_2: Desire2,
    #[serde(rename = "desire-200")]
    pub desire_200: Desire200,
    #[serde(rename = "desire-210")]
    pub desire_210: Desire210,
    #[serde(rename = "desire-300")]
    pub desire_300: Desire300,
    #[serde(rename = "desire-310")]
    pub desire_310: Desire310,
    #[serde(rename = "desire-320")]
    pub desire_320: Desire320,
    #[serde(rename = "desire-326g")]
    pub desire_326g: Desire326g,
    #[serde(rename = "desire-400")]
    pub desire_400: Desire400,
    #[serde(rename = "desire-500")]
    pub desire_500: Desire500,
    #[serde(rename = "desire-501")]
    pub desire_501: Desire501,
    #[serde(rename = "desire-510")]
    pub desire_510: Desire510,
    #[serde(rename = "desire-512")]
    pub desire_512: Desire512,
    #[serde(rename = "desire-516")]
    pub desire_516: Desire516,
    #[serde(rename = "desire-520")]
    pub desire_520: Desire520,
    #[serde(rename = "desire-526")]
    pub desire_526: Desire526,
    #[serde(rename = "desire-526g")]
    pub desire_526g: Desire526g,
    #[serde(rename = "desire-526gplus")]
    pub desire_526gplus: Desire526gplus,
    #[serde(rename = "desire-530")]
    pub desire_530: Desire530,
    #[serde(rename = "desire-550")]
    pub desire_550: Desire550,
    #[serde(rename = "desire-555")]
    pub desire_555: Desire555,
    #[serde(rename = "desire-600")]
    pub desire_600: Desire600,
    #[serde(rename = "desire-601")]
    pub desire_601: Desire601,
    #[serde(rename = "desire-610")]
    pub desire_610: Desire610,
    #[serde(rename = "desire-612")]
    pub desire_612: Desire612,
    #[serde(rename = "desire-616")]
    pub desire_616: Desire616,
    #[serde(rename = "desire-619d")]
    pub desire_619d: Desire619d,
    #[serde(rename = "desire-620")]
    pub desire_620: Desire620,
    #[serde(rename = "desire-620g")]
    pub desire_620g: Desire620g,
    #[serde(rename = "desire-625")]
    pub desire_625: Desire625,
    #[serde(rename = "desire-626")]
    pub desire_626: Desire626,
    #[serde(rename = "desire-626g")]
    pub desire_626g: Desire626g,
    #[serde(rename = "desire-626gplus")]
    pub desire_626gplus: Desire626gplus,
    #[serde(rename = "desire-626s")]
    pub desire_626s: Desire626s,
    #[serde(rename = "desire-628")]
    pub desire_628: Desire628,
    #[serde(rename = "desire-630")]
    pub desire_630: Desire630,
    #[serde(rename = "desire-650")]
    pub desire_650: Desire650,
    #[serde(rename = "desire-700")]
    pub desire_700: Desire700,
    #[serde(rename = "desire-728")]
    pub desire_728: Desire728,
    #[serde(rename = "desire-728g")]
    pub desire_728g: Desire728g,
    #[serde(rename = "desire-816")]
    pub desire_816: Desire816,
    #[serde(rename = "desire-816g")]
    pub desire_816g: Desire816g,
    #[serde(rename = "desire-816h")]
    pub desire_816h: Desire816h,
    #[serde(rename = "desire-820")]
    pub desire_820: Desire820,
    #[serde(rename = "desire-820g")]
    pub desire_820g: Desire820g,
    #[serde(rename = "desire-820q")]
    pub desire_820q: Desire820q,
    #[serde(rename = "desire-820s")]
    pub desire_820s: Desire820s,
    #[serde(rename = "desire-820ts")]
    pub desire_820ts: Desire820ts,
    #[serde(rename = "desire-825")]
    pub desire_825: Desire825,
    #[serde(rename = "desire-826")]
    pub desire_826: Desire826,
    #[serde(rename = "desire-828")]
    pub desire_828: Desire828,
    #[serde(rename = "desire-830")]
    pub desire_830: Desire830,
    #[serde(rename = "desire-860")]
    pub desire_860: Desire860,
    #[serde(rename = "desire-a8181")]
    pub desire_a8181: DesireA8181,
    #[serde(rename = "desire-a8183")]
    pub desire_a8183: DesireA8183,
    #[serde(rename = "desire-c")]
    pub desire_c: DesireC,
    #[serde(rename = "desire-eye")]
    pub desire_eye: DesireEye,
    #[serde(rename = "desire-hd-a9191")]
    pub desire_hd_a9191: DesireHdA9191,
    #[serde(rename = "desire-hd-a9192")]
    pub desire_hd_a9192: DesireHdA9192,
    #[serde(rename = "desire-hd")]
    pub desire_hd: DesireHd,
    #[serde(rename = "desire-p")]
    pub desire_p: DesireP,
    #[serde(rename = "desire-s-s510e")]
    pub desire_s_s510e: DesireSS510e,
    #[serde(rename = "desire-s")]
    pub desire_s: DesireS,
    #[serde(rename = "desire-sms")]
    pub desire_sms: DesireSms,
    #[serde(rename = "desire-sv")]
    pub desire_sv: DesireSv,
    #[serde(rename = "desire-u")]
    pub desire_u: DesireU,
    #[serde(rename = "desire-v")]
    pub desire_v: DesireV,
    #[serde(rename = "desire-vc")]
    pub desire_vc: DesireVc,
    #[serde(rename = "desire-x")]
    pub desire_x: DesireX,
    #[serde(rename = "desire-xc")]
    pub desire_xc: DesireXc,
    #[serde(rename = "desire-z-a7272")]
    pub desire_z_a7272: DesireZA7272,
    #[serde(rename = "desire-z")]
    pub desire_z: DesireZ,
    pub desire: Desire,
    #[serde(rename = "digital-alphaserver")]
    pub digital_alphaserver: DigitalAlphaserver,
    pub domino: Domino,
    #[serde(rename = "droid-razr")]
    pub droid_razr: DroidRazr,
    pub droidx: Droidx,
    pub f1s: F1s,
    pub f5: F5,
    #[serde(rename = "fire-2015")]
    pub fire_2015: Fire2015,
    #[serde(rename = "fire-2017")]
    pub fire_2017: Fire2017,
    #[serde(rename = "fire-hd-10-2015")]
    pub fire_hd_10_2015: FireHd102015,
    #[serde(rename = "fire-hd-10-2017")]
    pub fire_hd_10_2017: FireHd102017,
    #[serde(rename = "fire-hd-6-2014")]
    pub fire_hd_6_2014: FireHd62014,
    #[serde(rename = "fire-hd-7-2014")]
    pub fire_hd_7_2014: FireHd72014,
    #[serde(rename = "fire-hd-8-2015")]
    pub fire_hd_8_2015: FireHd82015,
    #[serde(rename = "fire-hd-8-2016")]
    pub fire_hd_8_2016: FireHd82016,
    #[serde(rename = "fire-hd-8-2017")]
    pub fire_hd_8_2017: FireHd82017,
    #[serde(rename = "fire-hdx-8-9-2014-wan")]
    pub fire_hdx_8_9_2014_wan: FireHdx892014Wan,
    #[serde(rename = "fire-hdx-8-9-2014-wi-fi")]
    pub fire_hdx_8_9_2014_wi_fi: FireHdx892014WiFi,
    #[serde(rename = "galaxy-ace-3")]
    pub galaxy_ace_3: GalaxyAce3,
    #[serde(rename = "galaxy-ace-ii")]
    pub galaxy_ace_ii: GalaxyAceIi,
    #[serde(rename = "galaxy-admire-4g")]
    pub galaxy_admire_4g: GalaxyAdmire4g,
    #[serde(rename = "galaxy-apollo")]
    pub galaxy_apollo: GalaxyApollo,
    #[serde(rename = "galaxy-beam")]
    pub galaxy_beam: GalaxyBeam,
    #[serde(rename = "galaxy-core-advance")]
    pub galaxy_core_advance: GalaxyCoreAdvance,
    #[serde(rename = "galaxy-core")]
    pub galaxy_core: GalaxyCore,
    #[serde(rename = "galaxy-europa")]
    pub galaxy_europa: GalaxyEuropa,
    #[serde(rename = "galaxy-exhibit")]
    pub galaxy_exhibit: GalaxyExhibit,
    #[serde(rename = "galaxy-express")]
    pub galaxy_express: GalaxyExpress,
    #[serde(rename = "galaxy-gio")]
    pub galaxy_gio: GalaxyGio,
    #[serde(rename = "galaxy-golden")]
    pub galaxy_golden: GalaxyGolden,
    #[serde(rename = "galaxy-grand-2")]
    pub galaxy_grand_2: GalaxyGrand2,
    #[serde(rename = "galaxy-grand-duos")]
    pub galaxy_grand_duos: GalaxyGrandDuos,
    #[serde(rename = "galaxy-grand-neo-duos")]
    pub galaxy_grand_neo_duos: GalaxyGrandNeoDuos,
    #[serde(rename = "galaxy-grand-neo")]
    pub galaxy_grand_neo: GalaxyGrandNeo,
    #[serde(rename = "galaxy-grand")]
    pub galaxy_grand: GalaxyGrand,
    #[serde(rename = "galaxy-j2-prime")]
    pub galaxy_j2_prime: GalaxyJ2Prime,
    #[serde(rename = "galaxy-j7-prime")]
    pub galaxy_j7_prime: GalaxyJ7Prime,
    #[serde(rename = "galaxy-mega-5-8-plus")]
    pub galaxy_mega_5_8_plus: GalaxyMega58Plus,
    #[serde(rename = "galaxy-mega-5-8")]
    pub galaxy_mega_5_8: GalaxyMega58,
    #[serde(rename = "galaxy-mega-6-3")]
    pub galaxy_mega_6_3: GalaxyMega63,
    #[serde(rename = "galaxy-mega-7-0")]
    pub galaxy_mega_7_0: GalaxyMega70,
    #[serde(rename = "galaxy-mini")]
    pub galaxy_mini: GalaxyMini,
    #[serde(rename = "galaxy-nexus")]
    pub galaxy_nexus: GalaxyNexus,
    #[serde(rename = "galaxy-note-10-1")]
    pub galaxy_note_10_1: GalaxyNote101,
    #[serde(rename = "galaxy-note-ii")]
    pub galaxy_note_ii: GalaxyNoteIi,
    #[serde(rename = "galaxy-note-pro")]
    pub galaxy_note_pro: GalaxyNotePro,
    #[serde(rename = "galaxy-note")]
    pub galaxy_note: GalaxyNote,
    #[serde(rename = "galaxy-omnia-ii")]
    pub galaxy_omnia_ii: GalaxyOmniaIi,
    #[serde(rename = "galaxy-premier")]
    pub galaxy_premier: GalaxyPremier,
    #[serde(rename = "galaxy-r")]
    pub galaxy_r: GalaxyR,
    #[serde(rename = "galaxy-s-advance")]
    pub galaxy_s_advance: GalaxySAdvance,
    #[serde(rename = "galaxy-s-duos-2")]
    pub galaxy_s_duos_2: GalaxySDuos2,
    #[serde(rename = "galaxy-s-giorgio-armani")]
    pub galaxy_s_giorgio_armani: GalaxySGiorgioArmani,
    #[serde(rename = "galaxy-s-ii-epic-4g-touch")]
    pub galaxy_s_ii_epic_4g_touch: GalaxySIiEpic4gTouch,
    #[serde(rename = "galaxy-s-ii-lte")]
    pub galaxy_s_ii_lte: GalaxySIiLte,
    #[serde(rename = "galaxy-s-ii-plus")]
    pub galaxy_s_ii_plus: GalaxySIiPlus,
    #[serde(rename = "galaxy-s-ii")]
    pub galaxy_s_ii: GalaxySIi,
    #[serde(rename = "galaxy-s-iii-mini-value-edition")]
    pub galaxy_s_iii_mini_value_edition: GalaxySIiiMiniValueEdition,
    #[serde(rename = "galaxy-s-iii-mini")]
    pub galaxy_s_iii_mini: GalaxySIiiMini,
    #[serde(rename = "galaxy-s-iii")]
    pub galaxy_s_iii: GalaxySIii,
    #[serde(rename = "galaxy-s-plus")]
    pub galaxy_s_plus: GalaxySPlus,
    #[serde(rename = "galaxy-s")]
    pub galaxy_s: GalaxyS,
    #[serde(rename = "galaxy-s3-neo")]
    pub galaxy_s3_neo: GalaxyS3Neo,
    #[serde(rename = "galaxy-s4-active")]
    pub galaxy_s4_active: GalaxyS4Active,
    #[serde(rename = "galaxy-s4-advance")]
    pub galaxy_s4_advance: GalaxyS4Advance,
    #[serde(rename = "galaxy-s4-duos")]
    pub galaxy_s4_duos: GalaxyS4Duos,
    #[serde(rename = "galaxy-s4-mini-duos")]
    pub galaxy_s4_mini_duos: GalaxyS4MiniDuos,
    #[serde(rename = "galaxy-s4-mini")]
    pub galaxy_s4_mini: GalaxyS4Mini,
    #[serde(rename = "galaxy-s4-neo")]
    pub galaxy_s4_neo: GalaxyS4Neo,
    #[serde(rename = "galaxy-s4")]
    pub galaxy_s4: GalaxyS4,
    #[serde(rename = "galaxy-sl")]
    pub galaxy_sl: GalaxySl,
    #[serde(rename = "galaxy-spica")]
    pub galaxy_spica: GalaxySpica,
    #[serde(rename = "galaxy-tab-2-7-0")]
    pub galaxy_tab_2_7_0: GalaxyTab270,
    #[serde(rename = "galaxy-tab-2")]
    pub galaxy_tab_2: GalaxyTab2,
    #[serde(rename = "galaxy-tab-3-10-1")]
    pub galaxy_tab_3_10_1: GalaxyTab3101,
    #[serde(rename = "galaxy-tab-3-7-0-kids")]
    pub galaxy_tab_3_7_0_kids: GalaxyTab370Kids,
    #[serde(rename = "galaxy-tab-3-7-0")]
    pub galaxy_tab_3_7_0: GalaxyTab370,
    #[serde(rename = "galaxy-tab-3-8-0")]
    pub galaxy_tab_3_8_0: GalaxyTab380,
    #[serde(rename = "galaxy-tab-3-lite")]
    pub galaxy_tab_3_lite: GalaxyTab3Lite,
    #[serde(rename = "galaxy-tab-3-neo")]
    pub galaxy_tab_3_neo: GalaxyTab3Neo,
    #[serde(rename = "galaxy-tab-3v-3g")]
    pub galaxy_tab_3v_3g: GalaxyTab3v3g,
    #[serde(rename = "galaxy-tab-3v-7-0")]
    pub galaxy_tab_3v_7_0: GalaxyTab3v70,
    #[serde(rename = "galaxy-tab-4-10-0")]
    pub galaxy_tab_4_10_0: GalaxyTab4100,
    #[serde(rename = "galaxy-tab-4-10-1-advanced")]
    pub galaxy_tab_4_10_1_advanced: GalaxyTab4101Advanced,
    #[serde(rename = "galaxy-tab-4-10-1")]
    pub galaxy_tab_4_10_1: GalaxyTab4101,
    #[serde(rename = "galaxy-tab-4-7-0")]
    pub galaxy_tab_4_7_0: GalaxyTab470,
    #[serde(rename = "galaxy-tab-4-8-0")]
    pub galaxy_tab_4_8_0: GalaxyTab480,
    #[serde(rename = "galaxy-tab-4-nook-10-1")]
    pub galaxy_tab_4_nook_10_1: GalaxyTab4Nook101,
    #[serde(rename = "galaxy-tab-a-10-1")]
    pub galaxy_tab_a_10_1: GalaxyTabA101,
    #[serde(rename = "galaxy-tab-a-7-0")]
    pub galaxy_tab_a_7_0: GalaxyTabA70,
    #[serde(rename = "galaxy-tab-a-8-0")]
    pub galaxy_tab_a_8_0: GalaxyTabA80,
    #[serde(rename = "galaxy-tab-a-9-7")]
    pub galaxy_tab_a_9_7: GalaxyTabA97,
    #[serde(rename = "galaxy-tab-a-plus-8-0")]
    pub galaxy_tab_a_plus_8_0: GalaxyTabAPlus80,
    #[serde(rename = "galaxy-tab-a-plus-9-7")]
    pub galaxy_tab_a_plus_9_7: GalaxyTabAPlus97,
    #[serde(rename = "galaxy-tab-active-8-0")]
    pub galaxy_tab_active_8_0: GalaxyTabActive80,
    #[serde(rename = "galaxy-tab-e-8-0")]
    pub galaxy_tab_e_8_0: GalaxyTabE80,
    #[serde(rename = "galaxy-tab-e-9-6")]
    pub galaxy_tab_e_9_6: GalaxyTabE96,
    #[serde(rename = "galaxy-tab-pro-10-1")]
    pub galaxy_tab_pro_10_1: GalaxyTabPro101,
    #[serde(rename = "galaxy-tab-pro-12-2")]
    pub galaxy_tab_pro_12_2: GalaxyTabPro122,
    #[serde(rename = "galaxy-tab-pro-8-4")]
    pub galaxy_tab_pro_8_4: GalaxyTabPro84,
    #[serde(rename = "galaxy-tab-s-10-5")]
    pub galaxy_tab_s_10_5: GalaxyTabS105,
    #[serde(rename = "galaxy-tab-s-8-4")]
    pub galaxy_tab_s_8_4: GalaxyTabS84,
    #[serde(rename = "galaxy-tab-s2-8-0")]
    pub galaxy_tab_s2_8_0: GalaxyTabS280,
    #[serde(rename = "galaxy-tab-s2-9-7")]
    pub galaxy_tab_s2_9_7: GalaxyTabS297,
    #[serde(rename = "galaxy-tab-s2-plus-9-7")]
    pub galaxy_tab_s2_plus_9_7: GalaxyTabS2Plus97,
    #[serde(rename = "galaxy-tab-s3-9-7")]
    pub galaxy_tab_s3_9_7: GalaxyTabS397,
    #[serde(rename = "galaxy-tab")]
    pub galaxy_tab: GalaxyTab,
    #[serde(rename = "galaxy-tablet")]
    pub galaxy_tablet: GalaxyTablet,
    #[serde(rename = "galaxy-trend-plus")]
    pub galaxy_trend_plus: GalaxyTrendPlus,
    #[serde(rename = "galaxy-view")]
    pub galaxy_view: GalaxyView,
    #[serde(rename = "galaxy-win")]
    pub galaxy_win: GalaxyWin,
    #[serde(rename = "galaxy-young")]
    pub galaxy_young: GalaxyYoung,
    #[serde(rename = "htc-0p3p5")]
    pub htc_0p3p5: Htc0p3p5,
    #[serde(rename = "htc-0p3p7")]
    pub htc_0p3p7: Htc0p3p7,
    #[serde(rename = "htc-0p4e1")]
    pub htc_0p4e1: Htc0p4e1,
    #[serde(rename = "htc-0p6a1")]
    pub htc_0p6a1: Htc0p6a1,
    #[serde(rename = "htc-0p6b")]
    pub htc_0p6b: Htc0p6b,
    #[serde(rename = "htc-0p6b120")]
    pub htc_0p6b120: Htc0p6b120,
    #[serde(rename = "htc-0p6b130")]
    pub htc_0p6b130: Htc0p6b130,
    #[serde(rename = "htc-0p6b6")]
    pub htc_0p6b6: Htc0p6b6,
    #[serde(rename = "htc-0p8b2")]
    pub htc_0p8b2: Htc0p8b2,
    #[serde(rename = "htc-0p9c2")]
    pub htc_0p9c2: Htc0p9c2,
    #[serde(rename = "htc-0p9o1")]
    pub htc_0p9o1: Htc0p9o1,
    #[serde(rename = "htc-0p9o110")]
    pub htc_0p9o110: Htc0p9o110,
    #[serde(rename = "htc-0p9o2")]
    pub htc_0p9o2: Htc0p9o2,
    #[serde(rename = "htc-0pcv2")]
    pub htc_0pcv2: Htc0pcv2,
    #[serde(rename = "htc-0pcv220")]
    pub htc_0pcv220: Htc0pcv220,
    #[serde(rename = "htc-0pe64")]
    pub htc_0pe64: Htc0pe64,
    #[serde(rename = "htc-0pfh1")]
    pub htc_0pfh1: Htc0pfh1,
    #[serde(rename = "htc-0pfj50")]
    pub htc_0pfj50: Htc0pfj50,
    #[serde(rename = "htc-0pgq1")]
    pub htc_0pgq1: Htc0pgq1,
    #[serde(rename = "htc-0pja1")]
    pub htc_0pja1: Htc0pja1,
    #[serde(rename = "htc-0pja10")]
    pub htc_0pja10: Htc0pja10,
    #[serde(rename = "htc-0pkv1")]
    pub htc_0pkv1: Htc0pkv1,
    #[serde(rename = "htc-0pkx2")]
    pub htc_0pkx2: Htc0pkx2,
    #[serde(rename = "htc-0pm912")]
    pub htc_0pm912: Htc0pm912,
    #[serde(rename = "htc-10")]
    pub htc_10: Htc10,
    #[serde(rename = "htc-20")]
    pub htc_20: Htc20,
    #[serde(rename = "htc-22")]
    pub htc_22: Htc22,
    #[serde(rename = "htc-2fkw2bqb3ctl1n4ydwv9rwbkxioejsfkupxlmxgnvny5jbgnn3zevmr8nar969rtxhuyf9nbe7fgwihrnox0yz")]
    pub htc_2fkw2bqb3ctl1n4ydwv9rwbkxioejsfkupxlmxgnvny5jbgnn3zevmr8nar969rtxhuyf9nbe7fgwihrnox0yz: Htc2fkw2bqb3ctl1n4ydwv9rwbkxioejsfkupxlmxgnvny5jbgnn3zevmr8nar969rtxhuyf9nbe7fgwihrnox0yz,
    #[serde(rename = "htc-2pq910")]
    pub htc_2pq910: Htc2pq910,
    #[serde(rename = "htc-2ps6200")]
    pub htc_2ps6200: Htc2ps6200,
    #[serde(rename = "htc-2ps650")]
    pub htc_2ps650: Htc2ps650,
    #[serde(rename = "htc-2pst1")]
    pub htc_2pst1: Htc2pst1,
    #[serde(rename = "htc-2pst2")]
    pub htc_2pst2: Htc2pst2,
    #[serde(rename = "htc-2pvd1")]
    pub htc_2pvd1: Htc2pvd1,
    #[serde(rename = "htc-2pxh3")]
    pub htc_2pxh3: Htc2pxh3,
    #[serde(rename = "htc-2pzc100")]
    pub htc_2pzc100: Htc2pzc100,
    #[serde(rename = "htc-2pzm3")]
    pub htc_2pzm3: Htc2pzm3,
    #[serde(rename = "htc-2q4r100")]
    pub htc_2q4r100: Htc2q4r100,
    #[serde(rename = "htc-3100")]
    pub htc_3100: Htc3100,
    #[serde(rename = "htc-331zlvw")]
    pub htc_331zlvw: Htc331zlvw,
    #[serde(rename = "htc-331zlvwpp")]
    pub htc_331zlvwpp: Htc331zlvwpp,
    #[serde(rename = "htc-606w")]
    pub htc_606w: Htc606w,
    #[serde(rename = "htc-608t")]
    pub htc_608t: Htc608t,
    #[serde(rename = "htc-609d")]
    pub htc_609d: Htc609d,
    #[serde(rename = "htc-6435lvw")]
    pub htc_6435lvw: Htc6435lvw,
    #[serde(rename = "htc-6500lvw")]
    pub htc_6500lvw: Htc6500lvw,
    #[serde(rename = "htc-6515lvw")]
    pub htc_6515lvw: Htc6515lvw,
    #[serde(rename = "htc-6525lvw")]
    pub htc_6525lvw: Htc6525lvw,
    #[serde(rename = "htc-6535lvw")]
    pub htc_6535lvw: Htc6535lvw,
    #[serde(rename = "htc-6545lvw")]
    pub htc_6545lvw: Htc6545lvw,
    #[serde(rename = "htc-6600lvw")]
    pub htc_6600lvw: Htc6600lvw,
    #[serde(rename = "htc-6690lvw")]
    pub htc_6690lvw: Htc6690lvw,
    #[serde(rename = "htc-6900")]
    pub htc_6900: Htc6900,
    #[serde(rename = "htc-6990lvw")]
    pub htc_6990lvw: Htc6990lvw,
    #[serde(rename = "htc-6995lvw")]
    pub htc_6995lvw: Htc6995lvw,
    #[serde(rename = "htc-7")]
    pub htc_7: Htc7,
    #[serde(rename = "htc-7088")]
    pub htc_7088: Htc7088,
    #[serde(rename = "htc-802d")]
    pub htc_802d: Htc802d,
    #[serde(rename = "htc-802t")]
    pub htc_802t: Htc802t,
    #[serde(rename = "htc-802w")]
    pub htc_802w: Htc802w,
    #[serde(rename = "htc-8100")]
    pub htc_8100: Htc8100,
    #[serde(rename = "htc-816g")]
    pub htc_816g: Htc816g,
    #[serde(rename = "htc-8900")]
    pub htc_8900: Htc8900,
    #[serde(rename = "htc-9060")]
    pub htc_9060: Htc9060,
    #[serde(rename = "htc-a320")]
    pub htc_a320: HtcA320,
    #[serde(rename = "htc-a3335")]
    pub htc_a3335: HtcA3335,
    #[serde(rename = "htc-a510a")]
    pub htc_a510a: HtcA510a,
    #[serde(rename = "htc-a510b")]
    pub htc_a510b: HtcA510b,
    #[serde(rename = "htc-a510c")]
    pub htc_a510c: HtcA510c,
    #[serde(rename = "htc-a510e")]
    pub htc_a510e: HtcA510e,
    #[serde(rename = "htc-a53ml")]
    pub htc_a53ml: HtcA53ml,
    #[serde(rename = "htc-a6366")]
    pub htc_a6366: HtcA6366,
    #[serde(rename = "htc-a7275")]
    pub htc_a7275: HtcA7275,
    #[serde(rename = "htc-a8180")]
    pub htc_a8180: HtcA8180,
    #[serde(rename = "htc-a9192")]
    pub htc_a9192: HtcA9192,
    #[serde(rename = "htc-a9u")]
    pub htc_a9u: HtcA9u,
    #[serde(rename = "htc-a9w")]
    pub htc_a9w: HtcA9w,
    #[serde(rename = "htc-acquire")]
    pub htc_acquire: HtcAcquire,
    #[serde(rename = "htc-adr6290us")]
    pub htc_adr6290us: HtcAdr6290us,
    #[serde(rename = "htc-amaze")]
    pub htc_amaze: HtcAmaze,
    #[serde(rename = "htc-applewebkit")]
    pub htc_applewebkit: HtcApplewebkit,
    #[serde(rename = "htc-aria")]
    pub htc_aria: HtcAria,
    #[serde(rename = "htc-b810x")]
    pub htc_b810x: HtcB810x,
    #[serde(rename = "htc-bahamas")]
    pub htc_bahamas: HtcBahamas,
    #[serde(rename = "htc-bravo")]
    pub htc_bravo: HtcBravo,
    #[serde(rename = "htc-c122vl")]
    pub htc_c122vl: HtcC122vl,
    #[serde(rename = "htc-c525c")]
    pub htc_c525c: HtcC525c,
    #[serde(rename = "htc-c525u")]
    pub htc_c525u: HtcC525u,
    #[serde(rename = "htc-c715c")]
    pub htc_c715c: HtcC715c,
    #[serde(rename = "htc-chacha")]
    pub htc_chacha: HtcChacha,
    #[serde(rename = "htc-chrome")]
    pub htc_chrome: HtcChrome,
    #[serde(rename = "htc-click")]
    pub htc_click: HtcClick,
    #[serde(rename = "htc-d100lvw")]
    pub htc_d100lvw: HtcD100lvw,
    #[serde(rename = "htc-d100lvwpp")]
    pub htc_d100lvwpp: HtcD100lvwpp,
    #[serde(rename = "htc-d10i")]
    pub htc_d10i: HtcD10i,
    #[serde(rename = "htc-d10u")]
    pub htc_d10u: HtcD10u,
    #[serde(rename = "htc-d160lvw")]
    pub htc_d160lvw: HtcD160lvw,
    #[serde(rename = "htc-d160lvwpp")]
    pub htc_d160lvwpp: HtcD160lvwpp,
    #[serde(rename = "htc-d200lvw")]
    pub htc_d200lvw: HtcD200lvw,
    #[serde(rename = "htc-d200lvwpp")]
    pub htc_d200lvwpp: HtcD200lvwpp,
    #[serde(rename = "htc-d526h")]
    pub htc_d526h: HtcD526h,
    #[serde(rename = "htc-d530u")]
    pub htc_d530u: HtcD530u,
    #[serde(rename = "htc-d610t")]
    pub htc_d610t: HtcD610t,
    #[serde(rename = "htc-d610x")]
    pub htc_d610x: HtcD610x,
    #[serde(rename = "htc-d616w")]
    pub htc_d616w: HtcD616w,
    #[serde(rename = "htc-d620h")]
    pub htc_d620h: HtcD620h,
    #[serde(rename = "htc-d626ph")]
    pub htc_d626ph: HtcD626ph,
    #[serde(rename = "htc-d626q")]
    pub htc_d626q: HtcD626q,
    #[serde(rename = "htc-d626x")]
    pub htc_d626x: HtcD626x,
    #[serde(rename = "htc-d628u")]
    pub htc_d628u: HtcD628u,
    #[serde(rename = "htc-d650h")]
    pub htc_d650h: HtcD650h,
    #[serde(rename = "htc-d728x")]
    pub htc_d728x: HtcD728x,
    #[serde(rename = "htc-d816h")]
    pub htc_d816h: HtcD816h,
    #[serde(rename = "htc-d816t")]
    pub htc_d816t: HtcD816t,
    #[serde(rename = "htc-d816v")]
    pub htc_d816v: HtcD816v,
    #[serde(rename = "htc-d816w")]
    pub htc_d816w: HtcD816w,
    #[serde(rename = "htc-d816x")]
    pub htc_d816x: HtcD816x,
    #[serde(rename = "htc-d820f")]
    pub htc_d820f: HtcD820f,
    #[serde(rename = "htc-d820mt")]
    pub htc_d820mt: HtcD820mt,
    #[serde(rename = "htc-d820mu")]
    pub htc_d820mu: HtcD820mu,
    #[serde(rename = "htc-d820pi")]
    pub htc_d820pi: HtcD820pi,
    #[serde(rename = "htc-d820s")]
    pub htc_d820s: HtcD820s,
    #[serde(rename = "htc-d820ts")]
    pub htc_d820ts: HtcD820ts,
    #[serde(rename = "htc-d820u")]
    pub htc_d820u: HtcD820u,
    #[serde(rename = "htc-d820us")]
    pub htc_d820us: HtcD820us,
    #[serde(rename = "htc-d820ys")]
    pub htc_d820ys: HtcD820ys,
    #[serde(rename = "htc-d826t")]
    pub htc_d826t: HtcD826t,
    #[serde(rename = "htc-d826y")]
    pub htc_d826y: HtcD826y,
    #[serde(rename = "htc-d828g")]
    pub htc_d828g: HtcD828g,
    #[serde(rename = "htc-d830x")]
    pub htc_d830x: HtcD830x,
    #[serde(rename = "htc-diamond")]
    pub htc_diamond: HtcDiamond,
    #[serde(rename = "htc-dlxub1")]
    pub htc_dlxub1: HtcDlxub1,
    #[serde(rename = "htc-dream")]
    pub htc_dream: HtcDream,
    #[serde(rename = "htc-droid")]
    pub htc_droid: HtcDroid,
    #[serde(rename = "htc-e9")]
    pub htc_e9: HtcE9,
    #[serde(rename = "htc-e9pw")]
    pub htc_e9pw: HtcE9pw,
    #[serde(rename = "htc-e9x")]
    pub htc_e9x: HtcE9x,
    #[serde(rename = "htc-er")]
    pub htc_er: HtcEr,
    #[serde(rename = "htc-eva")]
    pub htc_eva: HtcEva,
    #[serde(rename = "htc-evo")]
    pub htc_evo: HtcEvo,
    #[serde(rename = "htc-evo3d")]
    pub htc_evo3d: HtcEvo3d,
    #[serde(rename = "htc-evodesign4g")]
    pub htc_evodesign4g: HtcEvodesign4g,
    #[serde(rename = "htc-evov4g")]
    pub htc_evov4g: HtcEvov4g,
    #[serde(rename = "htc-explorer")]
    pub htc_explorer: HtcExplorer,
    #[serde(rename = "htc-f5151")]
    pub htc_f5151: HtcF5151,
    #[serde(rename = "htc-first")]
    pub htc_first: HtcFirst,
    #[serde(rename = "htc-flyer")]
    pub htc_flyer: HtcFlyer,
    #[serde(rename = "htc-g1")]
    pub htc_g1: HtcG1,
    #[serde(rename = "htc-g18")]
    pub htc_g18: HtcG18,
    #[serde(rename = "htc-g2")]
    pub htc_g2: HtcG2,
    #[serde(rename = "htc-g3")]
    pub htc_g3: HtcG3,
    #[serde(rename = "htc-glacier")]
    pub htc_glacier: HtcGlacier,
    #[serde(rename = "htc-gof")]
    pub htc_gof: HtcGof,
    #[serde(rename = "htc-gone")]
    pub htc_gone: HtcGone,
    #[serde(rename = "htc-gratia")]
    pub htc_gratia: HtcGratia,
    #[serde(rename = "htc-h1000c")]
    pub htc_h1000c: HtcH1000c,
    #[serde(rename = "htc-h2000c")]
    pub htc_h2000c: HtcH2000c,
    #[serde(rename = "htc-h3000c")]
    pub htc_h3000c: HtcH3000c,
    #[serde(rename = "htc-hd")]
    pub htc_hd: HtcHd,
    #[serde(rename = "htc-hd2")]
    pub htc_hd2: HtcHd2,
    #[serde(rename = "htc-hd7")]
    pub htc_hd7: HtcHd7,
    #[serde(rename = "htc-hero")]
    pub htc_hero: HtcHero,
    #[serde(rename = "htc-holiday")]
    pub htc_holiday: HtcHoliday,
    #[serde(rename = "htc-htc")]
    pub htc_htc: HtcHtc,
    #[serde(rename = "htc-incredible")]
    pub htc_incredible: HtcIncredible,
    #[serde(rename = "htc-incrediblec")]
    pub htc_incrediblec: HtcIncrediblec,
    #[serde(rename = "htc-incrediblee")]
    pub htc_incrediblee: HtcIncrediblee,
    #[serde(rename = "htc-incredibles")]
    pub htc_incredibles: HtcIncredibles,
    #[serde(rename = "htc-k2")]
    pub htc_k2: HtcK2,
    #[serde(rename = "htc-kingdom")]
    pub htc_kingdom: HtcKingdom,
    #[serde(rename = "htc-legend")]
    pub htc_legend: HtcLegend,
    #[serde(rename = "htc-leo")]
    pub htc_leo: HtcLeo,
    #[serde(rename = "htc-lexikon")]
    pub htc_lexikon: HtcLexikon,
    #[serde(rename = "htc-m10f")]
    pub htc_m10f: HtcM10f,
    #[serde(rename = "htc-m10h")]
    pub htc_m10h: HtcM10h,
    #[serde(rename = "htc-m8")]
    pub htc_m8: HtcM8,
    #[serde(rename = "htc-m8minx")]
    pub htc_m8minx: HtcM8minx,
    #[serde(rename = "htc-m8st")]
    pub htc_m8st: HtcM8st,
    #[serde(rename = "htc-m8sw")]
    pub htc_m8sw: HtcM8sw,
    #[serde(rename = "htc-m8sx")]
    pub htc_m8sx: HtcM8sx,
    #[serde(rename = "htc-m8w")]
    pub htc_m8w: HtcM8w,
    #[serde(rename = "htc-m8x")]
    pub htc_m8x: HtcM8x,
    #[serde(rename = "htc-m910x")]
    pub htc_m910x: HtcM910x,
    #[serde(rename = "htc-m9e")]
    pub htc_m9e: HtcM9e,
    #[serde(rename = "htc-m9et")]
    pub htc_m9et: HtcM9et,
    #[serde(rename = "htc-m9ew")]
    pub htc_m9ew: HtcM9ew,
    #[serde(rename = "htc-m9pw")]
    pub htc_m9pw: HtcM9pw,
    #[serde(rename = "htc-m9px")]
    pub htc_m9px: HtcM9px,
    #[serde(rename = "htc-m9u")]
    pub htc_m9u: HtcM9u,
    #[serde(rename = "htc-magic")]
    pub htc_magic: HtcMagic,
    #[serde(rename = "htc-mytouch")]
    pub htc_mytouch: HtcMytouch,
    #[serde(rename = "htc-nexus")]
    pub htc_nexus: HtcNexus,
    #[serde(rename = "htc-one")]
    pub htc_one: HtcOne,
    #[serde(rename = "htc-p3300")]
    pub htc_p3300: HtcP3300,
    #[serde(rename = "htc-p3450")]
    pub htc_p3450: HtcP3450,
    #[serde(rename = "htc-p3650")]
    pub htc_p3650: HtcP3650,
    #[serde(rename = "htc-p3700")]
    pub htc_p3700: HtcP3700,
    #[serde(rename = "htc-p4350")]
    pub htc_p4350: HtcP4350,
    #[serde(rename = "htc-p4550")]
    pub htc_p4550: HtcP4550,
    #[serde(rename = "htc-p4600")]
    pub htc_p4600: HtcP4600,
    #[serde(rename = "htc-p515e")]
    pub htc_p515e: HtcP515e,
    #[serde(rename = "htc-p6500")]
    pub htc_p6500: HtcP6500,
    #[serde(rename = "htc-p715a")]
    pub htc_p715a: HtcP715a,
    #[serde(rename = "htc-panache")]
    pub htc_panache: HtcPanache,
    #[serde(rename = "htc-pc93100")]
    pub htc_pc93100: HtcPc93100,
    #[serde(rename = "htc-pg09410")]
    pub htc_pg09410: HtcPg09410,
    #[serde(rename = "htc-pg762")]
    pub htc_pg762: HtcPg762,
    #[serde(rename = "htc-ph06130")]
    pub htc_ph06130: HtcPh06130,
    #[serde(rename = "htc-ph39100")]
    pub htc_ph39100: HtcPh39100,
    #[serde(rename = "htc-pls7373adr")]
    pub htc_pls7373adr: HtcPls7373adr,
    #[serde(rename = "htc-pn071")]
    pub htc_pn071: HtcPn071,
    #[serde(rename = "htc-pn07120")]
    pub htc_pn07120: HtcPn07120,
    #[serde(rename = "htc-pn072")]
    pub htc_pn072: HtcPn072,
    #[serde(rename = "htc-po582")]
    pub htc_po582: HtcPo582,
    #[serde(rename = "htc-po58220")]
    pub htc_po58220: HtcPo58220,
    #[serde(rename = "htc-po881")]
    pub htc_po881: HtcPo881,
    #[serde(rename = "htc-poo")]
    pub htc_poo: HtcPoo,
    #[serde(rename = "htc-prophet")]
    pub htc_prophet: HtcProphet,
    #[serde(rename = "htc-pyramid")]
    pub htc_pyramid: HtcPyramid,
    #[serde(rename = "htc-rezound")]
    pub htc_rezound: HtcRezound,
    #[serde(rename = "htc-rhyme")]
    pub htc_rhyme: HtcRhyme,
    #[serde(rename = "htc-runnymede")]
    pub htc_runnymede: HtcRunnymede,
    #[serde(rename = "htc-s510b")]
    pub htc_s510b: HtcS510b,
    #[serde(rename = "htc-s620")]
    pub htc_s620: HtcS620,
    #[serde(rename = "htc-s710d")]
    pub htc_s710d: HtcS710d,
    #[serde(rename = "htc-s710e")]
    pub htc_s710e: HtcS710e,
    #[serde(rename = "htc-s720e")]
    pub htc_s720e: HtcS720e,
    #[serde(rename = "htc-s720t")]
    pub htc_s720t: HtcS720t,
    #[serde(rename = "htc-s730")]
    pub htc_s730: HtcS730,
    #[serde(rename = "htc-s743")]
    pub htc_s743: HtcS743,
    #[serde(rename = "htc-s9u")]
    pub htc_s9u: HtcS9u,
    #[serde(rename = "htc-salsa")]
    pub htc_salsa: HtcSalsa,
    #[serde(rename = "htc-sensation")]
    pub htc_sensation: HtcSensation,
    #[serde(rename = "htc-sensationxe")]
    pub htc_sensationxe: HtcSensationxe,
    #[serde(rename = "htc-sensationxl")]
    pub htc_sensationxl: HtcSensationxl,
    #[serde(rename = "htc-smart")]
    pub htc_smart: HtcSmart,
    #[serde(rename = "htc-snap")]
    pub htc_snap: HtcSnap,
    #[serde(rename = "htc-sprint")]
    pub htc_sprint: HtcSprint,
    #[serde(rename = "htc-st7377")]
    pub htc_st7377: HtcSt7377,
    #[serde(rename = "htc-t120c")]
    pub htc_t120c: HtcT120c,
    #[serde(rename = "htc-t320e")]
    pub htc_t320e: HtcT320e,
    #[serde(rename = "htc-t328d")]
    pub htc_t328d: HtcT328d,
    #[serde(rename = "htc-t328t")]
    pub htc_t328t: HtcT328t,
    #[serde(rename = "htc-t329t")]
    pub htc_t329t: HtcT329t,
    #[serde(rename = "htc-t329w")]
    pub htc_t329w: HtcT329w,
    #[serde(rename = "htc-t528t")]
    pub htc_t528t: HtcT528t,
    #[serde(rename = "htc-t9295")]
    pub htc_t9295: HtcT9295,
    #[serde(rename = "htc-tattoo")]
    pub htc_tattoo: HtcTattoo,
    #[serde(rename = "htc-titan")]
    pub htc_titan: HtcTitan,
    #[serde(rename = "htc-touch")]
    pub htc_touch: HtcTouch,
    #[serde(rename = "htc-touch2")]
    pub htc_touch2: HtcTouch2,
    #[serde(rename = "htc-tytn")]
    pub htc_tytn: HtcTytn,
    #[serde(rename = "htc-u11")]
    pub htc_u11: HtcU11,
    #[serde(rename = "htc-u12")]
    pub htc_u12: HtcU12,
    #[serde(rename = "htc-ui")]
    pub htc_ui: HtcUi,
    #[serde(rename = "htc-v01")]
    pub htc_v01: HtcV01,
    #[serde(rename = "htc-v1")]
    pub htc_v1: HtcV1,
    #[serde(rename = "htc-velocity")]
    pub htc_velocity: HtcVelocity,
    #[serde(rename = "htc-vision")]
    pub htc_vision: HtcVision,
    #[serde(rename = "htc-vivo")]
    pub htc_vivo: HtcVivo,
    #[serde(rename = "htc-vle")]
    pub htc_vle: HtcVle,
    #[serde(rename = "htc-vya2f4")]
    pub htc_vya2f4: HtcVya2f4,
    #[serde(rename = "htc-wildfire")]
    pub htc_wildfire: HtcWildfire,
    #[serde(rename = "htc-wildfires")]
    pub htc_wildfires: HtcWildfires,
    #[serde(rename = "htc-windows")]
    pub htc_windows: HtcWindows,
    #[serde(rename = "htc-wizard")]
    pub htc_wizard: HtcWizard,
    #[serde(rename = "htc-x315e")]
    pub htc_x315e: HtcX315e,
    #[serde(rename = "htc-x515a")]
    pub htc_x515a: HtcX515a,
    #[serde(rename = "htc-x515c")]
    pub htc_x515c: HtcX515c,
    #[serde(rename = "htc-x515e")]
    pub htc_x515e: HtcX515e,
    #[serde(rename = "htc-x710a")]
    pub htc_x710a: HtcX710a,
    #[serde(rename = "htc-x920e")]
    pub htc_x920e: HtcX920e,
    #[serde(rename = "htc-x9u")]
    pub htc_x9u: HtcX9u,
    #[serde(rename = "htc-z560e")]
    pub htc_z560e: HtcZ560e,
    #[serde(rename = "htc-z710a")]
    pub htc_z710a: HtcZ710a,
    #[serde(rename = "htc-z710t")]
    pub htc_z710t: HtcZ710t,
    #[serde(rename = "huawei-y5")]
    pub huawei_y5: HuaweiY5,
    pub iconia: Iconia,
    pub imprint: Imprint,
    pub instinct: Instinct,
    #[serde(rename = "ipad-1")]
    pub ipad_1: Ipad1,
    #[serde(rename = "ipad-2")]
    pub ipad_2: Ipad2,
    #[serde(rename = "ipad-3")]
    pub ipad_3: Ipad3,
    #[serde(rename = "ipad-4")]
    pub ipad_4: Ipad4,
    #[serde(rename = "ipad-air-2")]
    pub ipad_air_2: IpadAir2,
    #[serde(rename = "ipad-air-pro-9-7-inch")]
    pub ipad_air_pro_9_7_inch: IpadAirPro97Inch,
    #[serde(rename = "ipad-air-pro")]
    pub ipad_air_pro: IpadAirPro,
    #[serde(rename = "ipad-air")]
    pub ipad_air: IpadAir,
    pub ipad: Ipad,
    #[serde(rename = "iphone-3gs")]
    pub iphone_3gs: Iphone3gs,
    #[serde(rename = "iphone-4")]
    pub iphone_4: Iphone4,
    #[serde(rename = "iphone-4s")]
    pub iphone_4s: Iphone4s,
    #[serde(rename = "iphone-5")]
    pub iphone_5: Iphone5,
    #[serde(rename = "iphone-5c")]
    pub iphone_5c: Iphone5c,
    #[serde(rename = "iphone-5s")]
    pub iphone_5s: Iphone5s,
    #[serde(rename = "iphone-6-plus")]
    pub iphone_6_plus: Iphone6Plus,
    #[serde(rename = "iphone-6")]
    pub iphone_6: Iphone6,
    #[serde(rename = "iphone-6s-plus")]
    pub iphone_6s_plus: Iphone6sPlus,
    #[serde(rename = "iphone-6s")]
    pub iphone_6s: Iphone6s,
    #[serde(rename = "iphone-7")]
    pub iphone_7: Iphone7,
    #[serde(rename = "iphone-se")]
    pub iphone_se: IphoneSe,
    pub iphone: Iphone,
    pub ipod: Ipod,
    #[serde(rename = "j7-pro")]
    pub j7_pro: J7Pro,
    pub j7: J7,
    pub jasper: Jasper,
    #[serde(rename = "karbonn-1")]
    pub karbonn_1: Karbonn1,
    #[serde(rename = "karbonn-k3000")]
    pub karbonn_k3000: KarbonnK3000,
    #[serde(rename = "karbonn-k9")]
    pub karbonn_k9: KarbonnK9,
    #[serde(rename = "kindle-1-0")]
    pub kindle_1_0: Kindle10,
    #[serde(rename = "kindle-2-0")]
    pub kindle_2_0: Kindle20,
    #[serde(rename = "kindle-2-3")]
    pub kindle_2_3: Kindle23,
    #[serde(rename = "kindle-2-5")]
    pub kindle_2_5: Kindle25,
    #[serde(rename = "kindle-3")]
    pub kindle_3: Kindle3,
    #[serde(rename = "kindle-fire-2nd-gen")]
    pub kindle_fire_2nd_gen: KindleFire2ndGen,
    #[serde(rename = "kindle-fire-hd-7-2013")]
    pub kindle_fire_hd_7_2013: KindleFireHd72013,
    #[serde(rename = "kindle-fire-hd-7")]
    pub kindle_fire_hd_7: KindleFireHd7,
    #[serde(rename = "kindle-fire-hd-8-9-wan")]
    pub kindle_fire_hd_8_9_wan: KindleFireHd89Wan,
    #[serde(rename = "kindle-fire-hd-8-9-wi-fi")]
    pub kindle_fire_hd_8_9_wi_fi: KindleFireHd89WiFi,
    #[serde(rename = "kindle-fire-hdx-7-2013-wan")]
    pub kindle_fire_hdx_7_2013_wan: KindleFireHdx72013Wan,
    #[serde(rename = "kindle-fire-hdx-7-2013-wi-fi")]
    pub kindle_fire_hdx_7_2013_wi_fi: KindleFireHdx72013WiFi,
    #[serde(rename = "kindle-fire-hdx-8-9-2013-wan")]
    pub kindle_fire_hdx_8_9_2013_wan: KindleFireHdx892013Wan,
    #[serde(rename = "kindle-fire-hdx-8-9-2013-wi-fi")]
    pub kindle_fire_hdx_8_9_2013_wi_fi: KindleFireHdx892013WiFi,
    #[serde(rename = "kindle-fire")]
    pub kindle_fire: KindleFire,
    pub kindle: Kindle,
    #[serde(rename = "lg-4iqj")]
    pub lg_4iqj: Lg4iqj,
    #[serde(rename = "lg-4qids9gmhfkskf69uybvgdkgc4fw6a0u2esximevrxhuykscsybp4zz0f")]
    pub lg_4qids9gmhfkskf69uybvgdkgc4fw6a0u2esximevrxhuykscsybp4zz0f: Lg4qids9gmhfkskf69uybvgdkgc4fw6a0u2esximevrxhuykscsybp4zz0f,
    #[serde(rename = "lg-4uh9zxgf")]
    pub lg_4uh9zxgf: Lg4uh9zxgf,
    #[serde(rename = "lg-7gynvw")]
    pub lg_7gynvw: Lg7gynvw,
    #[serde(rename = "lg-9x4bzft")]
    pub lg_9x4bzft: Lg9x4bzft,
    #[serde(rename = "lg-a133")]
    pub lg_a133: LgA133,
    #[serde(rename = "lg-a165")]
    pub lg_a165: LgA165,
    #[serde(rename = "lg-a200")]
    pub lg_a200: LgA200,
    #[serde(rename = "lg-a250")]
    pub lg_a250: LgA250,
    #[serde(rename = "lg-a290")]
    pub lg_a290: LgA290,
    #[serde(rename = "lg-a340")]
    pub lg_a340: LgA340,
    #[serde(rename = "lg-a350")]
    pub lg_a350: LgA350,
    #[serde(rename = "lg-a380")]
    pub lg_a380: LgA380,
    #[serde(rename = "lg-a390")]
    pub lg_a390: LgA390,
    #[serde(rename = "lg-a395")]
    pub lg_a395: LgA395,
    #[serde(rename = "lg-a447")]
    pub lg_a447: LgA447,
    #[serde(rename = "lg-ak495")]
    pub lg_ak495: LgAk495,
    #[serde(rename = "lg-an170")]
    pub lg_an170: LgAn170,
    #[serde(rename = "lg-an200")]
    pub lg_an200: LgAn200,
    #[serde(rename = "lg-an272")]
    pub lg_an272: LgAn272,
    #[serde(rename = "lg-an430")]
    pub lg_an430: LgAn430,
    #[serde(rename = "lg-an510")]
    pub lg_an510: LgAn510,
    #[serde(rename = "lg-as110")]
    pub lg_as110: LgAs110,
    #[serde(rename = "lg-as323")]
    pub lg_as323: LgAs323,
    #[serde(rename = "lg-as330")]
    pub lg_as330: LgAs330,
    #[serde(rename = "lg-as375")]
    pub lg_as375: LgAs375,
    #[serde(rename = "lg-as680")]
    pub lg_as680: LgAs680,
    #[serde(rename = "lg-as695")]
    pub lg_as695: LgAs695,
    #[serde(rename = "lg-as730")]
    pub lg_as730: LgAs730,
    #[serde(rename = "lg-as780")]
    pub lg_as780: LgAs780,
    #[serde(rename = "lg-as855")]
    pub lg_as855: LgAs855,
    #[serde(rename = "lg-as990")]
    pub lg_as990: LgAs990,
    #[serde(rename = "lg-as991")]
    pub lg_as991: LgAs991,
    #[serde(rename = "lg-as992")]
    pub lg_as992: LgAs992,
    #[serde(rename = "lg-as993")]
    pub lg_as993: LgAs993,
    #[serde(rename = "lg-ax8370")]
    pub lg_ax8370: LgAx8370,
    #[serde(rename = "lg-b450")]
    pub lg_b450: LgB450,
    #[serde(rename = "lg-b460")]
    pub lg_b460: LgB460,
    #[serde(rename = "lg-b470")]
    pub lg_b470: LgB470,
    #[serde(rename = "lg-bh3uz8uyns")]
    pub lg_bh3uz8uyns: LgBh3uz8uyns,
    #[serde(rename = "lg-bl40f")]
    pub lg_bl40f: LgBl40f,
    #[serde(rename = "lg-c105")]
    pub lg_c105: LgC105,
    #[serde(rename = "lg-c193")]
    pub lg_c193: LgC193,
    #[serde(rename = "lg-c195")]
    pub lg_c195: LgC195,
    #[serde(rename = "lg-c195n")]
    pub lg_c195n: LgC195n,
    #[serde(rename = "lg-c199")]
    pub lg_c199: LgC199,
    #[serde(rename = "lg-c205")]
    pub lg_c205: LgC205,
    #[serde(rename = "lg-c297")]
    pub lg_c297: LgC297,
    #[serde(rename = "lg-c299")]
    pub lg_c299: LgC299,
    #[serde(rename = "lg-c300")]
    pub lg_c300: LgC300,
    #[serde(rename = "lg-c320")]
    pub lg_c320: LgC320,
    #[serde(rename = "lg-c333")]
    pub lg_c333: LgC333,
    #[serde(rename = "lg-c360")]
    pub lg_c360: LgC360,
    #[serde(rename = "lg-c370")]
    pub lg_c370: LgC370,
    #[serde(rename = "lg-c375")]
    pub lg_c375: LgC375,
    #[serde(rename = "lg-c395")]
    pub lg_c395: LgC395,
    #[serde(rename = "lg-c398")]
    pub lg_c398: LgC398,
    #[serde(rename = "lg-c410")]
    pub lg_c410: LgC410,
    #[serde(rename = "lg-c555")]
    pub lg_c555: LgC555,
    #[serde(rename = "lg-c660")]
    pub lg_c660: LgC660,
    #[serde(rename = "lg-c660h")]
    pub lg_c660h: LgC660h,
    #[serde(rename = "lg-c660r")]
    pub lg_c660r: LgC660r,
    #[serde(rename = "lg-c710h")]
    pub lg_c710h: LgC710h,
    #[serde(rename = "lg-c729")]
    pub lg_c729: LgC729,
    #[serde(rename = "lg-c800")]
    pub lg_c800: LgC800,
    #[serde(rename = "lg-c800g")]
    pub lg_c800g: LgC800g,
    #[serde(rename = "lg-c900")]
    pub lg_c900: LgC900,
    #[serde(rename = "lg-c900b")]
    pub lg_c900b: LgC900b,
    #[serde(rename = "lg-c900k")]
    pub lg_c900k: LgC900k,
    #[serde(rename = "lg-ct810")]
    pub lg_ct810: LgCt810,
    #[serde(rename = "lg-cu920")]
    pub lg_cu920: LgCu920,
    #[serde(rename = "lg-d100")]
    pub lg_d100: LgD100,
    #[serde(rename = "lg-d100ar")]
    pub lg_d100ar: LgD100ar,
    #[serde(rename = "lg-d105")]
    pub lg_d105: LgD105,
    #[serde(rename = "lg-d107")]
    pub lg_d107: LgD107,
    #[serde(rename = "lg-d120")]
    pub lg_d120: LgD120,
    #[serde(rename = "lg-d120ar")]
    pub lg_d120ar: LgD120ar,
    #[serde(rename = "lg-d125")]
    pub lg_d125: LgD125,
    #[serde(rename = "lg-d150")]
    pub lg_d150: LgD150,
    #[serde(rename = "lg-d157f")]
    pub lg_d157f: LgD157f,
    #[serde(rename = "lg-d160")]
    pub lg_d160: LgD160,
    #[serde(rename = "lg-d165")]
    pub lg_d165: LgD165,
    #[serde(rename = "lg-d165ar")]
    pub lg_d165ar: LgD165ar,
    #[serde(rename = "lg-d170")]
    pub lg_d170: LgD170,
    #[serde(rename = "lg-d175f")]
    pub lg_d175f: LgD175f,
    #[serde(rename = "lg-d180f")]
    pub lg_d180f: LgD180f,
    #[serde(rename = "lg-d213")]
    pub lg_d213: LgD213,
    #[serde(rename = "lg-d213ar")]
    pub lg_d213ar: LgD213ar,
    #[serde(rename = "lg-d221")]
    pub lg_d221: LgD221,
    #[serde(rename = "lg-d227")]
    pub lg_d227: LgD227,
    #[serde(rename = "lg-d280")]
    pub lg_d280: LgD280,
    #[serde(rename = "lg-d280n")]
    pub lg_d280n: LgD280n,
    #[serde(rename = "lg-d285")]
    pub lg_d285: LgD285,
    #[serde(rename = "lg-d290")]
    pub lg_d290: LgD290,
    #[serde(rename = "lg-d290n")]
    pub lg_d290n: LgD290n,
    #[serde(rename = "lg-d295")]
    pub lg_d295: LgD295,
    #[serde(rename = "lg-d300")]
    pub lg_d300: LgD300,
    #[serde(rename = "lg-d315")]
    pub lg_d315: LgD315,
    #[serde(rename = "lg-d320")]
    pub lg_d320: LgD320,
    #[serde(rename = "lg-d320ar")]
    pub lg_d320ar: LgD320ar,
    #[serde(rename = "lg-d320n")]
    pub lg_d320n: LgD320n,
    #[serde(rename = "lg-d321")]
    pub lg_d321: LgD321,
    #[serde(rename = "lg-d325")]
    pub lg_d325: LgD325,
    #[serde(rename = "lg-d329")]
    pub lg_d329: LgD329,
    #[serde(rename = "lg-d331")]
    pub lg_d331: LgD331,
    #[serde(rename = "lg-d335")]
    pub lg_d335: LgD335,
    #[serde(rename = "lg-d335e")]
    pub lg_d335e: LgD335e,
    #[serde(rename = "lg-d337")]
    pub lg_d337: LgD337,
    #[serde(rename = "lg-d370")]
    pub lg_d370: LgD370,
    #[serde(rename = "lg-d373")]
    pub lg_d373: LgD373,
    #[serde(rename = "lg-d375ar")]
    pub lg_d375ar: LgD375ar,
    #[serde(rename = "lg-d380")]
    pub lg_d380: LgD380,
    #[serde(rename = "lg-d385")]
    pub lg_d385: LgD385,
    #[serde(rename = "lg-d390")]
    pub lg_d390: LgD390,
    #[serde(rename = "lg-d390ar")]
    pub lg_d390ar: LgD390ar,
    #[serde(rename = "lg-d390n")]
    pub lg_d390n: LgD390n,
    #[serde(rename = "lg-d392")]
    pub lg_d392: LgD392,
    #[serde(rename = "lg-d393")]
    pub lg_d393: LgD393,
    #[serde(rename = "lg-d400")]
    pub lg_d400: LgD400,
    #[serde(rename = "lg-d405")]
    pub lg_d405: LgD405,
    #[serde(rename = "lg-d405n")]
    pub lg_d405n: LgD405n,
    #[serde(rename = "lg-d410")]
    pub lg_d410: LgD410,
    #[serde(rename = "lg-d410hn")]
    pub lg_d410hn: LgD410hn,
    #[serde(rename = "lg-d415")]
    pub lg_d415: LgD415,
    #[serde(rename = "lg-d500")]
    pub lg_d500: LgD500,
    #[serde(rename = "lg-d505")]
    pub lg_d505: LgD505,
    #[serde(rename = "lg-d520")]
    pub lg_d520: LgD520,
    #[serde(rename = "lg-d605")]
    pub lg_d605: LgD605,
    #[serde(rename = "lg-d610ar")]
    pub lg_d610ar: LgD610ar,
    #[serde(rename = "lg-d610tr")]
    pub lg_d610tr: LgD610tr,
    #[serde(rename = "lg-d618")]
    pub lg_d618: LgD618,
    #[serde(rename = "lg-d620")]
    pub lg_d620: LgD620,
    #[serde(rename = "lg-d625")]
    pub lg_d625: LgD625,
    #[serde(rename = "lg-d631")]
    pub lg_d631: LgD631,
    #[serde(rename = "lg-d680")]
    pub lg_d680: LgD680,
    #[serde(rename = "lg-d681")]
    pub lg_d681: LgD681,
    #[serde(rename = "lg-d682")]
    pub lg_d682: LgD682,
    #[serde(rename = "lg-d682tr")]
    pub lg_d682tr: LgD682tr,
    #[serde(rename = "lg-d683")]
    pub lg_d683: LgD683,
    #[serde(rename = "lg-d685")]
    pub lg_d685: LgD685,
    #[serde(rename = "lg-d686")]
    pub lg_d686: LgD686,
    #[serde(rename = "lg-d690")]
    pub lg_d690: LgD690,
    #[serde(rename = "lg-d690n")]
    pub lg_d690n: LgD690n,
    #[serde(rename = "lg-d693")]
    pub lg_d693: LgD693,
    #[serde(rename = "lg-d693ar")]
    pub lg_d693ar: LgD693ar,
    #[serde(rename = "lg-d693n")]
    pub lg_d693n: LgD693n,
    #[serde(rename = "lg-d693tr")]
    pub lg_d693tr: LgD693tr,
    #[serde(rename = "lg-d700")]
    pub lg_d700: LgD700,
    #[serde(rename = "lg-d722")]
    pub lg_d722: LgD722,
    #[serde(rename = "lg-d722ar")]
    pub lg_d722ar: LgD722ar,
    #[serde(rename = "lg-d722j")]
    pub lg_d722j: LgD722j,
    #[serde(rename = "lg-d722v")]
    pub lg_d722v: LgD722v,
    #[serde(rename = "lg-d723")]
    pub lg_d723: LgD723,
    #[serde(rename = "lg-d724")]
    pub lg_d724: LgD724,
    #[serde(rename = "lg-d725")]
    pub lg_d725: LgD725,
    #[serde(rename = "lg-d727")]
    pub lg_d727: LgD727,
    #[serde(rename = "lg-d800")]
    pub lg_d800: LgD800,
    #[serde(rename = "lg-d801")]
    pub lg_d801: LgD801,
    #[serde(rename = "lg-d802")]
    pub lg_d802: LgD802,
    #[serde(rename = "lg-d802t")]
    pub lg_d802t: LgD802t,
    #[serde(rename = "lg-d802tr")]
    pub lg_d802tr: LgD802tr,
    #[serde(rename = "lg-d803")]
    pub lg_d803: LgD803,
    #[serde(rename = "lg-d805")]
    pub lg_d805: LgD805,
    #[serde(rename = "lg-d806")]
    pub lg_d806: LgD806,
    #[serde(rename = "lg-d838")]
    pub lg_d838: LgD838,
    #[serde(rename = "lg-d850")]
    pub lg_d850: LgD850,
    #[serde(rename = "lg-d851")]
    pub lg_d851: LgD851,
    #[serde(rename = "lg-d852")]
    pub lg_d852: LgD852,
    #[serde(rename = "lg-d852g")]
    pub lg_d852g: LgD852g,
    #[serde(rename = "lg-d855")]
    pub lg_d855: LgD855,
    #[serde(rename = "lg-d855k")]
    pub lg_d855k: LgD855k,
    #[serde(rename = "lg-d856")]
    pub lg_d856: LgD856,
    #[serde(rename = "lg-d857")]
    pub lg_d857: LgD857,
    #[serde(rename = "lg-d858")]
    pub lg_d858: LgD858,
    #[serde(rename = "lg-d858hk")]
    pub lg_d858hk: LgD858hk,
    #[serde(rename = "lg-d950")]
    pub lg_d950: LgD950,
    #[serde(rename = "lg-d950g")]
    pub lg_d950g: LgD950g,
    #[serde(rename = "lg-d955")]
    pub lg_d955: LgD955,
    #[serde(rename = "lg-d956")]
    pub lg_d956: LgD956,
    #[serde(rename = "lg-d958")]
    pub lg_d958: LgD958,
    #[serde(rename = "lg-d959")]
    pub lg_d959: LgD959,
    #[serde(rename = "lg-e400")]
    pub lg_e400: LgE400,
    #[serde(rename = "lg-e400b")]
    pub lg_e400b: LgE400b,
    #[serde(rename = "lg-e400f")]
    pub lg_e400f: LgE400f,
    #[serde(rename = "lg-e400g")]
    pub lg_e400g: LgE400g,
    #[serde(rename = "lg-e400r")]
    pub lg_e400r: LgE400r,
    #[serde(rename = "lg-e405")]
    pub lg_e405: LgE405,
    #[serde(rename = "lg-e405f")]
    pub lg_e405f: LgE405f,
    #[serde(rename = "lg-e410")]
    pub lg_e410: LgE410,
    #[serde(rename = "lg-e410b")]
    pub lg_e410b: LgE410b,
    #[serde(rename = "lg-e410f")]
    pub lg_e410f: LgE410f,
    #[serde(rename = "lg-e410g")]
    pub lg_e410g: LgE410g,
    #[serde(rename = "lg-e410i")]
    pub lg_e410i: LgE410i,
    #[serde(rename = "lg-e411g")]
    pub lg_e411g: LgE411g,
    #[serde(rename = "lg-e415f")]
    pub lg_e415f: LgE415f,
    #[serde(rename = "lg-e415g")]
    pub lg_e415g: LgE415g,
    #[serde(rename = "lg-e420")]
    pub lg_e420: LgE420,
    #[serde(rename = "lg-e425")]
    pub lg_e425: LgE425,
    #[serde(rename = "lg-e425f")]
    pub lg_e425f: LgE425f,
    #[serde(rename = "lg-e425g")]
    pub lg_e425g: LgE425g,
    #[serde(rename = "lg-e425j")]
    pub lg_e425j: LgE425j,
    #[serde(rename = "lg-e430")]
    pub lg_e430: LgE430,
    #[serde(rename = "lg-e431g")]
    pub lg_e431g: LgE431g,
    #[serde(rename = "lg-e435")]
    pub lg_e435: LgE435,
    #[serde(rename = "lg-e435f")]
    pub lg_e435f: LgE435f,
    #[serde(rename = "lg-e435g")]
    pub lg_e435g: LgE435g,
    #[serde(rename = "lg-e435k")]
    pub lg_e435k: LgE435k,
    #[serde(rename = "lg-e440")]
    pub lg_e440: LgE440,
    #[serde(rename = "lg-e440f")]
    pub lg_e440f: LgE440f,
    #[serde(rename = "lg-e440g")]
    pub lg_e440g: LgE440g,
    #[serde(rename = "lg-e445")]
    pub lg_e445: LgE445,
    #[serde(rename = "lg-e450")]
    pub lg_e450: LgE450,
    #[serde(rename = "lg-e450b")]
    pub lg_e450b: LgE450b,
    #[serde(rename = "lg-e450f")]
    pub lg_e450f: LgE450f,
    #[serde(rename = "lg-e450g")]
    pub lg_e450g: LgE450g,
    #[serde(rename = "lg-e451g")]
    pub lg_e451g: LgE451g,
    #[serde(rename = "lg-e455")]
    pub lg_e455: LgE455,
    #[serde(rename = "lg-e455f")]
    pub lg_e455f: LgE455f,
    #[serde(rename = "lg-e455g")]
    pub lg_e455g: LgE455g,
    #[serde(rename = "lg-e460")]
    pub lg_e460: LgE460,
    #[serde(rename = "lg-e460f")]
    pub lg_e460f: LgE460f,
    #[serde(rename = "lg-e465f")]
    pub lg_e465f: LgE465f,
    #[serde(rename = "lg-e465g")]
    pub lg_e465g: LgE465g,
    #[serde(rename = "lg-e467f")]
    pub lg_e467f: LgE467f,
    #[serde(rename = "lg-e470f")]
    pub lg_e470f: LgE470f,
    #[serde(rename = "lg-e475f")]
    pub lg_e475f: LgE475f,
    #[serde(rename = "lg-e510")]
    pub lg_e510: LgE510,
    #[serde(rename = "lg-e510f")]
    pub lg_e510f: LgE510f,
    #[serde(rename = "lg-e510g")]
    pub lg_e510g: LgE510g,
    #[serde(rename = "lg-e610")]
    pub lg_e610: LgE610,
    #[serde(rename = "lg-e610v")]
    pub lg_e610v: LgE610v,
    #[serde(rename = "lg-e612")]
    pub lg_e612: LgE612,
    #[serde(rename = "lg-e612f")]
    pub lg_e612f: LgE612f,
    #[serde(rename = "lg-e612g")]
    pub lg_e612g: LgE612g,
    #[serde(rename = "lg-e615")]
    pub lg_e615: LgE615,
    #[serde(rename = "lg-e615f")]
    pub lg_e615f: LgE615f,
    #[serde(rename = "lg-e617g")]
    pub lg_e617g: LgE617g,
    #[serde(rename = "lg-e720")]
    pub lg_e720: LgE720,
    #[serde(rename = "lg-e720b")]
    pub lg_e720b: LgE720b,
    #[serde(rename = "lg-e730")]
    pub lg_e730: LgE730,
    #[serde(rename = "lg-e739")]
    pub lg_e739: LgE739,
    #[serde(rename = "lg-e900")]
    pub lg_e900: LgE900,
    #[serde(rename = "lg-e900h")]
    pub lg_e900h: LgE900h,
    #[serde(rename = "lg-e970")]
    pub lg_e970: LgE970,
    #[serde(rename = "lg-e971")]
    pub lg_e971: LgE971,
    #[serde(rename = "lg-e973")]
    pub lg_e973: LgE973,
    #[serde(rename = "lg-e975")]
    pub lg_e975: LgE975,
    #[serde(rename = "lg-e975k")]
    pub lg_e975k: LgE975k,
    #[serde(rename = "lg-e975w")]
    pub lg_e975w: LgE975w,
    #[serde(rename = "lg-e976")]
    pub lg_e976: LgE976,
    #[serde(rename = "lg-e977")]
    pub lg_e977: LgE977,
    #[serde(rename = "lg-e980")]
    pub lg_e980: LgE980,
    #[serde(rename = "lg-e980h")]
    pub lg_e980h: LgE980h,
    #[serde(rename = "lg-e986")]
    pub lg_e986: LgE986,
    #[serde(rename = "lg-e988")]
    pub lg_e988: LgE988,
    #[serde(rename = "lg-e989")]
    pub lg_e989: LgE989,
    #[serde(rename = "lg-f100l")]
    pub lg_f100l: LgF100l,
    #[serde(rename = "lg-f100s")]
    pub lg_f100s: LgF100s,
    #[serde(rename = "lg-f120k")]
    pub lg_f120k: LgF120k,
    #[serde(rename = "lg-f120l")]
    pub lg_f120l: LgF120l,
    #[serde(rename = "lg-f120s")]
    pub lg_f120s: LgF120s,
    #[serde(rename = "lg-f160")]
    pub lg_f160: LgF160,
    #[serde(rename = "lg-f160k")]
    pub lg_f160k: LgF160k,
    #[serde(rename = "lg-f160l")]
    pub lg_f160l: LgF160l,
    #[serde(rename = "lg-f160lv")]
    pub lg_f160lv: LgF160lv,
    #[serde(rename = "lg-f160s")]
    pub lg_f160s: LgF160s,
    #[serde(rename = "lg-f180")]
    pub lg_f180: LgF180,
    #[serde(rename = "lg-f180k")]
    pub lg_f180k: LgF180k,
    #[serde(rename = "lg-f180l")]
    pub lg_f180l: LgF180l,
    #[serde(rename = "lg-f180s")]
    pub lg_f180s: LgF180s,
    #[serde(rename = "lg-f200")]
    pub lg_f200: LgF200,
    #[serde(rename = "lg-f200k")]
    pub lg_f200k: LgF200k,
    #[serde(rename = "lg-f200l")]
    pub lg_f200l: LgF200l,
    #[serde(rename = "lg-f200s")]
    pub lg_f200s: LgF200s,
    #[serde(rename = "lg-f220k")]
    pub lg_f220k: LgF220k,
    #[serde(rename = "lg-f240")]
    pub lg_f240: LgF240,
    #[serde(rename = "lg-f240k")]
    pub lg_f240k: LgF240k,
    #[serde(rename = "lg-f240l")]
    pub lg_f240l: LgF240l,
    #[serde(rename = "lg-f240s")]
    pub lg_f240s: LgF240s,
    #[serde(rename = "lg-f260s")]
    pub lg_f260s: LgF260s,
    #[serde(rename = "lg-f2p69a")]
    pub lg_f2p69a: LgF2p69a,
    #[serde(rename = "lg-f300k")]
    pub lg_f300k: LgF300k,
    #[serde(rename = "lg-f300l")]
    pub lg_f300l: LgF300l,
    #[serde(rename = "lg-f310l")]
    pub lg_f310l: LgF310l,
    #[serde(rename = "lg-f310lr")]
    pub lg_f310lr: LgF310lr,
    #[serde(rename = "lg-f320")]
    pub lg_f320: LgF320,
    #[serde(rename = "lg-f320k")]
    pub lg_f320k: LgF320k,
    #[serde(rename = "lg-f320l")]
    pub lg_f320l: LgF320l,
    #[serde(rename = "lg-f320s")]
    pub lg_f320s: LgF320s,
    #[serde(rename = "lg-f340s")]
    pub lg_f340s: LgF340s,
    #[serde(rename = "lg-f350k")]
    pub lg_f350k: LgF350k,
    #[serde(rename = "lg-f350l")]
    pub lg_f350l: LgF350l,
    #[serde(rename = "lg-f350s")]
    pub lg_f350s: LgF350s,
    #[serde(rename = "lg-f370s")]
    pub lg_f370s: LgF370s,
    #[serde(rename = "lg-f400")]
    pub lg_f400: LgF400,
    #[serde(rename = "lg-f400k")]
    pub lg_f400k: LgF400k,
    #[serde(rename = "lg-f400l")]
    pub lg_f400l: LgF400l,
    #[serde(rename = "lg-f400s")]
    pub lg_f400s: LgF400s,
    #[serde(rename = "lg-f410s")]
    pub lg_f410s: LgF410s,
    #[serde(rename = "lg-f430l")]
    pub lg_f430l: LgF430l,
    #[serde(rename = "lg-f440l")]
    pub lg_f440l: LgF440l,
    #[serde(rename = "lg-f460k")]
    pub lg_f460k: LgF460k,
    #[serde(rename = "lg-f460l")]
    pub lg_f460l: LgF460l,
    #[serde(rename = "lg-f460s")]
    pub lg_f460s: LgF460s,
    #[serde(rename = "lg-f470k")]
    pub lg_f470k: LgF470k,
    #[serde(rename = "lg-f470l")]
    pub lg_f470l: LgF470l,
    #[serde(rename = "lg-f490l")]
    pub lg_f490l: LgF490l,
    #[serde(rename = "lg-f500k")]
    pub lg_f500k: LgF500k,
    #[serde(rename = "lg-f500l")]
    pub lg_f500l: LgF500l,
    #[serde(rename = "lg-f500s")]
    pub lg_f500s: LgF500s,
    #[serde(rename = "lg-f510l")]
    pub lg_f510l: LgF510l,
    #[serde(rename = "lg-f510s")]
    pub lg_f510s: LgF510s,
    #[serde(rename = "lg-f520k")]
    pub lg_f520k: LgF520k,
    #[serde(rename = "lg-f520s")]
    pub lg_f520s: LgF520s,
    #[serde(rename = "lg-f540s")]
    pub lg_f540s: LgF540s,
    #[serde(rename = "lg-f560k")]
    pub lg_f560k: LgF560k,
    #[serde(rename = "lg-f600k")]
    pub lg_f600k: LgF600k,
    #[serde(rename = "lg-f600l")]
    pub lg_f600l: LgF600l,
    #[serde(rename = "lg-f600s")]
    pub lg_f600s: LgF600s,
    #[serde(rename = "lg-f620l")]
    pub lg_f620l: LgF620l,
    #[serde(rename = "lg-f620s")]
    pub lg_f620s: LgF620s,
    #[serde(rename = "lg-f670k")]
    pub lg_f670k: LgF670k,
    #[serde(rename = "lg-f670s")]
    pub lg_f670s: LgF670s,
    #[serde(rename = "lg-f700k")]
    pub lg_f700k: LgF700k,
    #[serde(rename = "lg-f700l")]
    pub lg_f700l: LgF700l,
    #[serde(rename = "lg-f700s")]
    pub lg_f700s: LgF700s,
    #[serde(rename = "lg-f720l")]
    pub lg_f720l: LgF720l,
    #[serde(rename = "lg-f720s")]
    pub lg_f720s: LgF720s,
    #[serde(rename = "lg-f750k")]
    pub lg_f750k: LgF750k,
    #[serde(rename = "lg-f770s")]
    pub lg_f770s: LgF770s,
    #[serde(rename = "lg-f800k")]
    pub lg_f800k: LgF800k,
    #[serde(rename = "lg-f800l")]
    pub lg_f800l: LgF800l,
    #[serde(rename = "lg-f800s")]
    pub lg_f800s: LgF800s,
    #[serde(rename = "lg-f820l")]
    pub lg_f820l: LgF820l,
    #[serde(rename = "lg-felalg8tkz5ooi8qislex")]
    pub lg_felalg8tkz5ooi8qislex: LgFelalg8tkz5ooi8qislex,
    #[serde(rename = "lg-g2")]
    pub lg_g2: LgG2,
    #[serde(rename = "lg-g2x")]
    pub lg_g2x: LgG2x,
    #[serde(rename = "lg-g3")]
    pub lg_g3: LgG3,
    #[serde(rename = "lg-g6")]
    pub lg_g6: LgG6,
    #[serde(rename = "lg-g710")]
    pub lg_g710: LgG710,
    #[serde(rename = "lg-gb190")]
    pub lg_gb190: LgGb190,
    #[serde(rename = "lg-gc900")]
    pub lg_gc900: LgGc900,
    #[serde(rename = "lg-gd510")]
    pub lg_gd510: LgGd510,
    #[serde(rename = "lg-gd580")]
    pub lg_gd580: LgGd580,
    #[serde(rename = "lg-gm205")]
    pub lg_gm205: LgGm205,
    #[serde(rename = "lg-gm360")]
    pub lg_gm360: LgGm360,
    #[serde(rename = "lg-gr500")]
    pub lg_gr500: LgGr500,
    #[serde(rename = "lg-gr500r")]
    pub lg_gr500r: LgGr500r,
    #[serde(rename = "lg-gr700")]
    pub lg_gr700: LgGr700,
    #[serde(rename = "lg-gs290")]
    pub lg_gs290: LgGs290,
    #[serde(rename = "lg-gt350")]
    pub lg_gt350: LgGt350,
    #[serde(rename = "lg-gt365")]
    pub lg_gt365: LgGt365,
    #[serde(rename = "lg-gt400")]
    pub lg_gt400: LgGt400,
    #[serde(rename = "lg-gt405")]
    pub lg_gt405: LgGt405,
    #[serde(rename = "lg-gt4hioauwamgshot6ui4hj48lfdpmbzspr8n7s6yodyuculng")]
    pub lg_gt4hioauwamgshot6ui4hj48lfdpmbzspr8n7s6yodyuculng: LgGt4hioauwamgshot6ui4hj48lfdpmbzspr8n7s6yodyuculng,
    #[serde(rename = "lg-gt505")]
    pub lg_gt505: LgGt505,
    #[serde(rename = "lg-gt540")]
    pub lg_gt540: LgGt540,
    #[serde(rename = "lg-gt540f")]
    pub lg_gt540f: LgGt540f,
    #[serde(rename = "lg-gt550")]
    pub lg_gt550: LgGt550,
    #[serde(rename = "lg-gt810h")]
    pub lg_gt810h: LgGt810h,
    #[serde(rename = "lg-gu290f")]
    pub lg_gu290f: LgGu290f,
    #[serde(rename = "lg-gu295")]
    pub lg_gu295: LgGu295,
    #[serde(rename = "lg-gw300")]
    pub lg_gw300: LgGw300,
    #[serde(rename = "lg-gw305")]
    pub lg_gw305: LgGw305,
    #[serde(rename = "lg-gw382f")]
    pub lg_gw382f: LgGw382f,
    #[serde(rename = "lg-gw620")]
    pub lg_gw620: LgGw620,
    #[serde(rename = "lg-gx200")]
    pub lg_gx200: LgGx200,
    #[serde(rename = "lg-h220")]
    pub lg_h220: LgH220,
    #[serde(rename = "lg-h221")]
    pub lg_h221: LgH221,
    #[serde(rename = "lg-h221ar")]
    pub lg_h221ar: LgH221ar,
    #[serde(rename = "lg-h222")]
    pub lg_h222: LgH222,
    #[serde(rename = "lg-h320")]
    pub lg_h320: LgH320,
    #[serde(rename = "lg-h324")]
    pub lg_h324: LgH324,
    #[serde(rename = "lg-h326")]
    pub lg_h326: LgH326,
    #[serde(rename = "lg-h340")]
    pub lg_h340: LgH340,
    #[serde(rename = "lg-h340ar")]
    pub lg_h340ar: LgH340ar,
    #[serde(rename = "lg-h340gt")]
    pub lg_h340gt: LgH340gt,
    #[serde(rename = "lg-h340n")]
    pub lg_h340n: LgH340n,
    #[serde(rename = "lg-h342")]
    pub lg_h342: LgH342,
    #[serde(rename = "lg-h343")]
    pub lg_h343: LgH343,
    #[serde(rename = "lg-h345")]
    pub lg_h345: LgH345,
    #[serde(rename = "lg-h410")]
    pub lg_h410: LgH410,
    #[serde(rename = "lg-h420")]
    pub lg_h420: LgH420,
    #[serde(rename = "lg-h422")]
    pub lg_h422: LgH422,
    #[serde(rename = "lg-h440")]
    pub lg_h440: LgH440,
    #[serde(rename = "lg-h440ar")]
    pub lg_h440ar: LgH440ar,
    #[serde(rename = "lg-h440n")]
    pub lg_h440n: LgH440n,
    #[serde(rename = "lg-h442")]
    pub lg_h442: LgH442,
    #[serde(rename = "lg-h443")]
    pub lg_h443: LgH443,
    #[serde(rename = "lg-h445")]
    pub lg_h445: LgH445,
    #[serde(rename = "lg-h500")]
    pub lg_h500: LgH500,
    #[serde(rename = "lg-h502")]
    pub lg_h502: LgH502,
    #[serde(rename = "lg-h520")]
    pub lg_h520: LgH520,
    #[serde(rename = "lg-h522")]
    pub lg_h522: LgH522,
    #[serde(rename = "lg-h525")]
    pub lg_h525: LgH525,
    #[serde(rename = "lg-h525n")]
    pub lg_h525n: LgH525n,
    #[serde(rename = "lg-h540")]
    pub lg_h540: LgH540,
    #[serde(rename = "lg-h542")]
    pub lg_h542: LgH542,
    #[serde(rename = "lg-h630")]
    pub lg_h630: LgH630,
    #[serde(rename = "lg-h630d")]
    pub lg_h630d: LgH630d,
    #[serde(rename = "lg-h631")]
    pub lg_h631: LgH631,
    #[serde(rename = "lg-h634")]
    pub lg_h634: LgH634,
    #[serde(rename = "lg-h635")]
    pub lg_h635: LgH635,
    #[serde(rename = "lg-h636")]
    pub lg_h636: LgH636,
    #[serde(rename = "lg-h650")]
    pub lg_h650: LgH650,
    #[serde(rename = "lg-h700")]
    pub lg_h700: LgH700,
    #[serde(rename = "lg-h735")]
    pub lg_h735: LgH735,
    #[serde(rename = "lg-h736")]
    pub lg_h736: LgH736,
    #[serde(rename = "lg-h740")]
    pub lg_h740: LgH740,
    #[serde(rename = "lg-h788")]
    pub lg_h788: LgH788,
    #[serde(rename = "lg-h788sg")]
    pub lg_h788sg: LgH788sg,
    #[serde(rename = "lg-h810")]
    pub lg_h810: LgH810,
    #[serde(rename = "lg-h811")]
    pub lg_h811: LgH811,
    #[serde(rename = "lg-h812")]
    pub lg_h812: LgH812,
    #[serde(rename = "lg-h815")]
    pub lg_h815: LgH815,
    #[serde(rename = "lg-h815k")]
    pub lg_h815k: LgH815k,
    #[serde(rename = "lg-h818")]
    pub lg_h818: LgH818,
    #[serde(rename = "lg-h820")]
    pub lg_h820: LgH820,
    #[serde(rename = "lg-h820pr")]
    pub lg_h820pr: LgH820pr,
    #[serde(rename = "lg-h830")]
    pub lg_h830: LgH830,
    #[serde(rename = "lg-h831")]
    pub lg_h831: LgH831,
    #[serde(rename = "lg-h840")]
    pub lg_h840: LgH840,
    #[serde(rename = "lg-h845")]
    pub lg_h845: LgH845,
    #[serde(rename = "lg-h850")]
    pub lg_h850: LgH850,
    #[serde(rename = "lg-h860")]
    pub lg_h860: LgH860,
    #[serde(rename = "lg-h870")]
    pub lg_h870: LgH870,
    #[serde(rename = "lg-h870ds")]
    pub lg_h870ds: LgH870ds,
    #[serde(rename = "lg-h870s")]
    pub lg_h870s: LgH870s,
    #[serde(rename = "lg-h871")]
    pub lg_h871: LgH871,
    #[serde(rename = "lg-h872")]
    pub lg_h872: LgH872,
    #[serde(rename = "lg-h873")]
    pub lg_h873: LgH873,
    #[serde(rename = "lg-h900")]
    pub lg_h900: LgH900,
    #[serde(rename = "lg-h901")]
    pub lg_h901: LgH901,
    #[serde(rename = "lg-h910")]
    pub lg_h910: LgH910,
    #[serde(rename = "lg-h915")]
    pub lg_h915: LgH915,
    #[serde(rename = "lg-h918")]
    pub lg_h918: LgH918,
    #[serde(rename = "lg-h930")]
    pub lg_h930: LgH930,
    #[serde(rename = "lg-h931")]
    pub lg_h931: LgH931,
    #[serde(rename = "lg-h932")]
    pub lg_h932: LgH932,
    #[serde(rename = "lg-h933")]
    pub lg_h933: LgH933,
    #[serde(rename = "lg-h950")]
    pub lg_h950: LgH950,
    #[serde(rename = "lg-h955")]
    pub lg_h955: LgH955,
    #[serde(rename = "lg-h960")]
    pub lg_h960: LgH960,
    #[serde(rename = "lg-h961n")]
    pub lg_h961n: LgH961n,
    #[serde(rename = "lg-h962")]
    pub lg_h962: LgH962,
    #[serde(rename = "lg-h990")]
    pub lg_h990: LgH990,
    #[serde(rename = "lg-h990ds")]
    pub lg_h990ds: LgH990ds,
    #[serde(rename = "lg-j8wopx2kzcjpf6ayecpsynxbvnm3tizoiyfssexkr")]
    pub lg_j8wopx2kzcjpf6ayecpsynxbvnm3tizoiyfssexkr: LgJ8wopx2kzcjpf6ayecpsynxbvnm3tizoiyfssexkr,
    #[serde(rename = "lg-jz1")]
    pub lg_jz1: LgJz1,
    #[serde(rename = "lg-k100")]
    pub lg_k100: LgK100,
    #[serde(rename = "lg-k120")]
    pub lg_k120: LgK120,
    #[serde(rename = "lg-k120gt")]
    pub lg_k120gt: LgK120gt,
    #[serde(rename = "lg-k121")]
    pub lg_k121: LgK121,
    #[serde(rename = "lg-k130")]
    pub lg_k130: LgK130,
    #[serde(rename = "lg-k20")]
    pub lg_k20: LgK20,
    #[serde(rename = "lg-k200")]
    pub lg_k200: LgK200,
    #[serde(rename = "lg-k200f")]
    pub lg_k200f: LgK200f,
    #[serde(rename = "lg-k210")]
    pub lg_k210: LgK210,
    #[serde(rename = "lg-k212")]
    pub lg_k212: LgK212,
    #[serde(rename = "lg-k220")]
    pub lg_k220: LgK220,
    #[serde(rename = "lg-k240")]
    pub lg_k240: LgK240,
    #[serde(rename = "lg-k330")]
    pub lg_k330: LgK330,
    #[serde(rename = "lg-k332")]
    pub lg_k332: LgK332,
    #[serde(rename = "lg-k350")]
    pub lg_k350: LgK350,
    #[serde(rename = "lg-k371")]
    pub lg_k371: LgK371,
    #[serde(rename = "lg-k373")]
    pub lg_k373: LgK373,
    #[serde(rename = "lg-k410")]
    pub lg_k410: LgK410,
    #[serde(rename = "lg-k420")]
    pub lg_k420: LgK420,
    #[serde(rename = "lg-k425")]
    pub lg_k425: LgK425,
    #[serde(rename = "lg-k428")]
    pub lg_k428: LgK428,
    #[serde(rename = "lg-k430")]
    pub lg_k430: LgK430,
    #[serde(rename = "lg-k450")]
    pub lg_k450: LgK450,
    #[serde(rename = "lg-k500")]
    pub lg_k500: LgK500,
    #[serde(rename = "lg-k500n")]
    pub lg_k500n: LgK500n,
    #[serde(rename = "lg-k520")]
    pub lg_k520: LgK520,
    #[serde(rename = "lg-k530")]
    pub lg_k530: LgK530,
    #[serde(rename = "lg-k535")]
    pub lg_k535: LgK535,
    #[serde(rename = "lg-k540")]
    pub lg_k540: LgK540,
    #[serde(rename = "lg-k550")]
    pub lg_k550: LgK550,
    #[serde(rename = "lg-k557")]
    pub lg_k557: LgK557,
    #[serde(rename = "lg-k580")]
    pub lg_k580: LgK580,
    #[serde(rename = "lg-k600")]
    pub lg_k600: LgK600,
    #[serde(rename = "lg-kamkvjqclcbi5eunmn1zgwm2wjuxpmckkpgy")]
    pub lg_kamkvjqclcbi5eunmn1zgwm2wjuxpmckkpgy: LgKamkvjqclcbi5eunmn1zgwm2wjuxpmckkpgy,
    #[serde(rename = "lg-kc910")]
    pub lg_kc910: LgKc910,
    #[serde(rename = "lg-kd876")]
    pub lg_kd876: LgKd876,
    #[serde(rename = "lg-ke850")]
    pub lg_ke850: LgKe850,
    #[serde(rename = "lg-kf300")]
    pub lg_kf300: LgKf300,
    #[serde(rename = "lg-kg800")]
    pub lg_kg800: LgKg800,
    #[serde(rename = "lg-km555")]
    pub lg_km555: LgKm555,
    #[serde(rename = "lg-km570")]
    pub lg_km570: LgKm570,
    #[serde(rename = "lg-km900")]
    pub lg_km900: LgKm900,
    #[serde(rename = "lg-kp199")]
    pub lg_kp199: LgKp199,
    #[serde(rename = "lg-kp210")]
    pub lg_kp210: LgKp210,
    #[serde(rename = "lg-kp270v")]
    pub lg_kp270v: LgKp270v,
    #[serde(rename = "lg-kp500")]
    pub lg_kp500: LgKp500,
    #[serde(rename = "lg-kp502")]
    pub lg_kp502: LgKp502,
    #[serde(rename = "lg-kp570")]
    pub lg_kp570: LgKp570,
    #[serde(rename = "lg-ks20")]
    pub lg_ks20: LgKs20,
    #[serde(rename = "lg-ks360")]
    pub lg_ks360: LgKs360,
    #[serde(rename = "lg-ku3700")]
    pub lg_ku3700: LgKu3700,
    #[serde(rename = "lg-ku5400")]
    pub lg_ku5400: LgKu5400,
    #[serde(rename = "lg-ku5900")]
    pub lg_ku5900: LgKu5900,
    #[serde(rename = "lg-ku990")]
    pub lg_ku990: LgKu990,
    #[serde(rename = "lg-ku990i")]
    pub lg_ku990i: LgKu990i,
    #[serde(rename = "lg-l01d")]
    pub lg_l01d: LgL01d,
    #[serde(rename = "lg-l157bl")]
    pub lg_l157bl: LgL157bl,
    #[serde(rename = "lg-l158vl")]
    pub lg_l158vl: LgL158vl,
    #[serde(rename = "lg-l15g")]
    pub lg_l15g: LgL15g,
    #[serde(rename = "lg-l160l")]
    pub lg_l160l: LgL160l,
    #[serde(rename = "lg-l163bl")]
    pub lg_l163bl: LgL163bl,
    #[serde(rename = "lg-l164vl")]
    pub lg_l164vl: LgL164vl,
    #[serde(rename = "lg-l16c")]
    pub lg_l16c: LgL16c,
    #[serde(rename = "lg-l18vc")]
    pub lg_l18vc: LgL18vc,
    #[serde(rename = "lg-l21g")]
    pub lg_l21g: LgL21g,
    #[serde(rename = "lg-l22")]
    pub lg_l22: LgL22,
    #[serde(rename = "lg-l22c")]
    pub lg_l22c: LgL22c,
    #[serde(rename = "lg-l23")]
    pub lg_l23: LgL23,
    #[serde(rename = "lg-l24")]
    pub lg_l24: LgL24,
    #[serde(rename = "lg-l25")]
    pub lg_l25: LgL25,
    #[serde(rename = "lg-l31l")]
    pub lg_l31l: LgL31l,
    #[serde(rename = "lg-l33l")]
    pub lg_l33l: LgL33l,
    #[serde(rename = "lg-l34c")]
    pub lg_l34c: LgL34c,
    #[serde(rename = "lg-l35g")]
    pub lg_l35g: LgL35g,
    #[serde(rename = "lg-l38c")]
    pub lg_l38c: LgL38c,
    #[serde(rename = "lg-l39c")]
    pub lg_l39c: LgL39c,
    #[serde(rename = "lg-l40g")]
    pub lg_l40g: LgL40g,
    #[serde(rename = "lg-l41c")]
    pub lg_l41c: LgL41c,
    #[serde(rename = "lg-l43al")]
    pub lg_l43al: LgL43al,
    #[serde(rename = "lg-l44vl")]
    pub lg_l44vl: LgL44vl,
    #[serde(rename = "lg-l45c")]
    pub lg_l45c: LgL45c,
    #[serde(rename = "lg-l51al")]
    pub lg_l51al: LgL51al,
    #[serde(rename = "lg-l52vl")]
    pub lg_l52vl: LgL52vl,
    #[serde(rename = "lg-l53bl")]
    pub lg_l53bl: LgL53bl,
    #[serde(rename = "lg-l55c")]
    pub lg_l55c: LgL55c,
    #[serde(rename = "lg-l56vl")]
    pub lg_l56vl: LgL56vl,
    #[serde(rename = "lg-l57bl")]
    pub lg_l57bl: LgL57bl,
    #[serde(rename = "lg-l58vl")]
    pub lg_l58vl: LgL58vl,
    #[serde(rename = "lg-l59bl")]
    pub lg_l59bl: LgL59bl,
    #[serde(rename = "lg-l61al")]
    pub lg_l61al: LgL61al,
    #[serde(rename = "lg-l62vl")]
    pub lg_l62vl: LgL62vl,
    #[serde(rename = "lg-l63bl")]
    pub lg_l63bl: LgL63bl,
    #[serde(rename = "lg-l64vl")]
    pub lg_l64vl: LgL64vl,
    #[serde(rename = "lg-l75c")]
    pub lg_l75c: LgL75c,
    #[serde(rename = "lg-l81al")]
    pub lg_l81al: LgL81al,
    #[serde(rename = "lg-l82vl")]
    pub lg_l82vl: LgL82vl,
    #[serde(rename = "lg-l83bl")]
    pub lg_l83bl: LgL83bl,
    #[serde(rename = "lg-l84vl")]
    pub lg_l84vl: LgL84vl,
    #[serde(rename = "lg-l85c")]
    pub lg_l85c: LgL85c,
    #[serde(rename = "lg-l86c")]
    pub lg_l86c: LgL86c,
    #[serde(rename = "lg-l96g")]
    pub lg_l96g: LgL96g,
    #[serde(rename = "lg-l9z8arwq")]
    pub lg_l9z8arwq: LgL9z8arwq,
    #[serde(rename = "lg-lg100c")]
    pub lg_lg100c: LgLg100c,
    #[serde(rename = "lg-lg108c")]
    pub lg_lg108c: LgLg108c,
    #[serde(rename = "lg-lg109c")]
    pub lg_lg109c: LgLg109c,
    #[serde(rename = "lg-lg220c")]
    pub lg_lg220c: LgLg220c,
    #[serde(rename = "lg-lg221c")]
    pub lg_lg221c: LgLg221c,
    #[serde(rename = "lg-lg231c")]
    pub lg_lg231c: LgLg231c,
    #[serde(rename = "lg-lg235c")]
    pub lg_lg235c: LgLg235c,
    #[serde(rename = "lg-lg236c")]
    pub lg_lg236c: LgLg236c,
    #[serde(rename = "lg-lg237c")]
    pub lg_lg237c: LgLg237c,
    #[serde(rename = "lg-lg238c")]
    pub lg_lg238c: LgLg238c,
    #[serde(rename = "lg-lg265")]
    pub lg_lg265: LgLg265,
    #[serde(rename = "lg-lg290c")]
    pub lg_lg290c: LgLg290c,
    #[serde(rename = "lg-lg305c")]
    pub lg_lg305c: LgLg305c,
    #[serde(rename = "lg-lg306g")]
    pub lg_lg306g: LgLg306g,
    #[serde(rename = "lg-lg328bg")]
    pub lg_lg328bg: LgLg328bg,
    #[serde(rename = "lg-lg329g")]
    pub lg_lg329g: LgLg329g,
    #[serde(rename = "lg-lg440g")]
    pub lg_lg440g: LgLg440g,
    #[serde(rename = "lg-lg441g")]
    pub lg_lg441g: LgLg441g,
    #[serde(rename = "lg-lg442bg")]
    pub lg_lg442bg: LgLg442bg,
    #[serde(rename = "lg-lg501c")]
    pub lg_lg501c: LgLg501c,
    #[serde(rename = "lg-lg505c")]
    pub lg_lg505c: LgLg505c,
    #[serde(rename = "lg-lg511c")]
    pub lg_lg511c: LgLg511c,
    #[serde(rename = "lg-lg530g")]
    pub lg_lg530g: LgLg530g,
    #[serde(rename = "lg-lg620g")]
    pub lg_lg620g: LgLg620g,
    #[serde(rename = "lg-lg730")]
    pub lg_lg730: LgLg730,
    #[serde(rename = "lg-lg800g")]
    pub lg_lg800g: LgLg800g,
    #[serde(rename = "lg-lg840g")]
    pub lg_lg840g: LgLg840g,
    #[serde(rename = "lg-lg855")]
    pub lg_lg855: LgLg855,
    #[serde(rename = "lg-lg870")]
    pub lg_lg870: LgLg870,
    #[serde(rename = "lg-lg900g")]
    pub lg_lg900g: LgLg900g,
    #[serde(rename = "lg-lgc440")]
    pub lg_lgc440: LgLgc440,
    #[serde(rename = "lg-lgc441")]
    pub lg_lgc441: LgLgc441,
    #[serde(rename = "lg-lgls755")]
    pub lg_lgls755: LgLgls755,
    #[serde(rename = "lg-lgmp450")]
    pub lg_lgmp450: LgLgmp450,
    #[serde(rename = "lg-lgms210")]
    pub lg_lgms210: LgLgms210,
    #[serde(rename = "lg-lgms450")]
    pub lg_lgms450: LgLgms450,
    #[serde(rename = "lg-lk430")]
    pub lg_lk430: LgLk430,
    #[serde(rename = "lg-lk460")]
    pub lg_lk460: LgLk460,
    #[serde(rename = "lg-ls450")]
    pub lg_ls450: LgLs450,
    #[serde(rename = "lg-ls620")]
    pub lg_ls620: LgLs620,
    #[serde(rename = "lg-ls660")]
    pub lg_ls660: LgLs660,
    #[serde(rename = "lg-ls665")]
    pub lg_ls665: LgLs665,
    #[serde(rename = "lg-ls670")]
    pub lg_ls670: LgLs670,
    #[serde(rename = "lg-ls675")]
    pub lg_ls675: LgLs675,
    #[serde(rename = "lg-ls676")]
    pub lg_ls676: LgLs676,
    #[serde(rename = "lg-ls696")]
    pub lg_ls696: LgLs696,
    #[serde(rename = "lg-ls720")]
    pub lg_ls720: LgLs720,
    #[serde(rename = "lg-ls740")]
    pub lg_ls740: LgLs740,
    #[serde(rename = "lg-ls751")]
    pub lg_ls751: LgLs751,
    #[serde(rename = "lg-ls755")]
    pub lg_ls755: LgLs755,
    #[serde(rename = "lg-ls770")]
    pub lg_ls770: LgLs770,
    #[serde(rename = "lg-ls775")]
    pub lg_ls775: LgLs775,
    #[serde(rename = "lg-ls777")]
    pub lg_ls777: LgLs777,
    #[serde(rename = "lg-ls840")]
    pub lg_ls840: LgLs840,
    #[serde(rename = "lg-ls855")]
    pub lg_ls855: LgLs855,
    #[serde(rename = "lg-ls860")]
    pub lg_ls860: LgLs860,
    #[serde(rename = "lg-ls885")]
    pub lg_ls885: LgLs885,
    #[serde(rename = "lg-ls970")]
    pub lg_ls970: LgLs970,
    #[serde(rename = "lg-ls980")]
    pub lg_ls980: LgLs980,
    #[serde(rename = "lg-ls990")]
    pub lg_ls990: LgLs990,
    #[serde(rename = "lg-ls991")]
    pub lg_ls991: LgLs991,
    #[serde(rename = "lg-ls992")]
    pub lg_ls992: LgLs992,
    #[serde(rename = "lg-ls993")]
    pub lg_ls993: LgLs993,
    #[serde(rename = "lg-ls995")]
    pub lg_ls995: LgLs995,
    #[serde(rename = "lg-ls996")]
    pub lg_ls996: LgLs996,
    #[serde(rename = "lg-ls997")]
    pub lg_ls997: LgLs997,
    #[serde(rename = "lg-ls998")]
    pub lg_ls998: LgLs998,
    #[serde(rename = "lg-lu3000")]
    pub lg_lu3000: LgLu3000,
    #[serde(rename = "lg-lu5400")]
    pub lg_lu5400: LgLu5400,
    #[serde(rename = "lg-lu6200")]
    pub lg_lu6200: LgLu6200,
    #[serde(rename = "lg-lu6500")]
    pub lg_lu6500: LgLu6500,
    #[serde(rename = "lg-lw770")]
    pub lg_lw770: LgLw770,
    #[serde(rename = "lg-lx260")]
    pub lg_lx260: LgLx260,
    #[serde(rename = "lg-lx550")]
    pub lg_lx550: LgLx550,
    #[serde(rename = "lg-lx600")]
    pub lg_lx600: LgLx600,
    #[serde(rename = "lg-m150")]
    pub lg_m150: LgM150,
    #[serde(rename = "lg-m151")]
    pub lg_m151: LgM151,
    #[serde(rename = "lg-m153")]
    pub lg_m153: LgM153,
    #[serde(rename = "lg-m154")]
    pub lg_m154: LgM154,
    #[serde(rename = "lg-m160")]
    pub lg_m160: LgM160,
    #[serde(rename = "lg-m200")]
    pub lg_m200: LgM200,
    #[serde(rename = "lg-m210")]
    pub lg_m210: LgM210,
    #[serde(rename = "lg-m250")]
    pub lg_m250: LgM250,
    #[serde(rename = "lg-m255")]
    pub lg_m255: LgM255,
    #[serde(rename = "lg-m257")]
    pub lg_m257: LgM257,
    #[serde(rename = "lg-m320")]
    pub lg_m320: LgM320,
    #[serde(rename = "lg-m320g")]
    pub lg_m320g: LgM320g,
    #[serde(rename = "lg-m322")]
    pub lg_m322: LgM322,
    #[serde(rename = "lg-m327")]
    pub lg_m327: LgM327,
    #[serde(rename = "lg-m400")]
    pub lg_m400: LgM400,
    #[serde(rename = "lg-m430")]
    pub lg_m430: LgM430,
    #[serde(rename = "lg-m470")]
    pub lg_m470: LgM470,
    #[serde(rename = "lg-m700")]
    pub lg_m700: LgM700,
    #[serde(rename = "lg-m703")]
    pub lg_m703: LgM703,
    #[serde(rename = "lg-m710")]
    pub lg_m710: LgM710,
    #[serde(rename = "lg-mn180")]
    pub lg_mn180: LgMn180,
    #[serde(rename = "lg-mn270")]
    pub lg_mn270: LgMn270,
    #[serde(rename = "lg-mn510")]
    pub lg_mn510: LgMn510,
    #[serde(rename = "lg-mp260")]
    pub lg_mp260: LgMp260,
    #[serde(rename = "lg-mp450")]
    pub lg_mp450: LgMp450,
    #[serde(rename = "lg-ms210")]
    pub lg_ms210: LgMs210,
    #[serde(rename = "lg-ms323")]
    pub lg_ms323: LgMs323,
    #[serde(rename = "lg-ms330")]
    pub lg_ms330: LgMs330,
    #[serde(rename = "lg-ms345")]
    pub lg_ms345: LgMs345,
    #[serde(rename = "lg-ms395")]
    pub lg_ms395: LgMs395,
    #[serde(rename = "lg-ms428")]
    pub lg_ms428: LgMs428,
    #[serde(rename = "lg-ms500")]
    pub lg_ms500: LgMs500,
    #[serde(rename = "lg-ms550")]
    pub lg_ms550: LgMs550,
    #[serde(rename = "lg-ms631")]
    pub lg_ms631: LgMs631,
    #[serde(rename = "lg-ms659")]
    pub lg_ms659: LgMs659,
    #[serde(rename = "lg-ms695")]
    pub lg_ms695: LgMs695,
    #[serde(rename = "lg-ms769")]
    pub lg_ms769: LgMs769,
    #[serde(rename = "lg-ms840")]
    pub lg_ms840: LgMs840,
    #[serde(rename = "lg-ms870")]
    pub lg_ms870: LgMs870,
    #[serde(rename = "lg-ms910")]
    pub lg_ms910: LgMs910,
    #[serde(rename = "lg-mt375")]
    pub lg_mt375: LgMt375,
    #[serde(rename = "lg-mv300k")]
    pub lg_mv300k: LgMv300k,
    #[serde(rename = "lg-mv300s")]
    pub lg_mv300s: LgMv300s,
    #[serde(rename = "lg-mx380")]
    pub lg_mx380: LgMx380,
    #[serde(rename = "lg-n1zirptrdginz8vrvoygtec2a2z8eb31fpmyl")]
    pub lg_n1zirptrdginz8vrvoygtec2a2z8eb31fpmyl: LgN1zirptrdginz8vrvoygtec2a2z8eb31fpmyl,
    #[serde(rename = "lg-p350")]
    pub lg_p350: LgP350,
    #[serde(rename = "lg-p350f")]
    pub lg_p350f: LgP350f,
    #[serde(rename = "lg-p350g")]
    pub lg_p350g: LgP350g,
    #[serde(rename = "lg-p500h")]
    pub lg_p500h: LgP500h,
    #[serde(rename = "lg-p504")]
    pub lg_p504: LgP504,
    #[serde(rename = "lg-p505")]
    pub lg_p505: LgP505,
    #[serde(rename = "lg-p505r")]
    pub lg_p505r: LgP505r,
    #[serde(rename = "lg-p655h")]
    pub lg_p655h: LgP655h,
    #[serde(rename = "lg-p659")]
    pub lg_p659: LgP659,
    #[serde(rename = "lg-p690")]
    pub lg_p690: LgP690,
    #[serde(rename = "lg-p690b")]
    pub lg_p690b: LgP690b,
    #[serde(rename = "lg-p690f")]
    pub lg_p690f: LgP690f,
    #[serde(rename = "lg-p698")]
    pub lg_p698: LgP698,
    #[serde(rename = "lg-p698f")]
    pub lg_p698f: LgP698f,
    #[serde(rename = "lg-p700")]
    pub lg_p700: LgP700,
    #[serde(rename = "lg-p705")]
    pub lg_p705: LgP705,
    #[serde(rename = "lg-p705f")]
    pub lg_p705f: LgP705f,
    #[serde(rename = "lg-p705g")]
    pub lg_p705g: LgP705g,
    #[serde(rename = "lg-p708g")]
    pub lg_p708g: LgP708g,
    #[serde(rename = "lg-p710")]
    pub lg_p710: LgP710,
    #[serde(rename = "lg-p712")]
    pub lg_p712: LgP712,
    #[serde(rename = "lg-p713")]
    pub lg_p713: LgP713,
    #[serde(rename = "lg-p713go")]
    pub lg_p713go: LgP713go,
    #[serde(rename = "lg-p713tr")]
    pub lg_p713tr: LgP713tr,
    #[serde(rename = "lg-p714")]
    pub lg_p714: LgP714,
    #[serde(rename = "lg-p715")]
    pub lg_p715: LgP715,
    #[serde(rename = "lg-p716")]
    pub lg_p716: LgP716,
    #[serde(rename = "lg-p720h")]
    pub lg_p720h: LgP720h,
    #[serde(rename = "lg-p725")]
    pub lg_p725: LgP725,
    #[serde(rename = "lg-p760")]
    pub lg_p760: LgP760,
    #[serde(rename = "lg-p765")]
    pub lg_p765: LgP765,
    #[serde(rename = "lg-p768")]
    pub lg_p768: LgP768,
    #[serde(rename = "lg-p778")]
    pub lg_p778: LgP778,
    #[serde(rename = "lg-p870")]
    pub lg_p870: LgP870,
    #[serde(rename = "lg-p875")]
    pub lg_p875: LgP875,
    #[serde(rename = "lg-p875h")]
    pub lg_p875h: LgP875h,
    #[serde(rename = "lg-p880")]
    pub lg_p880: LgP880,
    #[serde(rename = "lg-p880g")]
    pub lg_p880g: LgP880g,
    #[serde(rename = "lg-p895")]
    pub lg_p895: LgP895,
    #[serde(rename = "lg-p920")]
    pub lg_p920: LgP920,
    #[serde(rename = "lg-p920h")]
    pub lg_p920h: LgP920h,
    #[serde(rename = "lg-p925")]
    pub lg_p925: LgP925,
    #[serde(rename = "lg-p925g")]
    pub lg_p925g: LgP925g,
    #[serde(rename = "lg-p930")]
    pub lg_p930: LgP930,
    #[serde(rename = "lg-p935")]
    pub lg_p935: LgP935,
    #[serde(rename = "lg-p936")]
    pub lg_p936: LgP936,
    #[serde(rename = "lg-p940")]
    pub lg_p940: LgP940,
    #[serde(rename = "lg-p940h")]
    pub lg_p940h: LgP940h,
    #[serde(rename = "lg-p970")]
    pub lg_p970: LgP970,
    #[serde(rename = "lg-p970g")]
    pub lg_p970g: LgP970g,
    #[serde(rename = "lg-p970h")]
    pub lg_p970h: LgP970h,
    #[serde(rename = "lg-p990")]
    pub lg_p990: LgP990,
    #[serde(rename = "lg-p990h")]
    pub lg_p990h: LgP990h,
    #[serde(rename = "lg-p990hn")]
    pub lg_p990hn: LgP990hn,
    #[serde(rename = "lg-p999")]
    pub lg_p999: LgP999,
    #[serde(rename = "lg-q710al")]
    pub lg_q710al: LgQ710al,
    #[serde(rename = "lg-rcx9wkd")]
    pub lg_rcx9wkd: LgRcx9wkd,
    #[serde(rename = "lg-rvspklycaiuqbaynx1yhv3ju1yyeqdmnc")]
    pub lg_rvspklycaiuqbaynx1yhv3ju1yyeqdmnc: LgRvspklycaiuqbaynx1yhv3ju1yyeqdmnc,
    #[serde(rename = "lg-s365")]
    pub lg_s365: LgS365,
    #[serde(rename = "lg-sp200")]
    pub lg_sp200: LgSp200,
    #[serde(rename = "lg-sp320")]
    pub lg_sp320: LgSp320,
    #[serde(rename = "lg-su640")]
    pub lg_su640: LgSu640,
    #[serde(rename = "lg-su660")]
    pub lg_su660: LgSu660,
    #[serde(rename = "lg-su760")]
    pub lg_su760: LgSu760,
    #[serde(rename = "lg-su870")]
    pub lg_su870: LgSu870,
    #[serde(rename = "lg-t01")]
    pub lg_t01: LgT01,
    #[serde(rename = "lg-t300")]
    pub lg_t300: LgT300,
    #[serde(rename = "lg-t31")]
    pub lg_t31: LgT31,
    #[serde(rename = "lg-t310")]
    pub lg_t310: LgT310,
    #[serde(rename = "lg-t32")]
    pub lg_t32: LgT32,
    #[serde(rename = "lg-t370")]
    pub lg_t370: LgT370,
    #[serde(rename = "lg-t375")]
    pub lg_t375: LgT375,
    #[serde(rename = "lg-t385")]
    pub lg_t385: LgT385,
    #[serde(rename = "lg-t385b")]
    pub lg_t385b: LgT385b,
    #[serde(rename = "lg-t395")]
    pub lg_t395: LgT395,
    #[serde(rename = "lg-t480k")]
    pub lg_t480k: LgT480k,
    #[serde(rename = "lg-t500")]
    pub lg_t500: LgT500,
    #[serde(rename = "lg-t510")]
    pub lg_t510: LgT510,
    #[serde(rename = "lg-t515")]
    pub lg_t515: LgT515,
    #[serde(rename = "lg-t565")]
    pub lg_t565: LgT565,
    #[serde(rename = "lg-t580")]
    pub lg_t580: LgT580,
    #[serde(rename = "lg-t585")]
    pub lg_t585: LgT585,
    #[serde(rename = "lg-tp260")]
    pub lg_tp260: LgTp260,
    #[serde(rename = "lg-tp450")]
    pub lg_tp450: LgTp450,
    #[serde(rename = "lg-u2brfxju")]
    pub lg_u2brfxju: LgU2brfxju,
    #[serde(rename = "lg-uk410")]
    pub lg_uk410: LgUk410,
    #[serde(rename = "lg-uk495")]
    pub lg_uk495: LgUk495,
    #[serde(rename = "lg-uk750")]
    pub lg_uk750: LgUk750,
    #[serde(rename = "lg-ulqkuchgtzp7kkypm2l")]
    pub lg_ulqkuchgtzp7kkypm2l: LgUlqkuchgtzp7kkypm2l,
    #[serde(rename = "lg-un150")]
    pub lg_un150: LgUn150,
    #[serde(rename = "lg-un160")]
    pub lg_un160: LgUn160,
    #[serde(rename = "lg-un161")]
    pub lg_un161: LgUn161,
    #[serde(rename = "lg-un170")]
    pub lg_un170: LgUn170,
    #[serde(rename = "lg-un200")]
    pub lg_un200: LgUn200,
    #[serde(rename = "lg-un270")]
    pub lg_un270: LgUn270,
    #[serde(rename = "lg-un272")]
    pub lg_un272: LgUn272,
    #[serde(rename = "lg-un280")]
    pub lg_un280: LgUn280,
    #[serde(rename = "lg-un530")]
    pub lg_un530: LgUn530,
    #[serde(rename = "lg-us110")]
    pub lg_us110: LgUs110,
    #[serde(rename = "lg-us215")]
    pub lg_us215: LgUs215,
    #[serde(rename = "lg-us375")]
    pub lg_us375: LgUs375,
    #[serde(rename = "lg-us550")]
    pub lg_us550: LgUs550,
    #[serde(rename = "lg-us601")]
    pub lg_us601: LgUs601,
    #[serde(rename = "lg-us610")]
    pub lg_us610: LgUs610,
    #[serde(rename = "lg-us700")]
    pub lg_us700: LgUs700,
    #[serde(rename = "lg-us701")]
    pub lg_us701: LgUs701,
    #[serde(rename = "lg-us730")]
    pub lg_us730: LgUs730,
    #[serde(rename = "lg-us780")]
    pub lg_us780: LgUs780,
    #[serde(rename = "lg-us990")]
    pub lg_us990: LgUs990,
    #[serde(rename = "lg-us991")]
    pub lg_us991: LgUs991,
    #[serde(rename = "lg-us992")]
    pub lg_us992: LgUs992,
    #[serde(rename = "lg-us995")]
    pub lg_us995: LgUs995,
    #[serde(rename = "lg-us996")]
    pub lg_us996: LgUs996,
    #[serde(rename = "lg-us997")]
    pub lg_us997: LgUs997,
    #[serde(rename = "lg-us998")]
    pub lg_us998: LgUs998,
    #[serde(rename = "lg-ux700")]
    pub lg_ux700: LgUx700,
    #[serde(rename = "lg-v20")]
    pub lg_v20: LgV20,
    #[serde(rename = "lg-v31")]
    pub lg_v31: LgV31,
    #[serde(rename = "lg-v32")]
    pub lg_v32: LgV32,
    #[serde(rename = "lg-v33")]
    pub lg_v33: LgV33,
    #[serde(rename = "lg-v34")]
    pub lg_v34: LgV34,
    #[serde(rename = "lg-v35")]
    pub lg_v35: LgV35,
    #[serde(rename = "lg-v400")]
    pub lg_v400: LgV400,
    #[serde(rename = "lg-v400s1")]
    pub lg_v400s1: LgV400s1,
    #[serde(rename = "lg-v410")]
    pub lg_v410: LgV410,
    #[serde(rename = "lg-v411")]
    pub lg_v411: LgV411,
    #[serde(rename = "lg-v480")]
    pub lg_v480: LgV480,
    #[serde(rename = "lg-v490")]
    pub lg_v490: LgV490,
    #[serde(rename = "lg-v495")]
    pub lg_v495: LgV495,
    #[serde(rename = "lg-v496")]
    pub lg_v496: LgV496,
    #[serde(rename = "lg-v497")]
    pub lg_v497: LgV497,
    #[serde(rename = "lg-v498")]
    pub lg_v498: LgV498,
    #[serde(rename = "lg-v498s1")]
    pub lg_v498s1: LgV498s1,
    #[serde(rename = "lg-v500")]
    pub lg_v500: LgV500,
    #[serde(rename = "lg-v507l")]
    pub lg_v507l: LgV507l,
    #[serde(rename = "lg-v510")]
    pub lg_v510: LgV510,
    #[serde(rename = "lg-v520")]
    pub lg_v520: LgV520,
    #[serde(rename = "lg-v521")]
    pub lg_v521: LgV521,
    #[serde(rename = "lg-v522")]
    pub lg_v522: LgV522,
    #[serde(rename = "lg-v530")]
    pub lg_v530: LgV530,
    #[serde(rename = "lg-v533")]
    pub lg_v533: LgV533,
    #[serde(rename = "lg-v700")]
    pub lg_v700: LgV700,
    #[serde(rename = "lg-v700n")]
    pub lg_v700n: LgV700n,
    #[serde(rename = "lg-v755")]
    pub lg_v755: LgV755,
    #[serde(rename = "lg-v900")]
    pub lg_v900: LgV900,
    #[serde(rename = "lg-v905r")]
    pub lg_v905r: LgV905r,
    #[serde(rename = "lg-v909")]
    pub lg_v909: LgV909,
    #[serde(rename = "lg-v930")]
    pub lg_v930: LgV930,
    #[serde(rename = "lg-v940n")]
    pub lg_v940n: LgV940n,
    #[serde(rename = "lg-vm101")]
    pub lg_vm101: LgVm101,
    #[serde(rename = "lg-vm265")]
    pub lg_vm265: LgVm265,
    #[serde(rename = "lg-vm510")]
    pub lg_vm510: LgVm510,
    #[serde(rename = "lg-vm670")]
    pub lg_vm670: LgVm670,
    #[serde(rename = "lg-vm696")]
    pub lg_vm696: LgVm696,
    #[serde(rename = "lg-vm701")]
    pub lg_vm701: LgVm701,
    #[serde(rename = "lg-vn150")]
    pub lg_vn150: LgVn150,
    #[serde(rename = "lg-vn170")]
    pub lg_vn170: LgVn170,
    #[serde(rename = "lg-vn210")]
    pub lg_vn210: LgVn210,
    #[serde(rename = "lg-vn250l")]
    pub lg_vn250l: LgVn250l,
    #[serde(rename = "lg-vn250p")]
    pub lg_vn250p: LgVn250p,
    #[serde(rename = "lg-vn251l")]
    pub lg_vn251l: LgVn251l,
    #[serde(rename = "lg-vn251p")]
    pub lg_vn251p: LgVn251p,
    #[serde(rename = "lg-vn270l")]
    pub lg_vn270l: LgVn270l,
    #[serde(rename = "lg-vn270p")]
    pub lg_vn270p: LgVn270p,
    #[serde(rename = "lg-vn271")]
    pub lg_vn271: LgVn271,
    #[serde(rename = "lg-vn280")]
    pub lg_vn280: LgVn280,
    #[serde(rename = "lg-vn360")]
    pub lg_vn360: LgVn360,
    #[serde(rename = "lg-vn370")]
    pub lg_vn370: LgVn370,
    #[serde(rename = "lg-vn530")]
    pub lg_vn530: LgVn530,
    #[serde(rename = "lg-vp200")]
    pub lg_vp200: LgVp200,
    #[serde(rename = "lg-vs410pp")]
    pub lg_vs410pp: LgVs410pp,
    #[serde(rename = "lg-vs450pp")]
    pub lg_vs450pp: LgVs450pp,
    #[serde(rename = "lg-vs501")]
    pub lg_vs501: LgVs501,
    #[serde(rename = "lg-vs700")]
    pub lg_vs700: LgVs700,
    #[serde(rename = "lg-vs980")]
    pub lg_vs980: LgVs980,
    #[serde(rename = "lg-vs985")]
    pub lg_vs985: LgVs985,
    #[serde(rename = "lg-vx10000")]
    pub lg_vx10000: LgVx10000,
    #[serde(rename = "lg-vx11000")]
    pub lg_vx11000: LgVx11000,
    #[serde(rename = "lg-vx5500")]
    pub lg_vx5500: LgVx5500,
    #[serde(rename = "lg-vx5600")]
    pub lg_vx5600: LgVx5600,
    #[serde(rename = "lg-vx8300")]
    pub lg_vx8300: LgVx8300,
    #[serde(rename = "lg-vx8370")]
    pub lg_vx8370: LgVx8370,
    #[serde(rename = "lg-vx8575")]
    pub lg_vx8575: LgVx8575,
    #[serde(rename = "lg-vx9200")]
    pub lg_vx9200: LgVx9200,
    #[serde(rename = "lg-vx9600")]
    pub lg_vx9600: LgVx9600,
    #[serde(rename = "lg-vx9700")]
    pub lg_vx9700: LgVx9700,
    #[serde(rename = "lg-vx9900")]
    pub lg_vx9900: LgVx9900,
    #[serde(rename = "lg-x130g")]
    pub lg_x130g: LgX130g,
    #[serde(rename = "lg-x135")]
    pub lg_x135: LgX135,
    #[serde(rename = "lg-x137")]
    pub lg_x137: LgX137,
    #[serde(rename = "lg-x145")]
    pub lg_x145: LgX145,
    #[serde(rename = "lg-x147")]
    pub lg_x147: LgX147,
    #[serde(rename = "lg-x150")]
    pub lg_x150: LgX150,
    #[serde(rename = "lg-x155")]
    pub lg_x155: LgX155,
    #[serde(rename = "lg-x160")]
    pub lg_x160: LgX160,
    #[serde(rename = "lg-x165g")]
    pub lg_x165g: LgX165g,
    #[serde(rename = "lg-x170ftv")]
    pub lg_x170ftv: LgX170ftv,
    #[serde(rename = "lg-x170g")]
    pub lg_x170g: LgX170g,
    #[serde(rename = "lg-x180g")]
    pub lg_x180g: LgX180g,
    #[serde(rename = "lg-x190")]
    pub lg_x190: LgX190,
    #[serde(rename = "lg-x210")]
    pub lg_x210: LgX210,
    #[serde(rename = "lg-x220")]
    pub lg_x220: LgX220,
    #[serde(rename = "lg-x230")]
    pub lg_x230: LgX230,
    #[serde(rename = "lg-x230yk")]
    pub lg_x230yk: LgX230yk,
    #[serde(rename = "lg-x240")]
    pub lg_x240: LgX240,
    #[serde(rename = "lg-x330")]
    pub lg_x330: LgX330,
    #[serde(rename = "lg-x330t")]
    pub lg_x330t: LgX330t,
    #[serde(rename = "lg-y75")]
    pub lg_y75: LgY75,
    #[serde(rename = "lg-z23")]
    pub lg_z23: LgZ23,
    #[serde(rename = "liquid-mt")]
    pub liquid_mt: LiquidMt,
    #[serde(rename = "lumia-1020")]
    pub lumia_1020: Lumia1020,
    #[serde(rename = "lumia-1320")]
    pub lumia_1320: Lumia1320,
    #[serde(rename = "lumia-1520")]
    pub lumia_1520: Lumia1520,
    #[serde(rename = "lumia-430")]
    pub lumia_430: Lumia430,
    #[serde(rename = "lumia-435")]
    pub lumia_435: Lumia435,
    #[serde(rename = "lumia-505")]
    pub lumia_505: Lumia505,
    #[serde(rename = "lumia-510")]
    pub lumia_510: Lumia510,
    #[serde(rename = "lumia-520")]
    pub lumia_520: Lumia520,
    #[serde(rename = "lumia-521")]
    pub lumia_521: Lumia521,
    #[serde(rename = "lumia-525")]
    pub lumia_525: Lumia525,
    #[serde(rename = "lumia-527")]
    pub lumia_527: Lumia527,
    #[serde(rename = "lumia-530")]
    pub lumia_530: Lumia530,
    #[serde(rename = "lumia-532")]
    pub lumia_532: Lumia532,
    #[serde(rename = "lumia-535")]
    pub lumia_535: Lumia535,
    #[serde(rename = "lumia-540")]
    pub lumia_540: Lumia540,
    #[serde(rename = "lumia-550")]
    pub lumia_550: Lumia550,
    #[serde(rename = "lumia-610")]
    pub lumia_610: Lumia610,
    #[serde(rename = "lumia-620")]
    pub lumia_620: Lumia620,
    #[serde(rename = "lumia-625")]
    pub lumia_625: Lumia625,
    #[serde(rename = "lumia-625h")]
    pub lumia_625h: Lumia625h,
    #[serde(rename = "lumia-630")]
    pub lumia_630: Lumia630,
    #[serde(rename = "lumia-635")]
    pub lumia_635: Lumia635,
    #[serde(rename = "lumia-636")]
    pub lumia_636: Lumia636,
    #[serde(rename = "lumia-638")]
    pub lumia_638: Lumia638,
    #[serde(rename = "lumia-640")]
    pub lumia_640: Lumia640,
    #[serde(rename = "lumia-645")]
    pub lumia_645: Lumia645,
    #[serde(rename = "lumia-650")]
    pub lumia_650: Lumia650,
    #[serde(rename = "lumia-710")]
    pub lumia_710: Lumia710,
    #[serde(rename = "lumia-720")]
    pub lumia_720: Lumia720,
    #[serde(rename = "lumia-730")]
    pub lumia_730: Lumia730,
    #[serde(rename = "lumia-735")]
    pub lumia_735: Lumia735,
    #[serde(rename = "lumia-800")]
    pub lumia_800: Lumia800,
    #[serde(rename = "lumia-8000")]
    pub lumia_8000: Lumia8000,
    #[serde(rename = "lumia-810")]
    pub lumia_810: Lumia810,
    #[serde(rename = "lumia-820")]
    pub lumia_820: Lumia820,
    #[serde(rename = "lumia-822")]
    pub lumia_822: Lumia822,
    #[serde(rename = "lumia-830")]
    pub lumia_830: Lumia830,
    #[serde(rename = "lumia-900")]
    pub lumia_900: Lumia900,
    #[serde(rename = "lumia-920")]
    pub lumia_920: Lumia920,
    #[serde(rename = "lumia-925")]
    pub lumia_925: Lumia925,
    #[serde(rename = "lumia-928")]
    pub lumia_928: Lumia928,
    #[serde(rename = "lumia-929")]
    pub lumia_929: Lumia929,
    #[serde(rename = "lumia-930")]
    pub lumia_930: Lumia930,
    #[serde(rename = "lumia-950")]
    pub lumia_950: Lumia950,
    #[serde(rename = "lumia-980")]
    pub lumia_980: Lumia980,
    #[serde(rename = "lumia-ccf")]
    pub lumia_ccf: LumiaCcf,
    #[serde(rename = "lumia-icon")]
    pub lumia_icon: LumiaIcon,
    pub lumia: Lumia,
    #[serde(rename = "maui-based-platform")]
    pub maui_based_platform: MauiBasedPlatform,
    #[serde(rename = "maui-based-wap-browser")]
    pub maui_based_wap_browser: MauiBasedWapBrowser,
    #[serde(rename = "maui-based-wap-platform")]
    pub maui_based_wap_platform: MauiBasedWapPlatform,
    #[serde(rename = "mi-a1")]
    pub mi_a1: MiA1,
    #[serde(rename = "microsoft-windows-http-services")]
    pub microsoft_windows_http_services: MicrosoftWindowsHttpServices,
    pub mk902: Mk902,
    #[serde(rename = "motion-4g")]
    pub motion_4g: Motion4g,
    #[serde(rename = "moto-e-1st-gen")]
    pub moto_e_1st_gen: MotoE1stGen,
    #[serde(rename = "moto-e-2nd-gen")]
    pub moto_e_2nd_gen: MotoE2ndGen,
    #[serde(rename = "moto-g-1st-gen")]
    pub moto_g_1st_gen: MotoG1stGen,
    #[serde(rename = "moto-g-2nd-gen")]
    pub moto_g_2nd_gen: MotoG2ndGen,
    #[serde(rename = "motorola-droid-mini")]
    pub motorola_droid_mini: MotorolaDroidMini,
    #[serde(rename = "motorola-droid-turbo")]
    pub motorola_droid_turbo: MotorolaDroidTurbo,
    #[serde(rename = "motorola-droid-ultra")]
    pub motorola_droid_ultra: MotorolaDroidUltra,
    #[serde(rename = "motorola-v177")]
    pub motorola_v177: MotorolaV177,
    #[serde(rename = "motorola-v3")]
    pub motorola_v3: MotorolaV3,
    #[serde(rename = "motorola-v360v")]
    pub motorola_v360v: MotorolaV360v,
    #[serde(rename = "motorola-v3i")]
    pub motorola_v3i: MotorolaV3i,
    #[serde(rename = "motorola-v3r")]
    pub motorola_v3r: MotorolaV3r,
    #[serde(rename = "motorola-v600")]
    pub motorola_v600: MotorolaV600,
    #[serde(rename = "motorola-v860")]
    pub motorola_v860: MotorolaV860,
    #[serde(rename = "motorola-v9mm")]
    pub motorola_v9mm: MotorolaV9mm,
    #[serde(rename = "motorola-ve440")]
    pub motorola_ve440: MotorolaVe440,
    #[serde(rename = "motorola-xoom")]
    pub motorola_xoom: MotorolaXoom,
    pub mytouch4g: Mytouch4g,
    pub n07b: N07b,
    pub n503i: N503i,
    pub n503is: N503is,
    pub n750: N750,
    pub n900i: N900i,
    pub n904i: N904i,
    pub n905i: N905i,
    #[serde(rename = "neo-x5")]
    pub neo_x5: NeoX5,
    #[serde(rename = "neo-x6")]
    pub neo_x6: NeoX6,
    #[serde(rename = "neo-x7")]
    pub neo_x7: NeoX7,
    #[serde(rename = "neo-x8")]
    pub neo_x8: NeoX8,
    #[serde(rename = "neo-x88")]
    pub neo_x88: NeoX88,
    #[serde(rename = "nexus-10")]
    pub nexus_10: Nexus10,
    #[serde(rename = "nexus-4")]
    pub nexus_4: Nexus4,
    #[serde(rename = "nexus-5")]
    pub nexus_5: Nexus5,
    #[serde(rename = "nexus-5x")]
    pub nexus_5x: Nexus5x,
    #[serde(rename = "nexus-6")]
    pub nexus_6: Nexus6,
    #[serde(rename = "nexus-6p")]
    pub nexus_6p: Nexus6p,
    #[serde(rename = "nexus-7")]
    pub nexus_7: Nexus7,
    #[serde(rename = "nexus-9")]
    pub nexus_9: Nexus9,
    #[serde(rename = "nexus-one")]
    pub nexus_one: NexusOne,
    #[serde(rename = "nexus-s")]
    pub nexus_s: NexusS,
    #[serde(rename = "nintendo-3ds")]
    pub nintendo_3ds: Nintendo3ds,
    #[serde(rename = "nintendo-dsi")]
    pub nintendo_dsi: NintendoDsi,
    #[serde(rename = "nintendo-wii")]
    pub nintendo_wii: NintendoWii,
    #[serde(rename = "nintendo-wiiu")]
    pub nintendo_wiiu: NintendoWiiu,
    #[serde(rename = "nokia-1")]
    pub nokia_1: Nokia1,
    #[serde(rename = "nokia-10")]
    pub nokia_10: Nokia10,
    #[serde(rename = "nokia-109")]
    pub nokia_109: Nokia109,
    #[serde(rename = "nokia-110")]
    pub nokia_110: Nokia110,
    #[serde(rename = "nokia-1100")]
    pub nokia_1100: Nokia1100,
    #[serde(rename = "nokia-111")]
    pub nokia_111: Nokia111,
    #[serde(rename = "nokia-112")]
    pub nokia_112: Nokia112,
    #[serde(rename = "nokia-1120")]
    pub nokia_1120: Nokia1120,
    #[serde(rename = "nokia-113")]
    pub nokia_113: Nokia113,
    #[serde(rename = "nokia-114")]
    pub nokia_114: Nokia114,
    #[serde(rename = "nokia-1320")]
    pub nokia_1320: Nokia1320,
    #[serde(rename = "nokia-1600")]
    pub nokia_1600: Nokia1600,
    #[serde(rename = "nokia-1680c-2")]
    pub nokia_1680c_2: Nokia1680c2,
    #[serde(rename = "nokia-2")]
    pub nokia_2: Nokia2,
    #[serde(rename = "nokia-200")]
    pub nokia_200: Nokia200,
    #[serde(rename = "nokia-201")]
    pub nokia_201: Nokia201,
    #[serde(rename = "nokia-2010")]
    pub nokia_2010: Nokia2010,
    #[serde(rename = "nokia-202")]
    pub nokia_202: Nokia202,
    #[serde(rename = "nokia-2020")]
    pub nokia_2020: Nokia2020,
    #[serde(rename = "nokia-203")]
    pub nokia_203: Nokia203,
    #[serde(rename = "nokia-205")]
    pub nokia_205: Nokia205,
    #[serde(rename = "nokia-2051")]
    pub nokia_2051: Nokia2051,
    #[serde(rename = "nokia-2052")]
    pub nokia_2052: Nokia2052,
    #[serde(rename = "nokia-2055")]
    pub nokia_2055: Nokia2055,
    #[serde(rename = "nokia-206")]
    pub nokia_206: Nokia206,
    #[serde(rename = "nokia-208")]
    pub nokia_208: Nokia208,
    #[serde(rename = "nokia-210")]
    pub nokia_210: Nokia210,
    #[serde(rename = "nokia-215")]
    pub nokia_215: Nokia215,
    #[serde(rename = "nokia-216")]
    pub nokia_216: Nokia216,
    #[serde(rename = "nokia-220")]
    pub nokia_220: Nokia220,
    #[serde(rename = "nokia-2220s")]
    pub nokia_2220s: Nokia2220s,
    #[serde(rename = "nokia-225")]
    pub nokia_225: Nokia225,
    #[serde(rename = "nokia-230")]
    pub nokia_230: Nokia230,
    #[serde(rename = "nokia-2320c")]
    pub nokia_2320c: Nokia2320c,
    #[serde(rename = "nokia-2330c-2")]
    pub nokia_2330c_2: Nokia2330c2,
    #[serde(rename = "nokia-2330c")]
    pub nokia_2330c: Nokia2330c,
    #[serde(rename = "nokia-2600c-2")]
    pub nokia_2600c_2: Nokia2600c2,
    #[serde(rename = "nokia-2600c")]
    pub nokia_2600c: Nokia2600c,
    #[serde(rename = "nokia-2610")]
    pub nokia_2610: Nokia2610,
    #[serde(rename = "nokia-2626-1")]
    pub nokia_2626_1: Nokia26261,
    #[serde(rename = "nokia-2626")]
    pub nokia_2626: Nokia2626,
    #[serde(rename = "nokia-2630")]
    pub nokia_2630: Nokia2630,
    #[serde(rename = "nokia-2680s-2")]
    pub nokia_2680s_2: Nokia2680s2,
    #[serde(rename = "nokia-2680s")]
    pub nokia_2680s: Nokia2680s,
    #[serde(rename = "nokia-2690")]
    pub nokia_2690: Nokia2690,
    #[serde(rename = "nokia-2700")]
    pub nokia_2700: Nokia2700,
    #[serde(rename = "nokia-2700c-2")]
    pub nokia_2700c_2: Nokia2700c2,
    #[serde(rename = "nokia-2700c")]
    pub nokia_2700c: Nokia2700c,
    #[serde(rename = "nokia-2710c-2")]
    pub nokia_2710c_2: Nokia2710c2,
    #[serde(rename = "nokia-2710c")]
    pub nokia_2710c: Nokia2710c,
    #[serde(rename = "nokia-2730c-1")]
    pub nokia_2730c_1: Nokia2730c1,
    #[serde(rename = "nokia-2730c")]
    pub nokia_2730c: Nokia2730c,
    #[serde(rename = "nokia-2760")]
    pub nokia_2760: Nokia2760,
    #[serde(rename = "nokia-3")]
    pub nokia_3: Nokia3,
    #[serde(rename = "nokia-300")]
    pub nokia_300: Nokia300,
    #[serde(rename = "nokia-301")]
    pub nokia_301: Nokia301,
    #[serde(rename = "nokia-302")]
    pub nokia_302: Nokia302,
    #[serde(rename = "nokia-3020")]
    pub nokia_3020: Nokia3020,
    #[serde(rename = "nokia-303")]
    pub nokia_303: Nokia303,
    #[serde(rename = "nokia-305")]
    pub nokia_305: Nokia305,
    #[serde(rename = "nokia-306")]
    pub nokia_306: Nokia306,
    #[serde(rename = "nokia-308")]
    pub nokia_308: Nokia308,
    #[serde(rename = "nokia-309")]
    pub nokia_309: Nokia309,
    #[serde(rename = "nokia-310")]
    pub nokia_310: Nokia310,
    #[serde(rename = "nokia-3100")]
    pub nokia_3100: Nokia3100,
    #[serde(rename = "nokia-3108")]
    pub nokia_3108: Nokia3108,
    #[serde(rename = "nokia-3109c")]
    pub nokia_3109c: Nokia3109c,
    #[serde(rename = "nokia-311")]
    pub nokia_311: Nokia311,
    #[serde(rename = "nokia-3110c")]
    pub nokia_3110c: Nokia3110c,
    #[serde(rename = "nokia-3120classic")]
    pub nokia_3120classic: Nokia3120classic,
    #[serde(rename = "nokia-3200")]
    pub nokia_3200: Nokia3200,
    #[serde(rename = "nokia-3208c")]
    pub nokia_3208c: Nokia3208c,
    #[serde(rename = "nokia-3230")]
    pub nokia_3230: Nokia3230,
    #[serde(rename = "nokia-3250")]
    pub nokia_3250: Nokia3250,
    #[serde(rename = "nokia-3310")]
    pub nokia_3310: Nokia3310,
    #[serde(rename = "nokia-3310i")]
    pub nokia_3310i: Nokia3310i,
    #[serde(rename = "nokia-3330")]
    pub nokia_3330: Nokia3330,
    #[serde(rename = "nokia-3350")]
    pub nokia_3350: Nokia3350,
    #[serde(rename = "nokia-3500c")]
    pub nokia_3500c: Nokia3500c,
    #[serde(rename = "nokia-3555")]
    pub nokia_3555: Nokia3555,
    #[serde(rename = "nokia-3600slide")]
    pub nokia_3600slide: Nokia3600slide,
    #[serde(rename = "nokia-3650")]
    pub nokia_3650: Nokia3650,
    #[serde(rename = "nokia-3710fold")]
    pub nokia_3710fold: Nokia3710fold,
    #[serde(rename = "nokia-5")]
    pub nokia_5: Nokia5,
    #[serde(rename = "nokia-500")]
    pub nokia_500: Nokia500,
    #[serde(rename = "nokia-5000d-2")]
    pub nokia_5000d_2: Nokia5000d2,
    #[serde(rename = "nokia-501")]
    pub nokia_501: Nokia501,
    #[serde(rename = "nokia-501s")]
    pub nokia_501s: Nokia501s,
    #[serde(rename = "nokia-502")]
    pub nokia_502: Nokia502,
    #[serde(rename = "nokia-503")]
    pub nokia_503: Nokia503,
    #[serde(rename = "nokia-503s")]
    pub nokia_503s: Nokia503s,
    #[serde(rename = "nokia-5070")]
    pub nokia_5070: Nokia5070,
    #[serde(rename = "nokia-510")]
    pub nokia_510: Nokia510,
    #[serde(rename = "nokia-5130")]
    pub nokia_5130: Nokia5130,
    #[serde(rename = "nokia-5130c-2")]
    pub nokia_5130c_2: Nokia5130c2,
    #[serde(rename = "nokia-5140i")]
    pub nokia_5140i: Nokia5140i,
    #[serde(rename = "nokia-515")]
    pub nokia_515: Nokia515,
    #[serde(rename = "nokia-520")]
    pub nokia_520: Nokia520,
    #[serde(rename = "nokia-5200")]
    pub nokia_5200: Nokia5200,
    #[serde(rename = "nokia-520t")]
    pub nokia_520t: Nokia520t,
    #[serde(rename = "nokia-5220xpressmusic")]
    pub nokia_5220xpressmusic: Nokia5220xpressmusic,
    #[serde(rename = "nokia-5228")]
    pub nokia_5228: Nokia5228,
    #[serde(rename = "nokia-5230-1b")]
    pub nokia_5230_1b: Nokia52301b,
    #[serde(rename = "nokia-5230-1c")]
    pub nokia_5230_1c: Nokia52301c,
    #[serde(rename = "nokia-5230-c")]
    pub nokia_5230_c: Nokia5230C,
    #[serde(rename = "nokia-5230")]
    pub nokia_5230: Nokia5230,
    #[serde(rename = "nokia-5233")]
    pub nokia_5233: Nokia5233,
    #[serde(rename = "nokia-5233ucbrowser")]
    pub nokia_5233ucbrowser: Nokia5233ucbrowser,
    #[serde(rename = "nokia-5235")]
    pub nokia_5235: Nokia5235,
    #[serde(rename = "nokia-5236")]
    pub nokia_5236: Nokia5236,
    #[serde(rename = "nokia-5238")]
    pub nokia_5238: Nokia5238,
    #[serde(rename = "nokia-525")]
    pub nokia_525: Nokia525,
    #[serde(rename = "nokia-5250")]
    pub nokia_5250: Nokia5250,
    #[serde(rename = "nokia-5300")]
    pub nokia_5300: Nokia5300,
    #[serde(rename = "nokia-5310")]
    pub nokia_5310: Nokia5310,
    #[serde(rename = "nokia-5310xpressmusic")]
    pub nokia_5310xpressmusic: Nokia5310xpressmusic,
    #[serde(rename = "nokia-5320")]
    pub nokia_5320: Nokia5320,
    #[serde(rename = "nokia-5320d-1")]
    pub nokia_5320d_1: Nokia5320d1,
    #[serde(rename = "nokia-5320di")]
    pub nokia_5320di: Nokia5320di,
    #[serde(rename = "nokia-5330-1d")]
    pub nokia_5330_1d: Nokia53301d,
    #[serde(rename = "nokia-5330")]
    pub nokia_5330: Nokia5330,
    #[serde(rename = "nokia-5530")]
    pub nokia_5530: Nokia5530,
    #[serde(rename = "nokia-5530c-2")]
    pub nokia_5530c_2: Nokia5530c2,
    #[serde(rename = "nokia-5610")]
    pub nokia_5610: Nokia5610,
    #[serde(rename = "nokia-5610d-1")]
    pub nokia_5610d_1: Nokia5610d1,
    #[serde(rename = "nokia-5630d-1")]
    pub nokia_5630d_1: Nokia5630d1,
    #[serde(rename = "nokia-5700")]
    pub nokia_5700: Nokia5700,
    #[serde(rename = "nokia-5700xpressmusic")]
    pub nokia_5700xpressmusic: Nokia5700xpressmusic,
    #[serde(rename = "nokia-5730s-1")]
    pub nokia_5730s_1: Nokia5730s1,
    #[serde(rename = "nokia-5800-1")]
    pub nokia_5800_1: Nokia58001,
    #[serde(rename = "nokia-5800")]
    pub nokia_5800: Nokia5800,
    #[serde(rename = "nokia-5800d-1")]
    pub nokia_5800d_1: Nokia5800d1,
    #[serde(rename = "nokia-5800d")]
    pub nokia_5800d: Nokia5800d,
    #[serde(rename = "nokia-5800xpressmusic")]
    pub nokia_5800xpressmusic: Nokia5800xpressmusic,
    #[serde(rename = "nokia-5802")]
    pub nokia_5802: Nokia5802,
    #[serde(rename = "nokia-6")]
    pub nokia_6: Nokia6,
    #[serde(rename = "nokia-6020")]
    pub nokia_6020: Nokia6020,
    #[serde(rename = "nokia-603")]
    pub nokia_603: Nokia603,
    #[serde(rename = "nokia-6030")]
    pub nokia_6030: Nokia6030,
    #[serde(rename = "nokia-6030b")]
    pub nokia_6030b: Nokia6030b,
    #[serde(rename = "nokia-6060")]
    pub nokia_6060: Nokia6060,
    #[serde(rename = "nokia-6070")]
    pub nokia_6070: Nokia6070,
    #[serde(rename = "nokia-6080")]
    pub nokia_6080: Nokia6080,
    #[serde(rename = "nokia-6085")]
    pub nokia_6085: Nokia6085,
    #[serde(rename = "nokia-6086")]
    pub nokia_6086: Nokia6086,
    #[serde(rename = "nokia-610")]
    pub nokia_610: Nokia610,
    #[serde(rename = "nokia-6100")]
    pub nokia_6100: Nokia6100,
    #[serde(rename = "nokia-6103")]
    pub nokia_6103: Nokia6103,
    #[serde(rename = "nokia-6110")]
    pub nokia_6110: Nokia6110,
    #[serde(rename = "nokia-6110navigator")]
    pub nokia_6110navigator: Nokia6110navigator,
    #[serde(rename = "nokia-6120c")]
    pub nokia_6120c: Nokia6120c,
    #[serde(rename = "nokia-6120c7-20")]
    pub nokia_6120c7_20: Nokia6120c720,
    #[serde(rename = "nokia-6120cucbrowser")]
    pub nokia_6120cucbrowser: Nokia6120cucbrowser,
    #[serde(rename = "nokia-6122ccn01-02")]
    pub nokia_6122ccn01_02: Nokia6122ccn0102,
    #[serde(rename = "nokia-620")]
    pub nokia_620: Nokia620,
    #[serde(rename = "nokia-6210")]
    pub nokia_6210: Nokia6210,
    #[serde(rename = "nokia-6210navigator")]
    pub nokia_6210navigator: Nokia6210navigator,
    #[serde(rename = "nokia-6220c-1")]
    pub nokia_6220c_1: Nokia6220c1,
    #[serde(rename = "nokia-6220c")]
    pub nokia_6220c: Nokia6220c,
    #[serde(rename = "nokia-6230")]
    pub nokia_6230: Nokia6230,
    #[serde(rename = "nokia-6233")]
    pub nokia_6233: Nokia6233,
    #[serde(rename = "nokia-625h")]
    pub nokia_625h: Nokia625h,
    #[serde(rename = "nokia-6260s-1")]
    pub nokia_6260s_1: Nokia6260s1,
    #[serde(rename = "nokia-6263")]
    pub nokia_6263: Nokia6263,
    #[serde(rename = "nokia-6270")]
    pub nokia_6270: Nokia6270,
    #[serde(rename = "nokia-6280")]
    pub nokia_6280: Nokia6280,
    #[serde(rename = "nokia-6300")]
    pub nokia_6300: Nokia6300,
    #[serde(rename = "nokia-6301")]
    pub nokia_6301: Nokia6301,
    #[serde(rename = "nokia-6303classic")]
    pub nokia_6303classic: Nokia6303classic,
    #[serde(rename = "nokia-6303iclassic")]
    pub nokia_6303iclassic: Nokia6303iclassic,
    #[serde(rename = "nokia-6350")]
    pub nokia_6350: Nokia6350,
    #[serde(rename = "nokia-6500s-1")]
    pub nokia_6500s_1: Nokia6500s1,
    #[serde(rename = "nokia-6600")]
    pub nokia_6600: Nokia6600,
    #[serde(rename = "nokia-6600f")]
    pub nokia_6600f: Nokia6600f,
    #[serde(rename = "nokia-6600i")]
    pub nokia_6600i: Nokia6600i,
    #[serde(rename = "nokia-6600s")]
    pub nokia_6600s: Nokia6600s,
    #[serde(rename = "nokia-6620")]
    pub nokia_6620: Nokia6620,
    #[serde(rename = "nokia-6630")]
    pub nokia_6630: Nokia6630,
    #[serde(rename = "nokia-6670")]
    pub nokia_6670: Nokia6670,
    #[serde(rename = "nokia-6680")]
    pub nokia_6680: Nokia6680,
    #[serde(rename = "nokia-6681")]
    pub nokia_6681: Nokia6681,
    #[serde(rename = "nokia-6700c-1")]
    pub nokia_6700c_1: Nokia6700c1,
    #[serde(rename = "nokia-6700s")]
    pub nokia_6700s: Nokia6700s,
    #[serde(rename = "nokia-6730c")]
    pub nokia_6730c: Nokia6730c,
    #[serde(rename = "nokia-6760s-1")]
    pub nokia_6760s_1: Nokia6760s1,
    #[serde(rename = "nokia-6790s")]
    pub nokia_6790s: Nokia6790s,
    #[serde(rename = "nokia-7")]
    pub nokia_7: Nokia7,
    #[serde(rename = "nokia-700")]
    pub nokia_700: Nokia700,
    #[serde(rename = "nokia-701")]
    pub nokia_701: Nokia701,
    #[serde(rename = "nokia-710")]
    pub nokia_710: Nokia710,
    #[serde(rename = "nokia-7100s-2")]
    pub nokia_7100s_2: Nokia7100s2,
    #[serde(rename = "nokia-7110")]
    pub nokia_7110: Nokia7110,
    #[serde(rename = "nokia-720")]
    pub nokia_720: Nokia720,
    #[serde(rename = "nokia-720t")]
    pub nokia_720t: Nokia720t,
    #[serde(rename = "nokia-7210c")]
    pub nokia_7210c: Nokia7210c,
    #[serde(rename = "nokia-7210supernova")]
    pub nokia_7210supernova: Nokia7210supernova,
    #[serde(rename = "nokia-7230")]
    pub nokia_7230: Nokia7230,
    #[serde(rename = "nokia-7250")]
    pub nokia_7250: Nokia7250,
    #[serde(rename = "nokia-7250i")]
    pub nokia_7250i: Nokia7250i,
    #[serde(rename = "nokia-7310")]
    pub nokia_7310: Nokia7310,
    #[serde(rename = "nokia-7310c")]
    pub nokia_7310c: Nokia7310c,
    #[serde(rename = "nokia-7600")]
    pub nokia_7600: Nokia7600,
    #[serde(rename = "nokia-7610")]
    pub nokia_7610: Nokia7610,
    #[serde(rename = "nokia-7610supernova")]
    pub nokia_7610supernova: Nokia7610supernova,
    #[serde(rename = "nokia-7650")]
    pub nokia_7650: Nokia7650,
    #[serde(rename = "nokia-7960")]
    pub nokia_7960: Nokia7960,
    #[serde(rename = "nokia-8")]
    pub nokia_8: Nokia8,
    #[serde(rename = "nokia-800")]
    pub nokia_800: Nokia800,
    #[serde(rename = "nokia-808")]
    pub nokia_808: Nokia808,
    #[serde(rename = "nokia-808pureview")]
    pub nokia_808pureview: Nokia808pureview,
    #[serde(rename = "nokia-8110")]
    pub nokia_8110: Nokia8110,
    #[serde(rename = "nokia-820")]
    pub nokia_820: Nokia820,
    #[serde(rename = "nokia-8310")]
    pub nokia_8310: Nokia8310,
    #[serde(rename = "nokia-8350")]
    pub nokia_8350: Nokia8350,
    #[serde(rename = "nokia-8800")]
    pub nokia_8800: Nokia8800,
    #[serde(rename = "nokia-888")]
    pub nokia_888: Nokia888,
    #[serde(rename = "nokia-8910i")]
    pub nokia_8910i: Nokia8910i,
    #[serde(rename = "nokia-9")]
    pub nokia_9: Nokia9,
    #[serde(rename = "nokia-900")]
    pub nokia_900: Nokia900,
    #[serde(rename = "nokia-909")]
    pub nokia_909: Nokia909,
    #[serde(rename = "nokia-9110")]
    pub nokia_9110: Nokia9110,
    #[serde(rename = "nokia-920")]
    pub nokia_920: Nokia920,
    #[serde(rename = "nokia-920t")]
    pub nokia_920t: Nokia920t,
    #[serde(rename = "nokia-925")]
    pub nokia_925: Nokia925,
    #[serde(rename = "nokia-925t")]
    pub nokia_925t: Nokia925t,
    #[serde(rename = "nokia-9300")]
    pub nokia_9300: Nokia9300,
    #[serde(rename = "nokia-9300i")]
    pub nokia_9300i: Nokia9300i,
    #[serde(rename = "nokia-9500")]
    pub nokia_9500: Nokia9500,
    #[serde(rename = "nokia-asha")]
    pub nokia_asha: NokiaAsha,
    #[serde(rename = "nokia-asha230dualsim")]
    pub nokia_asha230dualsim: NokiaAsha230dualsim,
    #[serde(rename = "nokia-asha230singlesim")]
    pub nokia_asha230singlesim: NokiaAsha230singlesim,
    #[serde(rename = "nokia-asha500dualsim")]
    pub nokia_asha500dualsim: NokiaAsha500dualsim,
    #[serde(rename = "nokia-asha500singlesim")]
    pub nokia_asha500singlesim: NokiaAsha500singlesim,
    #[serde(rename = "nokia-browser")]
    pub nokia_browser: NokiaBrowser,
    #[serde(rename = "nokia-c1-01")]
    pub nokia_c1_01: NokiaC101,
    #[serde(rename = "nokia-c1-02")]
    pub nokia_c1_02: NokiaC102,
    #[serde(rename = "nokia-c2-00")]
    pub nokia_c2_00: NokiaC200,
    #[serde(rename = "nokia-c2-01")]
    pub nokia_c2_01: NokiaC201,
    #[serde(rename = "nokia-c2-02")]
    pub nokia_c2_02: NokiaC202,
    #[serde(rename = "nokia-c2-03")]
    pub nokia_c2_03: NokiaC203,
    #[serde(rename = "nokia-c2-05")]
    pub nokia_c2_05: NokiaC205,
    #[serde(rename = "nokia-c2-06")]
    pub nokia_c2_06: NokiaC206,
    #[serde(rename = "nokia-c2-07")]
    pub nokia_c2_07: NokiaC207,
    #[serde(rename = "nokia-c2")]
    pub nokia_c2: NokiaC2,
    #[serde(rename = "nokia-c3-00")]
    pub nokia_c3_00: NokiaC300,
    #[serde(rename = "nokia-c3-01")]
    pub nokia_c3_01: NokiaC301,
    #[serde(rename = "nokia-c5-00")]
    pub nokia_c5_00: NokiaC500,
    #[serde(rename = "nokia-c5-02")]
    pub nokia_c5_02: NokiaC502,
    #[serde(rename = "nokia-c5-03")]
    pub nokia_c5_03: NokiaC503,
    #[serde(rename = "nokia-c5-05")]
    pub nokia_c5_05: NokiaC505,
    #[serde(rename = "nokia-c5-06")]
    pub nokia_c5_06: NokiaC506,
    #[serde(rename = "nokia-c5")]
    pub nokia_c5: NokiaC5,
    #[serde(rename = "nokia-c6-00")]
    pub nokia_c6_00: NokiaC600,
    #[serde(rename = "nokia-c6-01")]
    pub nokia_c6_01: NokiaC601,
    #[serde(rename = "nokia-c7-00")]
    pub nokia_c7_00: NokiaC700,
    #[serde(rename = "nokia-c7")]
    pub nokia_c7: NokiaC7,
    #[serde(rename = "nokia-e5-00")]
    pub nokia_e5_00: NokiaE500,
    #[serde(rename = "nokia-e50-1")]
    pub nokia_e50_1: NokiaE501,
    #[serde(rename = "nokia-e51-1")]
    pub nokia_e51_1: NokiaE511,
    #[serde(rename = "nokia-e51-2")]
    pub nokia_e51_2: NokiaE512,
    #[serde(rename = "nokia-e51")]
    pub nokia_e51: NokiaE51,
    #[serde(rename = "nokia-e52-1")]
    pub nokia_e52_1: NokiaE521,
    #[serde(rename = "nokia-e6-00")]
    pub nokia_e6_00: NokiaE600,
    #[serde(rename = "nokia-e6")]
    pub nokia_e6: NokiaE6,
    #[serde(rename = "nokia-e60")]
    pub nokia_e60: NokiaE60,
    #[serde(rename = "nokia-e61")]
    pub nokia_e61: NokiaE61,
    #[serde(rename = "nokia-e61i-1")]
    pub nokia_e61i_1: NokiaE61i1,
    #[serde(rename = "nokia-e61i")]
    pub nokia_e61i: NokiaE61i,
    #[serde(rename = "nokia-e63-1")]
    pub nokia_e63_1: NokiaE631,
    #[serde(rename = "nokia-e63-2")]
    pub nokia_e63_2: NokiaE632,
    #[serde(rename = "nokia-e63-3")]
    pub nokia_e63_3: NokiaE633,
    #[serde(rename = "nokia-e63")]
    pub nokia_e63: NokiaE63,
    #[serde(rename = "nokia-e63ucbrowser")]
    pub nokia_e63ucbrowser: NokiaE63ucbrowser,
    #[serde(rename = "nokia-e65-1")]
    pub nokia_e65_1: NokiaE651,
    #[serde(rename = "nokia-e65")]
    pub nokia_e65: NokiaE65,
    #[serde(rename = "nokia-e66-1")]
    pub nokia_e66_1: NokiaE661,
    #[serde(rename = "nokia-e66")]
    pub nokia_e66: NokiaE66,
    #[serde(rename = "nokia-e7-00")]
    pub nokia_e7_00: NokiaE700,
    #[serde(rename = "nokia-e70-1")]
    pub nokia_e70_1: NokiaE701,
    #[serde(rename = "nokia-e71-1")]
    pub nokia_e71_1: NokiaE711,
    #[serde(rename = "nokia-e71-2")]
    pub nokia_e71_2: NokiaE712,
    #[serde(rename = "nokia-e71-3")]
    pub nokia_e71_3: NokiaE713,
    #[serde(rename = "nokia-e71")]
    pub nokia_e71: NokiaE71,
    #[serde(rename = "nokia-e71x")]
    pub nokia_e71x: NokiaE71x,
    #[serde(rename = "nokia-e72-1")]
    pub nokia_e72_1: NokiaE721,
    #[serde(rename = "nokia-e72-2")]
    pub nokia_e72_2: NokiaE722,
    #[serde(rename = "nokia-e73")]
    pub nokia_e73: NokiaE73,
    #[serde(rename = "nokia-e75-1")]
    pub nokia_e75_1: NokiaE751,
    #[serde(rename = "nokia-e75")]
    pub nokia_e75: NokiaE75,
    #[serde(rename = "nokia-e90-1")]
    pub nokia_e90_1: NokiaE901,
    #[serde(rename = "nokia-e90")]
    pub nokia_e90: NokiaE90,
    #[serde(rename = "nokia-fi")]
    pub nokia_fi: NokiaFi,
    #[serde(rename = "nokia-j7")]
    pub nokia_j7: NokiaJ7,
    #[serde(rename = "nokia-mit")]
    pub nokia_mit: NokiaMit,
    #[serde(rename = "nokia-n00-1")]
    pub nokia_n00_1: NokiaN001,
    #[serde(rename = "nokia-n3310")]
    pub nokia_n3310: NokiaN3310,
    #[serde(rename = "nokia-n42")]
    pub nokia_n42: NokiaN42,
    #[serde(rename = "nokia-n5130")]
    pub nokia_n5130: NokiaN5130,
    #[serde(rename = "nokia-n70-1")]
    pub nokia_n70_1: NokiaN701,
    #[serde(rename = "nokia-n70")]
    pub nokia_n70: NokiaN70,
    #[serde(rename = "nokia-n71")]
    pub nokia_n71: NokiaN71,
    #[serde(rename = "nokia-n72-1")]
    pub nokia_n72_1: NokiaN721,
    #[serde(rename = "nokia-n72")]
    pub nokia_n72: NokiaN72,
    #[serde(rename = "nokia-n73-1")]
    pub nokia_n73_1: NokiaN731,
    #[serde(rename = "nokia-n73-2")]
    pub nokia_n73_2: NokiaN732,
    #[serde(rename = "nokia-n73-5")]
    pub nokia_n73_5: NokiaN735,
    #[serde(rename = "nokia-n73")]
    pub nokia_n73: NokiaN73,
    #[serde(rename = "nokia-n76-1")]
    pub nokia_n76_1: NokiaN761,
    #[serde(rename = "nokia-n76")]
    pub nokia_n76: NokiaN76,
    #[serde(rename = "nokia-n78-1")]
    pub nokia_n78_1: NokiaN781,
    #[serde(rename = "nokia-n78")]
    pub nokia_n78: NokiaN78,
    #[serde(rename = "nokia-n79-1")]
    pub nokia_n79_1: NokiaN791,
    #[serde(rename = "nokia-n79")]
    pub nokia_n79: NokiaN79,
    #[serde(rename = "nokia-n8-00")]
    pub nokia_n8_00: NokiaN800,
    #[serde(rename = "nokia-n8")]
    pub nokia_n8: NokiaN8,
    #[serde(rename = "nokia-n80-1")]
    pub nokia_n80_1: NokiaN801,
    #[serde(rename = "nokia-n80-3")]
    pub nokia_n80_3: NokiaN803,
    #[serde(rename = "nokia-n81-3")]
    pub nokia_n81_3: NokiaN813,
    #[serde(rename = "nokia-n82")]
    pub nokia_n82: NokiaN82,
    #[serde(rename = "nokia-n84-1")]
    pub nokia_n84_1: NokiaN841,
    #[serde(rename = "nokia-n85-1")]
    pub nokia_n85_1: NokiaN851,
    #[serde(rename = "nokia-n85-3")]
    pub nokia_n85_3: NokiaN853,
    #[serde(rename = "nokia-n85")]
    pub nokia_n85: NokiaN85,
    #[serde(rename = "nokia-n86-1")]
    pub nokia_n86_1: NokiaN861,
    #[serde(rename = "nokia-n9")]
    pub nokia_n9: NokiaN9,
    #[serde(rename = "nokia-n90-1")]
    pub nokia_n90_1: NokiaN901,
    #[serde(rename = "nokia-n900")]
    pub nokia_n900: NokiaN900,
    #[serde(rename = "nokia-n93-1")]
    pub nokia_n93_1: NokiaN931,
    #[serde(rename = "nokia-n95-2")]
    pub nokia_n95_2: NokiaN952,
    #[serde(rename = "nokia-n95-3")]
    pub nokia_n95_3: NokiaN953,
    #[serde(rename = "nokia-n95")]
    pub nokia_n95: NokiaN95,
    #[serde(rename = "nokia-n950-00")]
    pub nokia_n950_00: NokiaN95000,
    #[serde(rename = "nokia-n96-1")]
    pub nokia_n96_1: NokiaN961,
    #[serde(rename = "nokia-n96")]
    pub nokia_n96: NokiaN96,
    #[serde(rename = "nokia-n97-1")]
    pub nokia_n97_1: NokiaN971,
    #[serde(rename = "nokia-n97-3")]
    pub nokia_n97_3: NokiaN973,
    #[serde(rename = "nokia-n97-4")]
    pub nokia_n97_4: NokiaN974,
    #[serde(rename = "nokia-n97-5")]
    pub nokia_n97_5: NokiaN975,
    #[serde(rename = "nokia-n97")]
    pub nokia_n97: NokiaN97,
    #[serde(rename = "nokia-n97i")]
    pub nokia_n97i: NokiaN97i,
    #[serde(rename = "nokia-nokia")]
    pub nokia_nokia: NokiaNokia,
    #[serde(rename = "nokia-nokian832gb")]
    pub nokia_nokian832gb: NokiaNokian832gb,
    #[serde(rename = "nokia-nr")]
    pub nokia_nr: NokiaNr,
    #[serde(rename = "nokia-nxx")]
    pub nokia_nxx: NokiaNxx,
    #[serde(rename = "nokia-paxi")]
    pub nokia_paxi: NokiaPaxi,
    #[serde(rename = "nokia-profile")]
    pub nokia_profile: NokiaProfile,
    #[serde(rename = "nokia-rm-1038")]
    pub nokia_rm_1038: NokiaRm1038,
    #[serde(rename = "nokia-rm-821")]
    pub nokia_rm_821: NokiaRm821,
    #[serde(rename = "nokia-rm-915")]
    pub nokia_rm_915: NokiaRm915,
    #[serde(rename = "nokia-rm840")]
    pub nokia_rm840: NokiaRm840,
    #[serde(rename = "nokia-s60")]
    pub nokia_s60: NokiaS60,
    #[serde(rename = "nokia-series40")]
    pub nokia_series40: NokiaSeries40,
    #[serde(rename = "nokia-series60")]
    pub nokia_series60: NokiaSeries60,
    #[serde(rename = "nokia-turbo")]
    pub nokia_turbo: NokiaTurbo,
    #[serde(rename = "nokia-vivaz")]
    pub nokia_vivaz: NokiaVivaz,
    #[serde(rename = "nokia-wap")]
    pub nokia_wap: NokiaWap,
    #[serde(rename = "nokia-web")]
    pub nokia_web: NokiaWeb,
    #[serde(rename = "nokia-x2-00")]
    pub nokia_x2_00: NokiaX200,
    #[serde(rename = "nokia-x2-01")]
    pub nokia_x2_01: NokiaX201,
    #[serde(rename = "nokia-x2-02")]
    pub nokia_x2_02: NokiaX202,
    #[serde(rename = "nokia-x2-03")]
    pub nokia_x2_03: NokiaX203,
    #[serde(rename = "nokia-x2-05")]
    pub nokia_x2_05: NokiaX205,
    #[serde(rename = "nokia-x2ds")]
    pub nokia_x2ds: NokiaX2ds,
    #[serde(rename = "nokia-x3-00")]
    pub nokia_x3_00: NokiaX300,
    #[serde(rename = "nokia-x3-02")]
    pub nokia_x3_02: NokiaX302,
    #[serde(rename = "nokia-x5-01")]
    pub nokia_x5_01: NokiaX501,
    #[serde(rename = "nokia-x6-00")]
    pub nokia_x6_00: NokiaX600,
    #[serde(rename = "nokia-x6")]
    pub nokia_x6: NokiaX6,
    #[serde(rename = "nokia-x7-00")]
    pub nokia_x7_00: NokiaX700,
    #[serde(rename = "nokia-x7")]
    pub nokia_x7: NokiaX7,
    #[serde(rename = "nokia-xl")]
    pub nokia_xl: NokiaXl,
    #[serde(rename = "nokia-xplus")]
    pub nokia_xplus: NokiaXplus,
    pub nokia: Nokia,
    #[serde(rename = "nook-ereader-color")]
    pub nook_ereader_color: NookEreaderColor,
    #[serde(rename = "nook-ereader")]
    pub nook_ereader: NookEreader,
    #[serde(rename = "one-1")]
    pub one_1: One1,
    #[serde(rename = "one-2")]
    pub one_2: One2,
    #[serde(rename = "one-3")]
    pub one_3: One3,
    #[serde(rename = "one-4")]
    pub one_4: One4,
    #[serde(rename = "one-6")]
    pub one_6: One6,
    #[serde(rename = "one-7")]
    pub one_7: One7,
    #[serde(rename = "one-801e")]
    pub one_801e: One801e,
    #[serde(rename = "one-801s")]
    pub one_801s: One801s,
    #[serde(rename = "one-a9")]
    pub one_a9: OneA9,
    #[serde(rename = "one-a9s")]
    pub one_a9s: OneA9s,
    #[serde(rename = "one-custom")]
    pub one_custom: OneCustom,
    #[serde(rename = "one-dual")]
    pub one_dual: OneDual,
    #[serde(rename = "one-e8")]
    pub one_e8: OneE8,
    #[serde(rename = "one-e9")]
    pub one_e9: OneE9,
    #[serde(rename = "one-e9plus")]
    pub one_e9plus: OneE9plus,
    #[serde(rename = "one-e9s")]
    pub one_e9s: OneE9s,
    #[serde(rename = "one-htc")]
    pub one_htc: OneHtc,
    #[serde(rename = "one-htc6500lvw")]
    pub one_htc6500lvw: OneHtc6500lvw,
    #[serde(rename = "one-m8")]
    pub one_m8: OneM8,
    #[serde(rename = "one-m8s")]
    pub one_m8s: OneM8s,
    #[serde(rename = "one-m9")]
    pub one_m9: OneM9,
    #[serde(rename = "one-m9plus")]
    pub one_m9plus: OneM9plus,
    #[serde(rename = "one-m9s")]
    pub one_m9s: OneM9s,
    #[serde(rename = "one-max")]
    pub one_max: OneMax,
    #[serde(rename = "one-me")]
    pub one_me: OneMe,
    #[serde(rename = "one-mini")]
    pub one_mini: OneMini,
    #[serde(rename = "one-mobile")]
    pub one_mobile: OneMobile,
    #[serde(rename = "one-s")]
    pub one_s: OneS,
    #[serde(rename = "one-s9")]
    pub one_s9: OneS9,
    #[serde(rename = "one-sv")]
    pub one_sv: OneSv,
    #[serde(rename = "one-v")]
    pub one_v: OneV,
    #[serde(rename = "one-vx")]
    pub one_vx: OneVx,
    #[serde(rename = "one-x")]
    pub one_x: OneX,
    #[serde(rename = "one-x10")]
    pub one_x10: OneX10,
    #[serde(rename = "one-x9")]
    pub one_x9: OneX9,
    #[serde(rename = "one-xl")]
    pub one_xl: OneXl,
    pub one: One,
    #[serde(rename = "oppo-a37f")]
    pub oppo_a37f: OppoA37f,
    #[serde(rename = "oppo-a37fw")]
    pub oppo_a37fw: OppoA37fw,
    #[serde(rename = "optimus-c")]
    pub optimus_c: OptimusC,
    #[serde(rename = "optimus-l9")]
    pub optimus_l9: OptimusL9,
    #[serde(rename = "optimus-m")]
    pub optimus_m: OptimusM,
    #[serde(rename = "optimus-one")]
    pub optimus_one: OptimusOne,
    #[serde(rename = "optimus-s")]
    pub optimus_s: OptimusS,
    #[serde(rename = "optimus-t")]
    pub optimus_t: OptimusT,
    #[serde(rename = "optimus-u")]
    pub optimus_u: OptimusU,
    #[serde(rename = "optimus-v")]
    pub optimus_v: OptimusV,
    #[serde(rename = "palm-centro-690")]
    pub palm_centro_690: PalmCentro690,
    #[serde(rename = "palm-lifedrive")]
    pub palm_lifedrive: PalmLifedrive,
    #[serde(rename = "palm-pixi")]
    pub palm_pixi: PalmPixi,
    #[serde(rename = "palm-treo-650")]
    pub palm_treo_650: PalmTreo650,
    #[serde(rename = "palm-treo-755")]
    pub palm_treo_755: PalmTreo755,
    #[serde(rename = "palm-tx")]
    pub palm_tx: PalmTx,
    pub pixel: Pixel,
    #[serde(rename = "playstation-3")]
    pub playstation_3: Playstation3,
    #[serde(rename = "playstation-portable")]
    pub playstation_portable: PlaystationPortable,
    #[serde(rename = "playstation-vita")]
    pub playstation_vita: PlaystationVita,
    #[serde(rename = "presario-a7f")]
    pub presario_a7f: PresarioA7f,
    pub r9s: R9s,
    #[serde(rename = "radar-c110e")]
    pub radar_c110e: RadarC110e,
    pub ruby: Ruby,
    #[serde(rename = "samsung-chat-220")]
    pub samsung_chat_220: SamsungChat220,
    #[serde(rename = "samsung-gt-002")]
    pub samsung_gt_002: SamsungGt002,
    #[serde(rename = "samsung-gt-1240")]
    pub samsung_gt_1240: SamsungGt1240,
    #[serde(rename = "samsung-gt-1440")]
    pub samsung_gt_1440: SamsungGt1440,
    #[serde(rename = "samsung-gt-1500")]
    pub samsung_gt_1500: SamsungGt1500,
    #[serde(rename = "samsung-gt-19100")]
    pub samsung_gt_19100: SamsungGt19100,
    #[serde(rename = "samsung-gt-19300")]
    pub samsung_gt_19300: SamsungGt19300,
    #[serde(rename = "samsung-gt-23")]
    pub samsung_gt_23: SamsungGt23,
    #[serde(rename = "samsung-gt-3gh")]
    pub samsung_gt_3gh: SamsungGt3gh,
    #[serde(rename = "samsung-gt-5830l")]
    pub samsung_gt_5830l: SamsungGt5830l,
    #[serde(rename = "samsung-gt-7204")]
    pub samsung_gt_7204: SamsungGt7204,
    #[serde(rename = "samsung-gt-7220")]
    pub samsung_gt_7220: SamsungGt7220,
    #[serde(rename = "samsung-gt-7240r")]
    pub samsung_gt_7240r: SamsungGt7240r,
    #[serde(rename = "samsung-gt-7245")]
    pub samsung_gt_7245: SamsungGt7245,
    #[serde(rename = "samsung-gt-7250")]
    pub samsung_gt_7250: SamsungGt7250,
    #[serde(rename = "samsung-gt-7303")]
    pub samsung_gt_7303: SamsungGt7303,
    #[serde(rename = "samsung-gt-7320")]
    pub samsung_gt_7320: SamsungGt7320,
    #[serde(rename = "samsung-gt-7325")]
    pub samsung_gt_7325: SamsungGt7325,
    #[serde(rename = "samsung-gt-7326")]
    pub samsung_gt_7326: SamsungGt7326,
    #[serde(rename = "samsung-gt-7327")]
    pub samsung_gt_7327: SamsungGt7327,
    #[serde(rename = "samsung-gt-7340")]
    pub samsung_gt_7340: SamsungGt7340,
    #[serde(rename = "samsung-gt-7405")]
    pub samsung_gt_7405: SamsungGt7405,
    #[serde(rename = "samsung-gt-810")]
    pub samsung_gt_810: SamsungGt810,
    #[serde(rename = "samsung-gt-8190")]
    pub samsung_gt_8190: SamsungGt8190,
    #[serde(rename = "samsung-gt-8220s")]
    pub samsung_gt_8220s: SamsungGt8220s,
    #[serde(rename = "samsung-gt-8280")]
    pub samsung_gt_8280: SamsungGt8280,
    #[serde(rename = "samsung-gt-8552")]
    pub samsung_gt_8552: SamsungGt8552,
    #[serde(rename = "samsung-gt-9000")]
    pub samsung_gt_9000: SamsungGt9000,
    #[serde(rename = "samsung-gt-9505")]
    pub samsung_gt_9505: SamsungGt9505,
    #[serde(rename = "samsung-gt-a20")]
    pub samsung_gt_a20: SamsungGtA20,
    #[serde(rename = "samsung-gt-a7100")]
    pub samsung_gt_a7100: SamsungGtA7100,
    #[serde(rename = "samsung-gt-a9500")]
    pub samsung_gt_a9500: SamsungGtA9500,
    #[serde(rename = "samsung-gt-android")]
    pub samsung_gt_android: SamsungGtAndroid,
    #[serde(rename = "samsung-gt-b2710")]
    pub samsung_gt_b2710: SamsungGtB2710,
    #[serde(rename = "samsung-gt-b3210")]
    pub samsung_gt_b3210: SamsungGtB3210,
    #[serde(rename = "samsung-gt-b3310")]
    pub samsung_gt_b3310: SamsungGtB3310,
    #[serde(rename = "samsung-gt-b3313")]
    pub samsung_gt_b3313: SamsungGtB3313,
    #[serde(rename = "samsung-gt-b3410")]
    pub samsung_gt_b3410: SamsungGtB3410,
    #[serde(rename = "samsung-gt-b3410w")]
    pub samsung_gt_b3410w: SamsungGtB3410w,
    #[serde(rename = "samsung-gt-b5310")]
    pub samsung_gt_b5310: SamsungGtB5310,
    #[serde(rename = "samsung-gt-b5330")]
    pub samsung_gt_b5330: SamsungGtB5330,
    #[serde(rename = "samsung-gt-b5330l")]
    pub samsung_gt_b5330l: SamsungGtB5330l,
    #[serde(rename = "samsung-gt-b5369")]
    pub samsung_gt_b5369: SamsungGtB5369,
    #[serde(rename = "samsung-gt-b5510")]
    pub samsung_gt_b5510: SamsungGtB5510,
    #[serde(rename = "samsung-gt-b5510b")]
    pub samsung_gt_b5510b: SamsungGtB5510b,
    #[serde(rename = "samsung-gt-b5510l")]
    pub samsung_gt_b5510l: SamsungGtB5510l,
    #[serde(rename = "samsung-gt-b5512")]
    pub samsung_gt_b5512: SamsungGtB5512,
    #[serde(rename = "samsung-gt-b5722")]
    pub samsung_gt_b5722: SamsungGtB5722,
    #[serde(rename = "samsung-gt-b7300")]
    pub samsung_gt_b7300: SamsungGtB7300,
    #[serde(rename = "samsung-gt-b7320")]
    pub samsung_gt_b7320: SamsungGtB7320,
    #[serde(rename = "samsung-gt-b7330")]
    pub samsung_gt_b7330: SamsungGtB7330,
    #[serde(rename = "samsung-gt-b7350")]
    pub samsung_gt_b7350: SamsungGtB7350,
    #[serde(rename = "samsung-gt-b7510")]
    pub samsung_gt_b7510: SamsungGtB7510,
    #[serde(rename = "samsung-gt-b7510b")]
    pub samsung_gt_b7510b: SamsungGtB7510b,
    #[serde(rename = "samsung-gt-b7510l")]
    pub samsung_gt_b7510l: SamsungGtB7510l,
    #[serde(rename = "samsung-gt-b7610")]
    pub samsung_gt_b7610: SamsungGtB7610,
    #[serde(rename = "samsung-gt-b7722")]
    pub samsung_gt_b7722: SamsungGtB7722,
    #[serde(rename = "samsung-gt-b9150")]
    pub samsung_gt_b9150: SamsungGtB9150,
    #[serde(rename = "samsung-gt-bn")]
    pub samsung_gt_bn: SamsungGtBn,
    #[serde(rename = "samsung-gt-c3010")]
    pub samsung_gt_c3010: SamsungGtC3010,
    #[serde(rename = "samsung-gt-c3011")]
    pub samsung_gt_c3011: SamsungGtC3011,
    #[serde(rename = "samsung-gt-c3200")]
    pub samsung_gt_c3200: SamsungGtC3200,
    #[serde(rename = "samsung-gt-c3212")]
    pub samsung_gt_c3212: SamsungGtC3212,
    #[serde(rename = "samsung-gt-c3212i")]
    pub samsung_gt_c3212i: SamsungGtC3212i,
    #[serde(rename = "samsung-gt-c3222")]
    pub samsung_gt_c3222: SamsungGtC3222,
    #[serde(rename = "samsung-gt-c3222w")]
    pub samsung_gt_c3222w: SamsungGtC3222w,
    #[serde(rename = "samsung-gt-c3260")]
    pub samsung_gt_c3260: SamsungGtC3260,
    #[serde(rename = "samsung-gt-c3262")]
    pub samsung_gt_c3262: SamsungGtC3262,
    #[serde(rename = "samsung-gt-c3300i")]
    pub samsung_gt_c3300i: SamsungGtC3300i,
    #[serde(rename = "samsung-gt-c3300k")]
    pub samsung_gt_c3300k: SamsungGtC3300k,
    #[serde(rename = "samsung-gt-c3303")]
    pub samsung_gt_c3303: SamsungGtC3303,
    #[serde(rename = "samsung-gt-c3303i")]
    pub samsung_gt_c3303i: SamsungGtC3303i,
    #[serde(rename = "samsung-gt-c3303k")]
    pub samsung_gt_c3303k: SamsungGtC3303k,
    #[serde(rename = "samsung-gt-c3310")]
    pub samsung_gt_c3310: SamsungGtC3310,
    #[serde(rename = "samsung-gt-c3310r")]
    pub samsung_gt_c3310r: SamsungGtC3310r,
    #[serde(rename = "samsung-gt-c3312")]
    pub samsung_gt_c3312: SamsungGtC3312,
    #[serde(rename = "samsung-gt-c3312r")]
    pub samsung_gt_c3312r: SamsungGtC3312r,
    #[serde(rename = "samsung-gt-c3322")]
    pub samsung_gt_c3322: SamsungGtC3322,
    #[serde(rename = "samsung-gt-c3322i")]
    pub samsung_gt_c3322i: SamsungGtC3322i,
    #[serde(rename = "samsung-gt-c3330")]
    pub samsung_gt_c3330: SamsungGtC3330,
    #[serde(rename = "samsung-gt-c3350")]
    pub samsung_gt_c3350: SamsungGtC3350,
    #[serde(rename = "samsung-gt-c3510")]
    pub samsung_gt_c3510: SamsungGtC3510,
    #[serde(rename = "samsung-gt-c3510t")]
    pub samsung_gt_c3510t: SamsungGtC3510t,
    #[serde(rename = "samsung-gt-c3520")]
    pub samsung_gt_c3520: SamsungGtC3520,
    #[serde(rename = "samsung-gt-c3520i")]
    pub samsung_gt_c3520i: SamsungGtC3520i,
    #[serde(rename = "samsung-gt-c3530")]
    pub samsung_gt_c3530: SamsungGtC3530,
    #[serde(rename = "samsung-gt-c3536w")]
    pub samsung_gt_c3536w: SamsungGtC3536w,
    #[serde(rename = "samsung-gt-c3560")]
    pub samsung_gt_c3560: SamsungGtC3560,
    #[serde(rename = "samsung-gt-c3590")]
    pub samsung_gt_c3590: SamsungGtC3590,
    #[serde(rename = "samsung-gt-c3592")]
    pub samsung_gt_c3592: SamsungGtC3592,
    #[serde(rename = "samsung-gt-c3595")]
    pub samsung_gt_c3595: SamsungGtC3595,
    #[serde(rename = "samsung-gt-c3595v")]
    pub samsung_gt_c3595v: SamsungGtC3595v,
    #[serde(rename = "samsung-gt-c3750")]
    pub samsung_gt_c3750: SamsungGtC3750,
    #[serde(rename = "samsung-gt-c3752")]
    pub samsung_gt_c3752: SamsungGtC3752,
    #[serde(rename = "samsung-gt-c3782")]
    pub samsung_gt_c3782: SamsungGtC3782,
    #[serde(rename = "samsung-gt-c4")]
    pub samsung_gt_c4: SamsungGtC4,
    #[serde(rename = "samsung-gt-c4b")]
    pub samsung_gt_c4b: SamsungGtC4b,
    #[serde(rename = "samsung-gt-c4wb")]
    pub samsung_gt_c4wb: SamsungGtC4wb,
    #[serde(rename = "samsung-gt-c5010e")]
    pub samsung_gt_c5010e: SamsungGtC5010e,
    #[serde(rename = "samsung-gt-c5212i")]
    pub samsung_gt_c5212i: SamsungGtC5212i,
    #[serde(rename = "samsung-gt-c6112")]
    pub samsung_gt_c6112: SamsungGtC6112,
    #[serde(rename = "samsung-gt-c6712")]
    pub samsung_gt_c6712: SamsungGtC6712,
    #[serde(rename = "samsung-gt-c8")]
    pub samsung_gt_c8: SamsungGtC8,
    #[serde(rename = "samsung-gt-citrix")]
    pub samsung_gt_citrix: SamsungGtCitrix,
    #[serde(rename = "samsung-gt-e1130b")]
    pub samsung_gt_e1130b: SamsungGtE1130b,
    #[serde(rename = "samsung-gt-e1265")]
    pub samsung_gt_e1265: SamsungGtE1265,
    #[serde(rename = "samsung-gt-e1282t")]
    pub samsung_gt_e1282t: SamsungGtE1282t,
    #[serde(rename = "samsung-gt-e1500")]
    pub samsung_gt_e1500: SamsungGtE1500,
    #[serde(rename = "samsung-gt-e2120")]
    pub samsung_gt_e2120: SamsungGtE2120,
    #[serde(rename = "samsung-gt-e2120b")]
    pub samsung_gt_e2120b: SamsungGtE2120b,
    #[serde(rename = "samsung-gt-e2120i")]
    pub samsung_gt_e2120i: SamsungGtE2120i,
    #[serde(rename = "samsung-gt-e2121")]
    pub samsung_gt_e2121: SamsungGtE2121,
    #[serde(rename = "samsung-gt-e2121b")]
    pub samsung_gt_e2121b: SamsungGtE2121b,
    #[serde(rename = "samsung-gt-e2121l")]
    pub samsung_gt_e2121l: SamsungGtE2121l,
    #[serde(rename = "samsung-gt-e2130")]
    pub samsung_gt_e2130: SamsungGtE2130,
    #[serde(rename = "samsung-gt-e2152")]
    pub samsung_gt_e2152: SamsungGtE2152,
    #[serde(rename = "samsung-gt-e2152i")]
    pub samsung_gt_e2152i: SamsungGtE2152i,
    #[serde(rename = "samsung-gt-e2200")]
    pub samsung_gt_e2200: SamsungGtE2200,
    #[serde(rename = "samsung-gt-e2202")]
    pub samsung_gt_e2202: SamsungGtE2202,
    #[serde(rename = "samsung-gt-e2222")]
    pub samsung_gt_e2222: SamsungGtE2222,
    #[serde(rename = "samsung-gt-e2230")]
    pub samsung_gt_e2230: SamsungGtE2230,
    #[serde(rename = "samsung-gt-e2230m")]
    pub samsung_gt_e2230m: SamsungGtE2230m,
    #[serde(rename = "samsung-gt-e2232")]
    pub samsung_gt_e2232: SamsungGtE2232,
    #[serde(rename = "samsung-gt-e2250")]
    pub samsung_gt_e2250: SamsungGtE2250,
    #[serde(rename = "samsung-gt-e2252")]
    pub samsung_gt_e2252: SamsungGtE2252,
    #[serde(rename = "samsung-gt-e2262")]
    pub samsung_gt_e2262: SamsungGtE2262,
    #[serde(rename = "samsung-gt-e2330")]
    pub samsung_gt_e2330: SamsungGtE2330,
    #[serde(rename = "samsung-gt-e2350b")]
    pub samsung_gt_e2350b: SamsungGtE2350b,
    #[serde(rename = "samsung-gt-e2370")]
    pub samsung_gt_e2370: SamsungGtE2370,
    #[serde(rename = "samsung-gt-e2530")]
    pub samsung_gt_e2530: SamsungGtE2530,
    #[serde(rename = "samsung-gt-e2550")]
    pub samsung_gt_e2550: SamsungGtE2550,
    #[serde(rename = "samsung-gt-e2600")]
    pub samsung_gt_e2600: SamsungGtE2600,
    #[serde(rename = "samsung-gt-e2652")]
    pub samsung_gt_e2652: SamsungGtE2652,
    #[serde(rename = "samsung-gt-e2652w")]
    pub samsung_gt_e2652w: SamsungGtE2652w,
    #[serde(rename = "samsung-gt-e3210")]
    pub samsung_gt_e3210: SamsungGtE3210,
    #[serde(rename = "samsung-gt-e3210b")]
    pub samsung_gt_e3210b: SamsungGtE3210b,
    #[serde(rename = "samsung-gt-e3213k")]
    pub samsung_gt_e3213k: SamsungGtE3213k,
    #[serde(rename = "samsung-gt-e3300")]
    pub samsung_gt_e3300: SamsungGtE3300,
    #[serde(rename = "samsung-gt-e3300i")]
    pub samsung_gt_e3300i: SamsungGtE3300i,
    #[serde(rename = "samsung-gt-e3300l")]
    pub samsung_gt_e3300l: SamsungGtE3300l,
    #[serde(rename = "samsung-gt-e3300v")]
    pub samsung_gt_e3300v: SamsungGtE3300v,
    #[serde(rename = "samsung-gt-e3309")]
    pub samsung_gt_e3309: SamsungGtE3309,
    #[serde(rename = "samsung-gt-e3309i")]
    pub samsung_gt_e3309i: SamsungGtE3309i,
    #[serde(rename = "samsung-gt-e3309t")]
    pub samsung_gt_e3309t: SamsungGtE3309t,
    #[serde(rename = "samsung-gt-h9500")]
    pub samsung_gt_h9500: SamsungGtH9500,
    #[serde(rename = "samsung-gt-h9503")]
    pub samsung_gt_h9503: SamsungGtH9503,
    #[serde(rename = "samsung-gt-i20")]
    pub samsung_gt_i20: SamsungGtI20,
    #[serde(rename = "samsung-gt-i5801")]
    pub samsung_gt_i5801: SamsungGtI5801,
    #[serde(rename = "samsung-gt-i6410")]
    pub samsung_gt_i6410: SamsungGtI6410,
    #[serde(rename = "samsung-gt-i8150")]
    pub samsung_gt_i8150: SamsungGtI8150,
    #[serde(rename = "samsung-gt-i8150b")]
    pub samsung_gt_i8150b: SamsungGtI8150b,
    #[serde(rename = "samsung-gt-i8150t")]
    pub samsung_gt_i8150t: SamsungGtI8150t,
    #[serde(rename = "samsung-gt-i8159")]
    pub samsung_gt_i8159: SamsungGtI8159,
    #[serde(rename = "samsung-gt-i8268")]
    pub samsung_gt_i8268: SamsungGtI8268,
    #[serde(rename = "samsung-gt-i8350")]
    pub samsung_gt_i8350: SamsungGtI8350,
    #[serde(rename = "samsung-gt-i8550e")]
    pub samsung_gt_i8550e: SamsungGtI8550e,
    #[serde(rename = "samsung-gt-i8750")]
    pub samsung_gt_i8750: SamsungGtI8750,
    #[serde(rename = "samsung-gt-i9050")]
    pub samsung_gt_i9050: SamsungGtI9050,
    #[serde(rename = "samsung-gt-i9082c")]
    pub samsung_gt_i9082c: SamsungGtI9082c,
    #[serde(rename = "samsung-gt-i9082i")]
    pub samsung_gt_i9082i: SamsungGtI9082i,
    #[serde(rename = "samsung-gt-i9100g")]
    pub samsung_gt_i9100g: SamsungGtI9100g,
    #[serde(rename = "samsung-gt-i9100m")]
    pub samsung_gt_i9100m: SamsungGtI9100m,
    #[serde(rename = "samsung-gt-i9100p")]
    pub samsung_gt_i9100p: SamsungGtI9100p,
    #[serde(rename = "samsung-gt-i9100t")]
    pub samsung_gt_i9100t: SamsungGtI9100t,
    #[serde(rename = "samsung-gt-i9103mobile")]
    pub samsung_gt_i9103mobile: SamsungGtI9103mobile,
    #[serde(rename = "samsung-gt-i9128e")]
    pub samsung_gt_i9128e: SamsungGtI9128e,
    #[serde(rename = "samsung-gt-i9128i")]
    pub samsung_gt_i9128i: SamsungGtI9128i,
    #[serde(rename = "samsung-gt-i9158v")]
    pub samsung_gt_i9158v: SamsungGtI9158v,
    #[serde(rename = "samsung-gt-i9195l")]
    pub samsung_gt_i9195l: SamsungGtI9195l,
    #[serde(rename = "samsung-gt-i93000")]
    pub samsung_gt_i93000: SamsungGtI93000,
    #[serde(rename = "samsung-gt-i9300build")]
    pub samsung_gt_i9300build: SamsungGtI9300build,
    #[serde(rename = "samsung-gt-i9305n")]
    pub samsung_gt_i9305n: SamsungGtI9305n,
    #[serde(rename = "samsung-gt-i9308i")]
    pub samsung_gt_i9308i: SamsungGtI9308i,
    #[serde(rename = "samsung-gt-i9500build")]
    pub samsung_gt_i9500build: SamsungGtI9500build,
    #[serde(rename = "samsung-gt-i9505g")]
    pub samsung_gt_i9505g: SamsungGtI9505g,
    #[serde(rename = "samsung-gt-i9505x")]
    pub samsung_gt_i9505x: SamsungGtI9505x,
    #[serde(rename = "samsung-gt-i9507v")]
    pub samsung_gt_i9507v: SamsungGtI9507v,
    #[serde(rename = "samsung-gt-i9600")]
    pub samsung_gt_i9600: SamsungGtI9600,
    #[serde(rename = "samsung-gt-l9300")]
    pub samsung_gt_l9300: SamsungGtL9300,
    #[serde(rename = "samsung-gt-m2310")]
    pub samsung_gt_m2310: SamsungGtM2310,
    #[serde(rename = "samsung-gt-m3710")]
    pub samsung_gt_m3710: SamsungGtM3710,
    #[serde(rename = "samsung-gt-m5650")]
    pub samsung_gt_m5650: SamsungGtM5650,
    #[serde(rename = "samsung-gt-m8800")]
    pub samsung_gt_m8800: SamsungGtM8800,
    #[serde(rename = "samsung-gt-m8910")]
    pub samsung_gt_m8910: SamsungGtM8910,
    #[serde(rename = "samsung-gt-n5100")]
    pub samsung_gt_n5100: SamsungGtN5100,
    #[serde(rename = "samsung-gt-n5105")]
    pub samsung_gt_n5105: SamsungGtN5105,
    #[serde(rename = "samsung-gt-n5110")]
    pub samsung_gt_n5110: SamsungGtN5110,
    #[serde(rename = "samsung-gt-n5120")]
    pub samsung_gt_n5120: SamsungGtN5120,
    #[serde(rename = "samsung-gt-n7000b")]
    pub samsung_gt_n7000b: SamsungGtN7000b,
    #[serde(rename = "samsung-gt-n7005")]
    pub samsung_gt_n7005: SamsungGtN7005,
    #[serde(rename = "samsung-gt-n7100t")]
    pub samsung_gt_n7100t: SamsungGtN7100t,
    #[serde(rename = "samsung-gt-n7102")]
    pub samsung_gt_n7102: SamsungGtN7102,
    #[serde(rename = "samsung-gt-n7105")]
    pub samsung_gt_n7105: SamsungGtN7105,
    #[serde(rename = "samsung-gt-n7105t")]
    pub samsung_gt_n7105t: SamsungGtN7105t,
    #[serde(rename = "samsung-gt-n7108")]
    pub samsung_gt_n7108: SamsungGtN7108,
    #[serde(rename = "samsung-gt-n717")]
    pub samsung_gt_n717: SamsungGtN717,
    #[serde(rename = "samsung-gt-n8000")]
    pub samsung_gt_n8000: SamsungGtN8000,
    #[serde(rename = "samsung-gt-n8005")]
    pub samsung_gt_n8005: SamsungGtN8005,
    #[serde(rename = "samsung-gt-n8010")]
    pub samsung_gt_n8010: SamsungGtN8010,
    #[serde(rename = "samsung-gt-n8020")]
    pub samsung_gt_n8020: SamsungGtN8020,
    #[serde(rename = "samsung-gt-n9000")]
    pub samsung_gt_n9000: SamsungGtN9000,
    #[serde(rename = "samsung-gt-n9005")]
    pub samsung_gt_n9005: SamsungGtN9005,
    #[serde(rename = "samsung-gt-n9300")]
    pub samsung_gt_n9300: SamsungGtN9300,
    #[serde(rename = "samsung-gt-p1000l")]
    pub samsung_gt_p1000l: SamsungGtP1000l,
    #[serde(rename = "samsung-gt-p1000m")]
    pub samsung_gt_p1000m: SamsungGtP1000m,
    #[serde(rename = "samsung-gt-p1000n")]
    pub samsung_gt_p1000n: SamsungGtP1000n,
    #[serde(rename = "samsung-gt-p1000r")]
    pub samsung_gt_p1000r: SamsungGtP1000r,
    #[serde(rename = "samsung-gt-p1000t")]
    pub samsung_gt_p1000t: SamsungGtP1000t,
    #[serde(rename = "samsung-gt-p1010")]
    pub samsung_gt_p1010: SamsungGtP1010,
    #[serde(rename = "samsung-gt-p3100b")]
    pub samsung_gt_p3100b: SamsungGtP3100b,
    #[serde(rename = "samsung-gt-p3105")]
    pub samsung_gt_p3105: SamsungGtP3105,
    #[serde(rename = "samsung-gt-p3108")]
    pub samsung_gt_p3108: SamsungGtP3108,
    #[serde(rename = "samsung-gt-p3110")]
    pub samsung_gt_p3110: SamsungGtP3110,
    #[serde(rename = "samsung-gt-p5100")]
    pub samsung_gt_p5100: SamsungGtP5100,
    #[serde(rename = "samsung-gt-p51103")]
    pub samsung_gt_p51103: SamsungGtP51103,
    #[serde(rename = "samsung-gt-p5200")]
    pub samsung_gt_p5200: SamsungGtP5200,
    #[serde(rename = "samsung-gt-p5210xd1")]
    pub samsung_gt_p5210xd1: SamsungGtP5210xd1,
    #[serde(rename = "samsung-gt-p5220")]
    pub samsung_gt_p5220: SamsungGtP5220,
    #[serde(rename = "samsung-gt-p6200")]
    pub samsung_gt_p6200: SamsungGtP6200,
    #[serde(rename = "samsung-gt-p6200l")]
    pub samsung_gt_p6200l: SamsungGtP6200l,
    #[serde(rename = "samsung-gt-p6201")]
    pub samsung_gt_p6201: SamsungGtP6201,
    #[serde(rename = "samsung-gt-p6210")]
    pub samsung_gt_p6210: SamsungGtP6210,
    #[serde(rename = "samsung-gt-p6211")]
    pub samsung_gt_p6211: SamsungGtP6211,
    #[serde(rename = "samsung-gt-p6800")]
    pub samsung_gt_p6800: SamsungGtP6800,
    #[serde(rename = "samsung-gt-p6810")]
    pub samsung_gt_p6810: SamsungGtP6810,
    #[serde(rename = "samsung-gt-p7100")]
    pub samsung_gt_p7100: SamsungGtP7100,
    #[serde(rename = "samsung-gt-p7300")]
    pub samsung_gt_p7300: SamsungGtP7300,
    #[serde(rename = "samsung-gt-p7300b")]
    pub samsung_gt_p7300b: SamsungGtP7300b,
    #[serde(rename = "samsung-gt-p7310")]
    pub samsung_gt_p7310: SamsungGtP7310,
    #[serde(rename = "samsung-gt-p7320")]
    pub samsung_gt_p7320: SamsungGtP7320,
    #[serde(rename = "samsung-gt-p7320t")]
    pub samsung_gt_p7320t: SamsungGtP7320t,
    #[serde(rename = "samsung-gt-p7500d")]
    pub samsung_gt_p7500d: SamsungGtP7500d,
    #[serde(rename = "samsung-gt-p7500m")]
    pub samsung_gt_p7500m: SamsungGtP7500m,
    #[serde(rename = "samsung-gt-p7500r")]
    pub samsung_gt_p7500r: SamsungGtP7500r,
    #[serde(rename = "samsung-gt-p7500v")]
    pub samsung_gt_p7500v: SamsungGtP7500v,
    #[serde(rename = "samsung-gt-p7501")]
    pub samsung_gt_p7501: SamsungGtP7501,
    #[serde(rename = "samsung-gt-p7511")]
    pub samsung_gt_p7511: SamsungGtP7511,
    #[serde(rename = "samsung-gt-p8110")]
    pub samsung_gt_p8110: SamsungGtP8110,
    #[serde(rename = "samsung-gt-s3310")]
    pub samsung_gt_s3310: SamsungGtS3310,
    #[serde(rename = "samsung-gt-s3330")]
    pub samsung_gt_s3330: SamsungGtS3330,
    #[serde(rename = "samsung-gt-s3332")]
    pub samsung_gt_s3332: SamsungGtS3332,
    #[serde(rename = "samsung-gt-s3333")]
    pub samsung_gt_s3333: SamsungGtS3333,
    #[serde(rename = "samsung-gt-s3350")]
    pub samsung_gt_s3350: SamsungGtS3350,
    #[serde(rename = "samsung-gt-s3353")]
    pub samsung_gt_s3353: SamsungGtS3353,
    #[serde(rename = "samsung-gt-s3370")]
    pub samsung_gt_s3370: SamsungGtS3370,
    #[serde(rename = "samsung-gt-s3550")]
    pub samsung_gt_s3550: SamsungGtS3550,
    #[serde(rename = "samsung-gt-s3570")]
    pub samsung_gt_s3570: SamsungGtS3570,
    #[serde(rename = "samsung-gt-s3572")]
    pub samsung_gt_s3572: SamsungGtS3572,
    #[serde(rename = "samsung-gt-s3600i")]
    pub samsung_gt_s3600i: SamsungGtS3600i,
    #[serde(rename = "samsung-gt-s3650")]
    pub samsung_gt_s3650: SamsungGtS3650,
    #[serde(rename = "samsung-gt-s3653")]
    pub samsung_gt_s3653: SamsungGtS3653,
    #[serde(rename = "samsung-gt-s3653w")]
    pub samsung_gt_s3653w: SamsungGtS3653w,
    #[serde(rename = "samsung-gt-s3770c")]
    pub samsung_gt_s3770c: SamsungGtS3770c,
    #[serde(rename = "samsung-gt-s3770k")]
    pub samsung_gt_s3770k: SamsungGtS3770k,
    #[serde(rename = "samsung-gt-s3770m")]
    pub samsung_gt_s3770m: SamsungGtS3770m,
    #[serde(rename = "samsung-gt-s3770y")]
    pub samsung_gt_s3770y: SamsungGtS3770y,
    #[serde(rename = "samsung-gt-s3778v")]
    pub samsung_gt_s3778v: SamsungGtS3778v,
    #[serde(rename = "samsung-gt-s3800w")]
    pub samsung_gt_s3800w: SamsungGtS3800w,
    #[serde(rename = "samsung-gt-s3802")]
    pub samsung_gt_s3802: SamsungGtS3802,
    #[serde(rename = "samsung-gt-s3850")]
    pub samsung_gt_s3850: SamsungGtS3850,
    #[serde(rename = "samsung-gt-s5220")]
    pub samsung_gt_s5220: SamsungGtS5220,
    #[serde(rename = "samsung-gt-s5220r")]
    pub samsung_gt_s5220r: SamsungGtS5220r,
    #[serde(rename = "samsung-gt-s5222")]
    pub samsung_gt_s5222: SamsungGtS5222,
    #[serde(rename = "samsung-gt-s5222r")]
    pub samsung_gt_s5222r: SamsungGtS5222r,
    #[serde(rename = "samsung-gt-s5230")]
    pub samsung_gt_s5230: SamsungGtS5230,
    #[serde(rename = "samsung-gt-s5230w")]
    pub samsung_gt_s5230w: SamsungGtS5230w,
    #[serde(rename = "samsung-gt-s5233a")]
    pub samsung_gt_s5233a: SamsungGtS5233a,
    #[serde(rename = "samsung-gt-s5233s")]
    pub samsung_gt_s5233s: SamsungGtS5233s,
    #[serde(rename = "samsung-gt-s5233t")]
    pub samsung_gt_s5233t: SamsungGtS5233t,
    #[serde(rename = "samsung-gt-s5233w")]
    pub samsung_gt_s5233w: SamsungGtS5233w,
    #[serde(rename = "samsung-gt-s5250")]
    pub samsung_gt_s5250: SamsungGtS5250,
    #[serde(rename = "samsung-gt-s5253")]
    pub samsung_gt_s5253: SamsungGtS5253,
    #[serde(rename = "samsung-gt-s5260")]
    pub samsung_gt_s5260: SamsungGtS5260,
    #[serde(rename = "samsung-gt-s5260p")]
    pub samsung_gt_s5260p: SamsungGtS5260p,
    #[serde(rename = "samsung-gt-s5263")]
    pub samsung_gt_s5263: SamsungGtS5263,
    #[serde(rename = "samsung-gt-s5270k")]
    pub samsung_gt_s5270k: SamsungGtS5270k,
    #[serde(rename = "samsung-gt-s5270l")]
    pub samsung_gt_s5270l: SamsungGtS5270l,
    #[serde(rename = "samsung-gt-s5270y")]
    pub samsung_gt_s5270y: SamsungGtS5270y,
    #[serde(rename = "samsung-gt-s5280")]
    pub samsung_gt_s5280: SamsungGtS5280,
    #[serde(rename = "samsung-gt-s5282")]
    pub samsung_gt_s5282: SamsungGtS5282,
    #[serde(rename = "samsung-gt-s5283b")]
    pub samsung_gt_s5283b: SamsungGtS5283b,
    #[serde(rename = "samsung-gt-s5292")]
    pub samsung_gt_s5292: SamsungGtS5292,
    #[serde(rename = "samsung-gt-s5300")]
    pub samsung_gt_s5300: SamsungGtS5300,
    #[serde(rename = "samsung-gt-s5300b")]
    pub samsung_gt_s5300b: SamsungGtS5300b,
    #[serde(rename = "samsung-gt-s5300l")]
    pub samsung_gt_s5300l: SamsungGtS5300l,
    #[serde(rename = "samsung-gt-s5301")]
    pub samsung_gt_s5301: SamsungGtS5301,
    #[serde(rename = "samsung-gt-s5301b")]
    pub samsung_gt_s5301b: SamsungGtS5301b,
    #[serde(rename = "samsung-gt-s5301l")]
    pub samsung_gt_s5301l: SamsungGtS5301l,
    #[serde(rename = "samsung-gt-s5302")]
    pub samsung_gt_s5302: SamsungGtS5302,
    #[serde(rename = "samsung-gt-s5302b")]
    pub samsung_gt_s5302b: SamsungGtS5302b,
    #[serde(rename = "samsung-gt-s5303")]
    pub samsung_gt_s5303: SamsungGtS5303,
    #[serde(rename = "samsung-gt-s5303b")]
    pub samsung_gt_s5303b: SamsungGtS5303b,
    #[serde(rename = "samsung-gt-s5310")]
    pub samsung_gt_s5310: SamsungGtS5310,
    #[serde(rename = "samsung-gt-s5310b")]
    pub samsung_gt_s5310b: SamsungGtS5310b,
    #[serde(rename = "samsung-gt-s5310c")]
    pub samsung_gt_s5310c: SamsungGtS5310c,
    #[serde(rename = "samsung-gt-s5310g")]
    pub samsung_gt_s5310g: SamsungGtS5310g,
    #[serde(rename = "samsung-gt-s5310i")]
    pub samsung_gt_s5310i: SamsungGtS5310i,
    #[serde(rename = "samsung-gt-s5310l")]
    pub samsung_gt_s5310l: SamsungGtS5310l,
    #[serde(rename = "samsung-gt-s5310m")]
    pub samsung_gt_s5310m: SamsungGtS5310m,
    #[serde(rename = "samsung-gt-s5310t")]
    pub samsung_gt_s5310t: SamsungGtS5310t,
    #[serde(rename = "samsung-gt-s5312")]
    pub samsung_gt_s5312: SamsungGtS5312,
    #[serde(rename = "samsung-gt-s5312b")]
    pub samsung_gt_s5312b: SamsungGtS5312b,
    #[serde(rename = "samsung-gt-s5312c")]
    pub samsung_gt_s5312c: SamsungGtS5312c,
    #[serde(rename = "samsung-gt-s5312l")]
    pub samsung_gt_s5312l: SamsungGtS5312l,
    #[serde(rename = "samsung-gt-s5330")]
    pub samsung_gt_s5330: SamsungGtS5330,
    #[serde(rename = "samsung-gt-s5333")]
    pub samsung_gt_s5333: SamsungGtS5333,
    #[serde(rename = "samsung-gt-s5350")]
    pub samsung_gt_s5350: SamsungGtS5350,
    #[serde(rename = "samsung-gt-s5360")]
    pub samsung_gt_s5360: SamsungGtS5360,
    #[serde(rename = "samsung-gt-s5360b")]
    pub samsung_gt_s5360b: SamsungGtS5360b,
    #[serde(rename = "samsung-gt-s5360build")]
    pub samsung_gt_s5360build: SamsungGtS5360build,
    #[serde(rename = "samsung-gt-s5360l")]
    pub samsung_gt_s5360l: SamsungGtS5360l,
    #[serde(rename = "samsung-gt-s5360t")]
    pub samsung_gt_s5360t: SamsungGtS5360t,
    #[serde(rename = "samsung-gt-s5363")]
    pub samsung_gt_s5363: SamsungGtS5363,
    #[serde(rename = "samsung-gt-s5367")]
    pub samsung_gt_s5367: SamsungGtS5367,
    #[serde(rename = "samsung-gt-s5369")]
    pub samsung_gt_s5369: SamsungGtS5369,
    #[serde(rename = "samsung-gt-s5380")]
    pub samsung_gt_s5380: SamsungGtS5380,
    #[serde(rename = "samsung-gt-s5380b")]
    pub samsung_gt_s5380b: SamsungGtS5380b,
    #[serde(rename = "samsung-gt-s5380d")]
    pub samsung_gt_s5380d: SamsungGtS5380d,
    #[serde(rename = "samsung-gt-s5380k")]
    pub samsung_gt_s5380k: SamsungGtS5380k,
    #[serde(rename = "samsung-gt-s5503")]
    pub samsung_gt_s5503: SamsungGtS5503,
    #[serde(rename = "samsung-gt-s5510t")]
    pub samsung_gt_s5510t: SamsungGtS5510t,
    #[serde(rename = "samsung-gt-s5511t")]
    pub samsung_gt_s5511t: SamsungGtS5511t,
    #[serde(rename = "samsung-gt-s5550")]
    pub samsung_gt_s5550: SamsungGtS5550,
    #[serde(rename = "samsung-gt-s5560")]
    pub samsung_gt_s5560: SamsungGtS5560,
    #[serde(rename = "samsung-gt-s5560i")]
    pub samsung_gt_s5560i: SamsungGtS5560i,
    #[serde(rename = "samsung-gt-s5570b")]
    pub samsung_gt_s5570b: SamsungGtS5570b,
    #[serde(rename = "samsung-gt-s5570i")]
    pub samsung_gt_s5570i: SamsungGtS5570i,
    #[serde(rename = "samsung-gt-s5570l")]
    pub samsung_gt_s5570l: SamsungGtS5570l,
    #[serde(rename = "samsung-gt-s5600")]
    pub samsung_gt_s5600: SamsungGtS5600,
    #[serde(rename = "samsung-gt-s5603")]
    pub samsung_gt_s5603: SamsungGtS5603,
    #[serde(rename = "samsung-gt-s5610")]
    pub samsung_gt_s5610: SamsungGtS5610,
    #[serde(rename = "samsung-gt-s5610k")]
    pub samsung_gt_s5610k: SamsungGtS5610k,
    #[serde(rename = "samsung-gt-s5611")]
    pub samsung_gt_s5611: SamsungGtS5611,
    #[serde(rename = "samsung-gt-s5620")]
    pub samsung_gt_s5620: SamsungGtS5620,
    #[serde(rename = "samsung-gt-s5620l")]
    pub samsung_gt_s5620l: SamsungGtS5620l,
    #[serde(rename = "samsung-gt-s5660l")]
    pub samsung_gt_s5660l: SamsungGtS5660l,
    #[serde(rename = "samsung-gt-s5660m")]
    pub samsung_gt_s5660m: SamsungGtS5660m,
    #[serde(rename = "samsung-gt-s5660v")]
    pub samsung_gt_s5660v: SamsungGtS5660v,
    #[serde(rename = "samsung-gt-s5660z")]
    pub samsung_gt_s5660z: SamsungGtS5660z,
    #[serde(rename = "samsung-gt-s5670")]
    pub samsung_gt_s5670: SamsungGtS5670,
    #[serde(rename = "samsung-gt-s5670b")]
    pub samsung_gt_s5670b: SamsungGtS5670b,
    #[serde(rename = "samsung-gt-s5670l")]
    pub samsung_gt_s5670l: SamsungGtS5670l,
    #[serde(rename = "samsung-gt-s5690")]
    pub samsung_gt_s5690: SamsungGtS5690,
    #[serde(rename = "samsung-gt-s5690l")]
    pub samsung_gt_s5690l: SamsungGtS5690l,
    #[serde(rename = "samsung-gt-s5690m")]
    pub samsung_gt_s5690m: SamsungGtS5690m,
    #[serde(rename = "samsung-gt-s5690r")]
    pub samsung_gt_s5690r: SamsungGtS5690r,
    #[serde(rename = "samsung-gt-s5750e")]
    pub samsung_gt_s5750e: SamsungGtS5750e,
    #[serde(rename = "samsung-gt-s5753e")]
    pub samsung_gt_s5753e: SamsungGtS5753e,
    #[serde(rename = "samsung-gt-s5830")]
    pub samsung_gt_s5830: SamsungGtS5830,
    #[serde(rename = "samsung-gt-s5830b")]
    pub samsung_gt_s5830b: SamsungGtS5830b,
    #[serde(rename = "samsung-gt-s5830c")]
    pub samsung_gt_s5830c: SamsungGtS5830c,
    #[serde(rename = "samsung-gt-s5830d")]
    pub samsung_gt_s5830d: SamsungGtS5830d,
    #[serde(rename = "samsung-gt-s5830g")]
    pub samsung_gt_s5830g: SamsungGtS5830g,
    #[serde(rename = "samsung-gt-s5830i")]
    pub samsung_gt_s5830i: SamsungGtS5830i,
    #[serde(rename = "samsung-gt-s5830l")]
    pub samsung_gt_s5830l: SamsungGtS5830l,
    #[serde(rename = "samsung-gt-s5830m")]
    pub samsung_gt_s5830m: SamsungGtS5830m,
    #[serde(rename = "samsung-gt-s5830t")]
    pub samsung_gt_s5830t: SamsungGtS5830t,
    #[serde(rename = "samsung-gt-s5830v")]
    pub samsung_gt_s5830v: SamsungGtS5830v,
    #[serde(rename = "samsung-gt-s5831")]
    pub samsung_gt_s5831: SamsungGtS5831,
    #[serde(rename = "samsung-gt-s5839i")]
    pub samsung_gt_s5839i: SamsungGtS5839i,
    #[serde(rename = "samsung-gt-s6010")]
    pub samsung_gt_s6010: SamsungGtS6010,
    #[serde(rename = "samsung-gt-s6010l")]
    pub samsung_gt_s6010l: SamsungGtS6010l,
    #[serde(rename = "samsung-gt-s6012")]
    pub samsung_gt_s6012: SamsungGtS6012,
    #[serde(rename = "samsung-gt-s6012b")]
    pub samsung_gt_s6012b: SamsungGtS6012b,
    #[serde(rename = "samsung-gt-s6102")]
    pub samsung_gt_s6102: SamsungGtS6102,
    #[serde(rename = "samsung-gt-s6102b")]
    pub samsung_gt_s6102b: SamsungGtS6102b,
    #[serde(rename = "samsung-gt-s6293t")]
    pub samsung_gt_s6293t: SamsungGtS6293t,
    #[serde(rename = "samsung-gt-s6310b")]
    pub samsung_gt_s6310b: SamsungGtS6310b,
    #[serde(rename = "samsung-gt-s6312")]
    pub samsung_gt_s6312: SamsungGtS6312,
    #[serde(rename = "samsung-gt-s6313t")]
    pub samsung_gt_s6313t: SamsungGtS6313t,
    #[serde(rename = "samsung-gt-s6352")]
    pub samsung_gt_s6352: SamsungGtS6352,
    #[serde(rename = "samsung-gt-s6358")]
    pub samsung_gt_s6358: SamsungGtS6358,
    #[serde(rename = "samsung-gt-s6500")]
    pub samsung_gt_s6500: SamsungGtS6500,
    #[serde(rename = "samsung-gt-s6500d")]
    pub samsung_gt_s6500d: SamsungGtS6500d,
    #[serde(rename = "samsung-gt-s6500l")]
    pub samsung_gt_s6500l: SamsungGtS6500l,
    #[serde(rename = "samsung-gt-s6500t")]
    pub samsung_gt_s6500t: SamsungGtS6500t,
    #[serde(rename = "samsung-gt-s6790")]
    pub samsung_gt_s6790: SamsungGtS6790,
    #[serde(rename = "samsung-gt-s6790l")]
    pub samsung_gt_s6790l: SamsungGtS6790l,
    #[serde(rename = "samsung-gt-s6790n")]
    pub samsung_gt_s6790n: SamsungGtS6790n,
    #[serde(rename = "samsung-gt-s6792l")]
    pub samsung_gt_s6792l: SamsungGtS6792l,
    #[serde(rename = "samsung-gt-s6800")]
    pub samsung_gt_s6800: SamsungGtS6800,
    #[serde(rename = "samsung-gt-s6802")]
    pub samsung_gt_s6802: SamsungGtS6802,
    #[serde(rename = "samsung-gt-s6802b")]
    pub samsung_gt_s6802b: SamsungGtS6802b,
    #[serde(rename = "samsung-gt-s6810")]
    pub samsung_gt_s6810: SamsungGtS6810,
    #[serde(rename = "samsung-gt-s6810b")]
    pub samsung_gt_s6810b: SamsungGtS6810b,
    #[serde(rename = "samsung-gt-s6810l")]
    pub samsung_gt_s6810l: SamsungGtS6810l,
    #[serde(rename = "samsung-gt-s6810m")]
    pub samsung_gt_s6810m: SamsungGtS6810m,
    #[serde(rename = "samsung-gt-s6810p")]
    pub samsung_gt_s6810p: SamsungGtS6810p,
    #[serde(rename = "samsung-gt-s6812")]
    pub samsung_gt_s6812: SamsungGtS6812,
    #[serde(rename = "samsung-gt-s6812b")]
    pub samsung_gt_s6812b: SamsungGtS6812b,
    #[serde(rename = "samsung-gt-s6812i")]
    pub samsung_gt_s6812i: SamsungGtS6812i,
    #[serde(rename = "samsung-gt-s6818")]
    pub samsung_gt_s6818: SamsungGtS6818,
    #[serde(rename = "samsung-gt-s7070")]
    pub samsung_gt_s7070: SamsungGtS7070,
    #[serde(rename = "samsung-gt-s7230e")]
    pub samsung_gt_s7230e: SamsungGtS7230e,
    #[serde(rename = "samsung-gt-s7233e")]
    pub samsung_gt_s7233e: SamsungGtS7233e,
    #[serde(rename = "samsung-gt-s7250")]
    pub samsung_gt_s7250: SamsungGtS7250,
    #[serde(rename = "samsung-gt-s7250d")]
    pub samsung_gt_s7250d: SamsungGtS7250d,
    #[serde(rename = "samsung-gt-s7262")]
    pub samsung_gt_s7262: SamsungGtS7262,
    #[serde(rename = "samsung-gt-s7270")]
    pub samsung_gt_s7270: SamsungGtS7270,
    #[serde(rename = "samsung-gt-s7270l")]
    pub samsung_gt_s7270l: SamsungGtS7270l,
    #[serde(rename = "samsung-gt-s7272")]
    pub samsung_gt_s7272: SamsungGtS7272,
    #[serde(rename = "samsung-gt-s7273t")]
    pub samsung_gt_s7273t: SamsungGtS7273t,
    #[serde(rename = "samsung-gt-s7278u")]
    pub samsung_gt_s7278u: SamsungGtS7278u,
    #[serde(rename = "samsung-gt-s7390")]
    pub samsung_gt_s7390: SamsungGtS7390,
    #[serde(rename = "samsung-gt-s7390g")]
    pub samsung_gt_s7390g: SamsungGtS7390g,
    #[serde(rename = "samsung-gt-s7390l")]
    pub samsung_gt_s7390l: SamsungGtS7390l,
    #[serde(rename = "samsung-gt-s7392")]
    pub samsung_gt_s7392: SamsungGtS7392,
    #[serde(rename = "samsung-gt-s7392l")]
    pub samsung_gt_s7392l: SamsungGtS7392l,
    #[serde(rename = "samsung-gt-s7500")]
    pub samsung_gt_s7500: SamsungGtS7500,
    #[serde(rename = "samsung-gt-s7500l")]
    pub samsung_gt_s7500l: SamsungGtS7500l,
    #[serde(rename = "samsung-gt-s7500t")]
    pub samsung_gt_s7500t: SamsungGtS7500t,
    #[serde(rename = "samsung-gt-s7530")]
    pub samsung_gt_s7530: SamsungGtS7530,
    #[serde(rename = "samsung-gt-s7530l")]
    pub samsung_gt_s7530l: SamsungGtS7530l,
    #[serde(rename = "samsung-gt-s7560")]
    pub samsung_gt_s7560: SamsungGtS7560,
    #[serde(rename = "samsung-gt-s7560m")]
    pub samsung_gt_s7560m: SamsungGtS7560m,
    #[serde(rename = "samsung-gt-s7562")]
    pub samsung_gt_s7562: SamsungGtS7562,
    #[serde(rename = "samsung-gt-s7562c")]
    pub samsung_gt_s7562c: SamsungGtS7562c,
    #[serde(rename = "samsung-gt-s7562i")]
    pub samsung_gt_s7562i: SamsungGtS7562i,
    #[serde(rename = "samsung-gt-s7562l")]
    pub samsung_gt_s7562l: SamsungGtS7562l,
    #[serde(rename = "samsung-gt-s7568")]
    pub samsung_gt_s7568: SamsungGtS7568,
    #[serde(rename = "samsung-gt-s7568i")]
    pub samsung_gt_s7568i: SamsungGtS7568i,
    #[serde(rename = "samsung-gt-s7572")]
    pub samsung_gt_s7572: SamsungGtS7572,
    #[serde(rename = "samsung-gt-s7580e")]
    pub samsung_gt_s7580e: SamsungGtS7580e,
    #[serde(rename = "samsung-gt-s7583t")]
    pub samsung_gt_s7583t: SamsungGtS7583t,
    #[serde(rename = "samsung-gt-s758x")]
    pub samsung_gt_s758x: SamsungGtS758x,
    #[serde(rename = "samsung-gt-s7710")]
    pub samsung_gt_s7710: SamsungGtS7710,
    #[serde(rename = "samsung-gt-s7710l")]
    pub samsung_gt_s7710l: SamsungGtS7710l,
    #[serde(rename = "samsung-gt-s7898")]
    pub samsung_gt_s7898: SamsungGtS7898,
    #[serde(rename = "samsung-gt-s8000l")]
    pub samsung_gt_s8000l: SamsungGtS8000l,
    #[serde(rename = "samsung-gt-s8003")]
    pub samsung_gt_s8003: SamsungGtS8003,
    #[serde(rename = "samsung-gt-s8500")]
    pub samsung_gt_s8500: SamsungGtS8500,
    #[serde(rename = "samsung-gt-s8500b")]
    pub samsung_gt_s8500b: SamsungGtS8500b,
    #[serde(rename = "samsung-gt-s8501")]
    pub samsung_gt_s8501: SamsungGtS8501,
    #[serde(rename = "samsung-gt-s8530")]
    pub samsung_gt_s8530: SamsungGtS8530,
    #[serde(rename = "samsung-gt-s8600")]
    pub samsung_gt_s8600: SamsungGtS8600,
    #[serde(rename = "samsung-gt-s900")]
    pub samsung_gt_s900: SamsungGtS900,
    #[serde(rename = "samsung-gt-si9100")]
    pub samsung_gt_si9100: SamsungGtSi9100,
    #[serde(rename = "samsung-gt-sl")]
    pub samsung_gt_sl: SamsungGtSl,
    #[serde(rename = "samsung-gt-t320nzwaxar")]
    pub samsung_gt_t320nzwaxar: SamsungGtT320nzwaxar,
    #[serde(rename = "samsung-gt-t9500")]
    pub samsung_gt_t9500: SamsungGtT9500,
    #[serde(rename = "samsung-gt-tb001")]
    pub samsung_gt_tb001: SamsungGtTb001,
    #[serde(rename = "samsung-sch-a850")]
    pub samsung_sch_a850: SamsungSchA850,
    #[serde(rename = "samsung-sch-a870")]
    pub samsung_sch_a870: SamsungSchA870,
    #[serde(rename = "samsung-sch-f689")]
    pub samsung_sch_f689: SamsungSchF689,
    #[serde(rename = "samsung-sch-f859")]
    pub samsung_sch_f859: SamsungSchF859,
    #[serde(rename = "samsung-sch-i100")]
    pub samsung_sch_i100: SamsungSchI100,
    #[serde(rename = "samsung-sch-i110")]
    pub samsung_sch_i110: SamsungSchI110,
    #[serde(rename = "samsung-sch-i200pp")]
    pub samsung_sch_i200pp: SamsungSchI200pp,
    #[serde(rename = "samsung-sch-i400")]
    pub samsung_sch_i400: SamsungSchI400,
    #[serde(rename = "samsung-sch-i405")]
    pub samsung_sch_i405: SamsungSchI405,
    #[serde(rename = "samsung-sch-i415")]
    pub samsung_sch_i415: SamsungSchI415,
    #[serde(rename = "samsung-sch-i435")]
    pub samsung_sch_i435: SamsungSchI435,
    #[serde(rename = "samsung-sch-i500")]
    pub samsung_sch_i500: SamsungSchI500,
    #[serde(rename = "samsung-sch-i509")]
    pub samsung_sch_i509: SamsungSchI509,
    #[serde(rename = "samsung-sch-i510")]
    pub samsung_sch_i510: SamsungSchI510,
    #[serde(rename = "samsung-sch-i535pp")]
    pub samsung_sch_i535pp: SamsungSchI535pp,
    #[serde(rename = "samsung-sch-i545")]
    pub samsung_sch_i545: SamsungSchI545,
    #[serde(rename = "samsung-sch-i545l")]
    pub samsung_sch_i545l: SamsungSchI545l,
    #[serde(rename = "samsung-sch-i545pp")]
    pub samsung_sch_i545pp: SamsungSchI545pp,
    #[serde(rename = "samsung-sch-i589")]
    pub samsung_sch_i589: SamsungSchI589,
    #[serde(rename = "samsung-sch-i699")]
    pub samsung_sch_i699: SamsungSchI699,
    #[serde(rename = "samsung-sch-i699i")]
    pub samsung_sch_i699i: SamsungSchI699i,
    #[serde(rename = "samsung-sch-i705")]
    pub samsung_sch_i705: SamsungSchI705,
    #[serde(rename = "samsung-sch-i739")]
    pub samsung_sch_i739: SamsungSchI739,
    #[serde(rename = "samsung-sch-i759")]
    pub samsung_sch_i759: SamsungSchI759,
    #[serde(rename = "samsung-sch-i770")]
    pub samsung_sch_i770: SamsungSchI770,
    #[serde(rename = "samsung-sch-i779")]
    pub samsung_sch_i779: SamsungSchI779,
    #[serde(rename = "samsung-sch-i800")]
    pub samsung_sch_i800: SamsungSchI800,
    #[serde(rename = "samsung-sch-i815")]
    pub samsung_sch_i815: SamsungSchI815,
    #[serde(rename = "samsung-sch-i829")]
    pub samsung_sch_i829: SamsungSchI829,
    #[serde(rename = "samsung-sch-i869")]
    pub samsung_sch_i869: SamsungSchI869,
    #[serde(rename = "samsung-sch-i889")]
    pub samsung_sch_i889: SamsungSchI889,
    #[serde(rename = "samsung-sch-i905")]
    pub samsung_sch_i905: SamsungSchI905,
    #[serde(rename = "samsung-sch-i910")]
    pub samsung_sch_i910: SamsungSchI910,
    #[serde(rename = "samsung-sch-i915")]
    pub samsung_sch_i915: SamsungSchI915,
    #[serde(rename = "samsung-sch-i920")]
    pub samsung_sch_i920: SamsungSchI920,
    #[serde(rename = "samsung-sch-i925")]
    pub samsung_sch_i925: SamsungSchI925,
    #[serde(rename = "samsung-sch-i925u")]
    pub samsung_sch_i925u: SamsungSchI925u,
    #[serde(rename = "samsung-sch-i929")]
    pub samsung_sch_i929: SamsungSchI929,
    #[serde(rename = "samsung-sch-i930")]
    pub samsung_sch_i930: SamsungSchI930,
    #[serde(rename = "samsung-sch-i939i")]
    pub samsung_sch_i939i: SamsungSchI939i,
    #[serde(rename = "samsung-sch-i959")]
    pub samsung_sch_i959: SamsungSchI959,
    #[serde(rename = "samsung-sch-l710")]
    pub samsung_sch_l710: SamsungSchL710,
    #[serde(rename = "samsung-sch-m828c")]
    pub samsung_sch_m828c: SamsungSchM828c,
    #[serde(rename = "samsung-sch-n719")]
    pub samsung_sch_n719: SamsungSchN719,
    #[serde(rename = "samsung-sch-p709")]
    pub samsung_sch_p709: SamsungSchP709,
    #[serde(rename = "samsung-sch-r211")]
    pub samsung_sch_r211: SamsungSchR211,
    #[serde(rename = "samsung-sch-r500")]
    pub samsung_sch_r500: SamsungSchR500,
    #[serde(rename = "samsung-sch-r530c")]
    pub samsung_sch_r530c: SamsungSchR530c,
    #[serde(rename = "samsung-sch-r530m")]
    pub samsung_sch_r530m: SamsungSchR530m,
    #[serde(rename = "samsung-sch-r530u")]
    pub samsung_sch_r530u: SamsungSchR530u,
    #[serde(rename = "samsung-sch-r530x")]
    pub samsung_sch_r530x: SamsungSchR530x,
    #[serde(rename = "samsung-sch-r680")]
    pub samsung_sch_r680: SamsungSchR680,
    #[serde(rename = "samsung-sch-r730")]
    pub samsung_sch_r730: SamsungSchR730,
    #[serde(rename = "samsung-sch-r740c")]
    pub samsung_sch_r740c: SamsungSchR740c,
    #[serde(rename = "samsung-sch-r760")]
    pub samsung_sch_r760: SamsungSchR760,
    #[serde(rename = "samsung-sch-r760x")]
    pub samsung_sch_r760x: SamsungSchR760x,
    #[serde(rename = "samsung-sch-r830")]
    pub samsung_sch_r830: SamsungSchR830,
    #[serde(rename = "samsung-sch-r830c")]
    pub samsung_sch_r830c: SamsungSchR830c,
    #[serde(rename = "samsung-sch-r860u")]
    pub samsung_sch_r860u: SamsungSchR860u,
    #[serde(rename = "samsung-sch-r880")]
    pub samsung_sch_r880: SamsungSchR880,
    #[serde(rename = "samsung-sch-r890")]
    pub samsung_sch_r890: SamsungSchR890,
    #[serde(rename = "samsung-sch-r910")]
    pub samsung_sch_r910: SamsungSchR910,
    #[serde(rename = "samsung-sch-r915")]
    pub samsung_sch_r915: SamsungSchR915,
    #[serde(rename = "samsung-sch-r920")]
    pub samsung_sch_r920: SamsungSchR920,
    #[serde(rename = "samsung-sch-r930")]
    pub samsung_sch_r930: SamsungSchR930,
    #[serde(rename = "samsung-sch-r940")]
    pub samsung_sch_r940: SamsungSchR940,
    #[serde(rename = "samsung-sch-r950")]
    pub samsung_sch_r950: SamsungSchR950,
    #[serde(rename = "samsung-sch-r960")]
    pub samsung_sch_r960: SamsungSchR960,
    #[serde(rename = "samsung-sch-r970")]
    pub samsung_sch_r970: SamsungSchR970,
    #[serde(rename = "samsung-sch-r970x")]
    pub samsung_sch_r970x: SamsungSchR970x,
    #[serde(rename = "samsung-sch-s720c")]
    pub samsung_sch_s720c: SamsungSchS720c,
    #[serde(rename = "samsung-sch-s735c")]
    pub samsung_sch_s735c: SamsungSchS735c,
    #[serde(rename = "samsung-sch-s738c")]
    pub samsung_sch_s738c: SamsungSchS738c,
    #[serde(rename = "samsung-sch-s950c")]
    pub samsung_sch_s950c: SamsungSchS950c,
    #[serde(rename = "samsung-sch-s960l")]
    pub samsung_sch_s960l: SamsungSchS960l,
    #[serde(rename = "samsung-sch-s968c")]
    pub samsung_sch_s968c: SamsungSchS968c,
    #[serde(rename = "samsung-sch-u350")]
    pub samsung_sch_u350: SamsungSchU350,
    #[serde(rename = "samsung-sch-u360")]
    pub samsung_sch_u360: SamsungSchU360,
    #[serde(rename = "samsung-sch-u365")]
    pub samsung_sch_u365: SamsungSchU365,
    #[serde(rename = "samsung-sch-u380")]
    pub samsung_sch_u380: SamsungSchU380,
    #[serde(rename = "samsung-sch-u410")]
    pub samsung_sch_u410: SamsungSchU410,
    #[serde(rename = "samsung-sch-u430")]
    pub samsung_sch_u430: SamsungSchU430,
    #[serde(rename = "samsung-sch-u450")]
    pub samsung_sch_u450: SamsungSchU450,
    #[serde(rename = "samsung-sch-u460l")]
    pub samsung_sch_u460l: SamsungSchU460l,
    #[serde(rename = "samsung-sch-u460p")]
    pub samsung_sch_u460p: SamsungSchU460p,
    #[serde(rename = "samsung-sch-u485")]
    pub samsung_sch_u485: SamsungSchU485,
    #[serde(rename = "samsung-sch-u640")]
    pub samsung_sch_u640: SamsungSchU640,
    #[serde(rename = "samsung-sch-u660")]
    pub samsung_sch_u660: SamsungSchU660,
    #[serde(rename = "samsung-sch-u680")]
    pub samsung_sch_u680: SamsungSchU680,
    #[serde(rename = "samsung-sch-u750l")]
    pub samsung_sch_u750l: SamsungSchU750l,
    #[serde(rename = "samsung-sch-u750p")]
    pub samsung_sch_u750p: SamsungSchU750p,
    #[serde(rename = "samsung-sch-u810")]
    pub samsung_sch_u810: SamsungSchU810,
    #[serde(rename = "samsung-sch-u820")]
    pub samsung_sch_u820: SamsungSchU820,
    #[serde(rename = "samsung-sch-u900")]
    pub samsung_sch_u900: SamsungSchU900,
    #[serde(rename = "samsung-sch-u960")]
    pub samsung_sch_u960: SamsungSchU960,
    #[serde(rename = "samsung-sch-w169")]
    pub samsung_sch_w169: SamsungSchW169,
    #[serde(rename = "samsung-sch-w259")]
    pub samsung_sch_w259: SamsungSchW259,
    #[serde(rename = "samsung-sch-w279")]
    pub samsung_sch_w279: SamsungSchW279,
    #[serde(rename = "samsung-sgh-000")]
    pub samsung_sgh_000: SamsungSgh000,
    #[serde(rename = "samsung-sgh-1337")]
    pub samsung_sgh_1337: SamsungSgh1337,
    #[serde(rename = "samsung-sgh-a107")]
    pub samsung_sgh_a107: SamsungSghA107,
    #[serde(rename = "samsung-sgh-a117")]
    pub samsung_sgh_a117: SamsungSghA117,
    #[serde(rename = "samsung-sgh-a157")]
    pub samsung_sgh_a157: SamsungSghA157,
    #[serde(rename = "samsung-sgh-a157v")]
    pub samsung_sgh_a157v: SamsungSghA157v,
    #[serde(rename = "samsung-sgh-a167")]
    pub samsung_sgh_a167: SamsungSghA167,
    #[serde(rename = "samsung-sgh-a177")]
    pub samsung_sgh_a177: SamsungSghA177,
    #[serde(rename = "samsung-sgh-a187")]
    pub samsung_sgh_a187: SamsungSghA187,
    #[serde(rename = "samsung-sgh-a197")]
    pub samsung_sgh_a197: SamsungSghA197,
    #[serde(rename = "samsung-sgh-a207")]
    pub samsung_sgh_a207: SamsungSghA207,
    #[serde(rename = "samsung-sgh-a256")]
    pub samsung_sgh_a256: SamsungSghA256,
    #[serde(rename = "samsung-sgh-a667")]
    pub samsung_sgh_a667: SamsungSghA667,
    #[serde(rename = "samsung-sgh-a687")]
    pub samsung_sgh_a687: SamsungSghA687,
    #[serde(rename = "samsung-sgh-a697")]
    pub samsung_sgh_a697: SamsungSghA697,
    #[serde(rename = "samsung-sgh-a727")]
    pub samsung_sgh_a727: SamsungSghA727,
    #[serde(rename = "samsung-sgh-a736")]
    pub samsung_sgh_a736: SamsungSghA736,
    #[serde(rename = "samsung-sgh-a777")]
    pub samsung_sgh_a777: SamsungSghA777,
    #[serde(rename = "samsung-sgh-a797")]
    pub samsung_sgh_a797: SamsungSghA797,
    #[serde(rename = "samsung-sgh-a817")]
    pub samsung_sgh_a817: SamsungSghA817,
    #[serde(rename = "samsung-sgh-a847")]
    pub samsung_sgh_a847: SamsungSghA847,
    #[serde(rename = "samsung-sgh-a847m")]
    pub samsung_sgh_a847m: SamsungSghA847m,
    #[serde(rename = "samsung-sgh-a867")]
    pub samsung_sgh_a867: SamsungSghA867,
    #[serde(rename = "samsung-sgh-a877")]
    pub samsung_sgh_a877: SamsungSghA877,
    #[serde(rename = "samsung-sgh-a887")]
    pub samsung_sgh_a887: SamsungSghA887,
    #[serde(rename = "samsung-sgh-a927")]
    pub samsung_sgh_a927: SamsungSghA927,
    #[serde(rename = "samsung-sgh-a997")]
    pub samsung_sgh_a997: SamsungSghA997,
    #[serde(rename = "samsung-sgh-a997d")]
    pub samsung_sgh_a997d: SamsungSghA997d,
    #[serde(rename = "samsung-sgh-a997m")]
    pub samsung_sgh_a997m: SamsungSghA997m,
    #[serde(rename = "samsung-sgh-b130")]
    pub samsung_sgh_b130: SamsungSghB130,
    #[serde(rename = "samsung-sgh-c160")]
    pub samsung_sgh_c160: SamsungSghC160,
    #[serde(rename = "samsung-sgh-c414w")]
    pub samsung_sgh_c414w: SamsungSghC414w,
    #[serde(rename = "samsung-sgh-d780")]
    pub samsung_sgh_d780: SamsungSghD780,
    #[serde(rename = "samsung-sgh-d880")]
    pub samsung_sgh_d880: SamsungSghD880,
    #[serde(rename = "samsung-sgh-d900")]
    pub samsung_sgh_d900: SamsungSghD900,
    #[serde(rename = "samsung-sgh-d900i")]
    pub samsung_sgh_d900i: SamsungSghD900i,
    #[serde(rename = "samsung-sgh-d980")]
    pub samsung_sgh_d980: SamsungSghD980,
    #[serde(rename = "samsung-sgh-e250")]
    pub samsung_sgh_e250: SamsungSghE250,
    #[serde(rename = "samsung-sgh-e250i")]
    pub samsung_sgh_e250i: SamsungSghE250i,
    #[serde(rename = "samsung-sgh-e250v")]
    pub samsung_sgh_e250v: SamsungSghE250v,
    #[serde(rename = "samsung-sgh-e370")]
    pub samsung_sgh_e370: SamsungSghE370,
    #[serde(rename = "samsung-sgh-e640")]
    pub samsung_sgh_e640: SamsungSghE640,
    #[serde(rename = "samsung-sgh-f250")]
    pub samsung_sgh_f250: SamsungSghF250,
    #[serde(rename = "samsung-sgh-f480")]
    pub samsung_sgh_f480: SamsungSghF480,
    #[serde(rename = "samsung-sgh-f480i")]
    pub samsung_sgh_f480i: SamsungSghF480i,
    #[serde(rename = "samsung-sgh-f490")]
    pub samsung_sgh_f490: SamsungSghF490,
    #[serde(rename = "samsung-sgh-i1337")]
    pub samsung_sgh_i1337: SamsungSghI1337,
    #[serde(rename = "samsung-sgh-i187")]
    pub samsung_sgh_i187: SamsungSghI187,
    #[serde(rename = "samsung-sgh-i200")]
    pub samsung_sgh_i200: SamsungSghI200,
    #[serde(rename = "samsung-sgh-i257")]
    pub samsung_sgh_i257: SamsungSghI257,
    #[serde(rename = "samsung-sgh-i257m")]
    pub samsung_sgh_i257m: SamsungSghI257m,
    #[serde(rename = "samsung-sgh-i317m")]
    pub samsung_sgh_i317m: SamsungSghI317m,
    #[serde(rename = "samsung-sgh-i337")]
    pub samsung_sgh_i337: SamsungSghI337,
    #[serde(rename = "samsung-sgh-i337m")]
    pub samsung_sgh_i337m: SamsungSghI337m,
    #[serde(rename = "samsung-sgh-i337z")]
    pub samsung_sgh_i337z: SamsungSghI337z,
    #[serde(rename = "samsung-sgh-i407")]
    pub samsung_sgh_i407: SamsungSghI407,
    #[serde(rename = "samsung-sgh-i437")]
    pub samsung_sgh_i437: SamsungSghI437,
    #[serde(rename = "samsung-sgh-i437p")]
    pub samsung_sgh_i437p: SamsungSghI437p,
    #[serde(rename = "samsung-sgh-i437z")]
    pub samsung_sgh_i437z: SamsungSghI437z,
    #[serde(rename = "samsung-sgh-i467")]
    pub samsung_sgh_i467: SamsungSghI467,
    #[serde(rename = "samsung-sgh-i467m")]
    pub samsung_sgh_i467m: SamsungSghI467m,
    #[serde(rename = "samsung-sgh-i497")]
    pub samsung_sgh_i497: SamsungSghI497,
    #[serde(rename = "samsung-sgh-i527")]
    pub samsung_sgh_i527: SamsungSghI527,
    #[serde(rename = "samsung-sgh-i527m")]
    pub samsung_sgh_i527m: SamsungSghI527m,
    #[serde(rename = "samsung-sgh-i537")]
    pub samsung_sgh_i537: SamsungSghI537,
    #[serde(rename = "samsung-sgh-i547")]
    pub samsung_sgh_i547: SamsungSghI547,
    #[serde(rename = "samsung-sgh-i547c")]
    pub samsung_sgh_i547c: SamsungSghI547c,
    #[serde(rename = "samsung-sgh-i577")]
    pub samsung_sgh_i577: SamsungSghI577,
    #[serde(rename = "samsung-sgh-i600v")]
    pub samsung_sgh_i600v: SamsungSghI600v,
    #[serde(rename = "samsung-sgh-i616")]
    pub samsung_sgh_i616: SamsungSghI616,
    #[serde(rename = "samsung-sgh-i617")]
    pub samsung_sgh_i617: SamsungSghI617,
    #[serde(rename = "samsung-sgh-i637")]
    pub samsung_sgh_i637: SamsungSghI637,
    #[serde(rename = "samsung-sgh-i667")]
    pub samsung_sgh_i667: SamsungSghI667,
    #[serde(rename = "samsung-sgh-i677")]
    pub samsung_sgh_i677: SamsungSghI677,
    #[serde(rename = "samsung-sgh-i717")]
    pub samsung_sgh_i717: SamsungSghI717,
    #[serde(rename = "samsung-sgh-i717d")]
    pub samsung_sgh_i717d: SamsungSghI717d,
    #[serde(rename = "samsung-sgh-i717m")]
    pub samsung_sgh_i717m: SamsungSghI717m,
    #[serde(rename = "samsung-sgh-i717r")]
    pub samsung_sgh_i717r: SamsungSghI717r,
    #[serde(rename = "samsung-sgh-i727")]
    pub samsung_sgh_i727: SamsungSghI727,
    #[serde(rename = "samsung-sgh-i727r")]
    pub samsung_sgh_i727r: SamsungSghI727r,
    #[serde(rename = "samsung-sgh-i757m")]
    pub samsung_sgh_i757m: SamsungSghI757m,
    #[serde(rename = "samsung-sgh-i777")]
    pub samsung_sgh_i777: SamsungSghI777,
    #[serde(rename = "samsung-sgh-i780")]
    pub samsung_sgh_i780: SamsungSghI780,
    #[serde(rename = "samsung-sgh-i827")]
    pub samsung_sgh_i827: SamsungSghI827,
    #[serde(rename = "samsung-sgh-i827d")]
    pub samsung_sgh_i827d: SamsungSghI827d,
    #[serde(rename = "samsung-sgh-i847")]
    pub samsung_sgh_i847: SamsungSghI847,
    #[serde(rename = "samsung-sgh-i857")]
    pub samsung_sgh_i857: SamsungSghI857,
    #[serde(rename = "samsung-sgh-i896")]
    pub samsung_sgh_i896: SamsungSghI896,
    #[serde(rename = "samsung-sgh-i897")]
    pub samsung_sgh_i897: SamsungSghI897,
    #[serde(rename = "samsung-sgh-i900")]
    pub samsung_sgh_i900: SamsungSghI900,
    #[serde(rename = "samsung-sgh-i900orange")]
    pub samsung_sgh_i900orange: SamsungSghI900orange,
    #[serde(rename = "samsung-sgh-i900v")]
    pub samsung_sgh_i900v: SamsungSghI900v,
    #[serde(rename = "samsung-sgh-i917")]
    pub samsung_sgh_i917: SamsungSghI917,
    #[serde(rename = "samsung-sgh-i917r")]
    pub samsung_sgh_i917r: SamsungSghI917r,
    #[serde(rename = "samsung-sgh-i927")]
    pub samsung_sgh_i927: SamsungSghI927,
    #[serde(rename = "samsung-sgh-i927r")]
    pub samsung_sgh_i927r: SamsungSghI927r,
    #[serde(rename = "samsung-sgh-i937")]
    pub samsung_sgh_i937: SamsungSghI937,
    #[serde(rename = "samsung-sgh-i957")]
    pub samsung_sgh_i957: SamsungSghI957,
    #[serde(rename = "samsung-sgh-i957d")]
    pub samsung_sgh_i957d: SamsungSghI957d,
    #[serde(rename = "samsung-sgh-i957m")]
    pub samsung_sgh_i957m: SamsungSghI957m,
    #[serde(rename = "samsung-sgh-i957r")]
    pub samsung_sgh_i957r: SamsungSghI957r,
    #[serde(rename = "samsung-sgh-i987")]
    pub samsung_sgh_i987: SamsungSghI987,
    #[serde(rename = "samsung-sgh-i997")]
    pub samsung_sgh_i997: SamsungSghI997,
    #[serde(rename = "samsung-sgh-i997r")]
    pub samsung_sgh_i997r: SamsungSghI997r,
    #[serde(rename = "samsung-sgh-j700")]
    pub samsung_sgh_j700: SamsungSghJ700,
    #[serde(rename = "samsung-sgh-j700i")]
    pub samsung_sgh_j700i: SamsungSghJ700i,
    #[serde(rename = "samsung-sgh-l700")]
    pub samsung_sgh_l700: SamsungSghL700,
    #[serde(rename = "samsung-sgh-l760")]
    pub samsung_sgh_l760: SamsungSghL760,
    #[serde(rename = "samsung-sgh-m150")]
    pub samsung_sgh_m150: SamsungSghM150,
    #[serde(rename = "samsung-sgh-m200")]
    pub samsung_sgh_m200: SamsungSghM200,
    #[serde(rename = "samsung-sgh-m819n")]
    pub samsung_sgh_m819n: SamsungSghM819n,
    #[serde(rename = "samsung-sgh-m919n")]
    pub samsung_sgh_m919n: SamsungSghM919n,
    #[serde(rename = "samsung-sgh-m919v")]
    pub samsung_sgh_m919v: SamsungSghM919v,
    #[serde(rename = "samsung-sgh-n075t")]
    pub samsung_sgh_n075t: SamsungSghN075t,
    #[serde(rename = "samsung-sgh-s150g")]
    pub samsung_sgh_s150g: SamsungSghS150g,
    #[serde(rename = "samsung-sgh-s275g")]
    pub samsung_sgh_s275g: SamsungSghS275g,
    #[serde(rename = "samsung-sgh-s275m")]
    pub samsung_sgh_s275m: SamsungSghS275m,
    #[serde(rename = "samsung-sgh-s390g")]
    pub samsung_sgh_s390g: SamsungSghS390g,
    #[serde(rename = "samsung-sgh-s425g")]
    pub samsung_sgh_s425g: SamsungSghS425g,
    #[serde(rename = "samsung-sgh-s730g")]
    pub samsung_sgh_s730g: SamsungSghS730g,
    #[serde(rename = "samsung-sgh-s730m")]
    pub samsung_sgh_s730m: SamsungSghS730m,
    #[serde(rename = "samsung-sgh-s959g")]
    pub samsung_sgh_s959g: SamsungSghS959g,
    #[serde(rename = "samsung-sgh-s970g")]
    pub samsung_sgh_s970g: SamsungSghS970g,
    #[serde(rename = "samsung-sgh-t139")]
    pub samsung_sgh_t139: SamsungSghT139,
    #[serde(rename = "samsung-sgh-t189n")]
    pub samsung_sgh_t189n: SamsungSghT189n,
    #[serde(rename = "samsung-sgh-t199")]
    pub samsung_sgh_t199: SamsungSghT199,
    #[serde(rename = "samsung-sgh-t229")]
    pub samsung_sgh_t229: SamsungSghT229,
    #[serde(rename = "samsung-sgh-t249")]
    pub samsung_sgh_t249: SamsungSghT249,
    #[serde(rename = "samsung-sgh-t255g")]
    pub samsung_sgh_t255g: SamsungSghT255g,
    #[serde(rename = "samsung-sgh-t259")]
    pub samsung_sgh_t259: SamsungSghT259,
    #[serde(rename = "samsung-sgh-t319")]
    pub samsung_sgh_t319: SamsungSghT319,
    #[serde(rename = "samsung-sgh-t329")]
    pub samsung_sgh_t329: SamsungSghT329,
    #[serde(rename = "samsung-sgh-t340g")]
    pub samsung_sgh_t340g: SamsungSghT340g,
    #[serde(rename = "samsung-sgh-t359")]
    pub samsung_sgh_t359: SamsungSghT359,
    #[serde(rename = "samsung-sgh-t369")]
    pub samsung_sgh_t369: SamsungSghT369,
    #[serde(rename = "samsung-sgh-t379")]
    pub samsung_sgh_t379: SamsungSghT379,
    #[serde(rename = "samsung-sgh-t399")]
    pub samsung_sgh_t399: SamsungSghT399,
    #[serde(rename = "samsung-sgh-t399n")]
    pub samsung_sgh_t399n: SamsungSghT399n,
    #[serde(rename = "samsung-sgh-t401g")]
    pub samsung_sgh_t401g: SamsungSghT401g,
    #[serde(rename = "samsung-sgh-t404g")]
    pub samsung_sgh_t404g: SamsungSghT404g,
    #[serde(rename = "samsung-sgh-t409")]
    pub samsung_sgh_t409: SamsungSghT409,
    #[serde(rename = "samsung-sgh-t459")]
    pub samsung_sgh_t459: SamsungSghT459,
    #[serde(rename = "samsung-sgh-t469")]
    pub samsung_sgh_t469: SamsungSghT469,
    #[serde(rename = "samsung-sgh-t479")]
    pub samsung_sgh_t479: SamsungSghT479,
    #[serde(rename = "samsung-sgh-t499")]
    pub samsung_sgh_t499: SamsungSghT499,
    #[serde(rename = "samsung-sgh-t499v")]
    pub samsung_sgh_t499v: SamsungSghT499v,
    #[serde(rename = "samsung-sgh-t499y")]
    pub samsung_sgh_t499y: SamsungSghT499y,
    #[serde(rename = "samsung-sgh-t528g")]
    pub samsung_sgh_t528g: SamsungSghT528g,
    #[serde(rename = "samsung-sgh-t559")]
    pub samsung_sgh_t559: SamsungSghT559,
    #[serde(rename = "samsung-sgh-t589")]
    pub samsung_sgh_t589: SamsungSghT589,
    #[serde(rename = "samsung-sgh-t589r")]
    pub samsung_sgh_t589r: SamsungSghT589r,
    #[serde(rename = "samsung-sgh-t589w")]
    pub samsung_sgh_t589w: SamsungSghT589w,
    #[serde(rename = "samsung-sgh-t599v")]
    pub samsung_sgh_t599v: SamsungSghT599v,
    #[serde(rename = "samsung-sgh-t669")]
    pub samsung_sgh_t669: SamsungSghT669,
    #[serde(rename = "samsung-sgh-t669y")]
    pub samsung_sgh_t669y: SamsungSghT669y,
    #[serde(rename = "samsung-sgh-t679")]
    pub samsung_sgh_t679: SamsungSghT679,
    #[serde(rename = "samsung-sgh-t679m")]
    pub samsung_sgh_t679m: SamsungSghT679m,
    #[serde(rename = "samsung-sgh-t699")]
    pub samsung_sgh_t699: SamsungSghT699,
    #[serde(rename = "samsung-sgh-t749")]
    pub samsung_sgh_t749: SamsungSghT749,
    #[serde(rename = "samsung-sgh-t759")]
    pub samsung_sgh_t759: SamsungSghT759,
    #[serde(rename = "samsung-sgh-t769")]
    pub samsung_sgh_t769: SamsungSghT769,
    #[serde(rename = "samsung-sgh-t779")]
    pub samsung_sgh_t779: SamsungSghT779,
    #[serde(rename = "samsung-sgh-t839")]
    pub samsung_sgh_t839: SamsungSghT839,
    #[serde(rename = "samsung-sgh-t849")]
    pub samsung_sgh_t849: SamsungSghT849,
    #[serde(rename = "samsung-sgh-t859")]
    pub samsung_sgh_t859: SamsungSghT859,
    #[serde(rename = "samsung-sgh-t869")]
    pub samsung_sgh_t869: SamsungSghT869,
    #[serde(rename = "samsung-sgh-t879")]
    pub samsung_sgh_t879: SamsungSghT879,
    #[serde(rename = "samsung-sgh-t889v")]
    pub samsung_sgh_t889v: SamsungSghT889v,
    #[serde(rename = "samsung-sgh-t899m")]
    pub samsung_sgh_t899m: SamsungSghT899m,
    #[serde(rename = "samsung-sgh-t959")]
    pub samsung_sgh_t959: SamsungSghT959,
    #[serde(rename = "samsung-sgh-t959d")]
    pub samsung_sgh_t959d: SamsungSghT959d,
    #[serde(rename = "samsung-sgh-t959p")]
    pub samsung_sgh_t959p: SamsungSghT959p,
    #[serde(rename = "samsung-sgh-t959v")]
    pub samsung_sgh_t959v: SamsungSghT959v,
    #[serde(rename = "samsung-sgh-t959w")]
    pub samsung_sgh_t959w: SamsungSghT959w,
    #[serde(rename = "samsung-sgh-t989d")]
    pub samsung_sgh_t989d: SamsungSghT989d,
    #[serde(rename = "samsung-sgh-t999l")]
    pub samsung_sgh_t999l: SamsungSghT999l,
    #[serde(rename = "samsung-sgh-t999n")]
    pub samsung_sgh_t999n: SamsungSghT999n,
    #[serde(rename = "samsung-sgh-t999v")]
    pub samsung_sgh_t999v: SamsungSghT999v,
    #[serde(rename = "samsung-sgh-u800")]
    pub samsung_sgh_u800: SamsungSghU800,
    #[serde(rename = "samsung-sgh-zv50")]
    pub samsung_sgh_zv50: SamsungSghZv50,
    #[serde(rename = "samsung-shv-e110s")]
    pub samsung_shv_e110s: SamsungShvE110s,
    #[serde(rename = "samsung-shv-e120k")]
    pub samsung_shv_e120k: SamsungShvE120k,
    #[serde(rename = "samsung-shv-e120l")]
    pub samsung_shv_e120l: SamsungShvE120l,
    #[serde(rename = "samsung-shv-e120s")]
    pub samsung_shv_e120s: SamsungShvE120s,
    #[serde(rename = "samsung-shv-e140k")]
    pub samsung_shv_e140k: SamsungShvE140k,
    #[serde(rename = "samsung-shv-e140l")]
    pub samsung_shv_e140l: SamsungShvE140l,
    #[serde(rename = "samsung-shv-e140s")]
    pub samsung_shv_e140s: SamsungShvE140s,
    #[serde(rename = "samsung-shv-e150s")]
    pub samsung_shv_e150s: SamsungShvE150s,
    #[serde(rename = "samsung-shv-e160k")]
    pub samsung_shv_e160k: SamsungShvE160k,
    #[serde(rename = "samsung-shv-e160l")]
    pub samsung_shv_e160l: SamsungShvE160l,
    #[serde(rename = "samsung-shv-e160s")]
    pub samsung_shv_e160s: SamsungShvE160s,
    #[serde(rename = "samsung-shv-e170l")]
    pub samsung_shv_e170l: SamsungShvE170l,
    #[serde(rename = "samsung-shv-e170s")]
    pub samsung_shv_e170s: SamsungShvE170s,
    #[serde(rename = "samsung-shv-e210k")]
    pub samsung_shv_e210k: SamsungShvE210k,
    #[serde(rename = "samsung-shv-e210l")]
    pub samsung_shv_e210l: SamsungShvE210l,
    #[serde(rename = "samsung-shv-e210s")]
    pub samsung_shv_e210s: SamsungShvE210s,
    #[serde(rename = "samsung-shv-e220s")]
    pub samsung_shv_e220s: SamsungShvE220s,
    #[serde(rename = "samsung-shv-e230k")]
    pub samsung_shv_e230k: SamsungShvE230k,
    #[serde(rename = "samsung-shv-e230s")]
    pub samsung_shv_e230s: SamsungShvE230s,
    #[serde(rename = "samsung-shv-e250k")]
    pub samsung_shv_e250k: SamsungShvE250k,
    #[serde(rename = "samsung-shv-e250l")]
    pub samsung_shv_e250l: SamsungShvE250l,
    #[serde(rename = "samsung-shv-e250s")]
    pub samsung_shv_e250s: SamsungShvE250s,
    #[serde(rename = "samsung-shv-e270k")]
    pub samsung_shv_e270k: SamsungShvE270k,
    #[serde(rename = "samsung-shv-e270l")]
    pub samsung_shv_e270l: SamsungShvE270l,
    #[serde(rename = "samsung-shv-e270s")]
    pub samsung_shv_e270s: SamsungShvE270s,
    #[serde(rename = "samsung-shv-e275s")]
    pub samsung_shv_e275s: SamsungShvE275s,
    #[serde(rename = "samsung-shv-e300k")]
    pub samsung_shv_e300k: SamsungShvE300k,
    #[serde(rename = "samsung-shv-e300l")]
    pub samsung_shv_e300l: SamsungShvE300l,
    #[serde(rename = "samsung-shv-e300s")]
    pub samsung_shv_e300s: SamsungShvE300s,
    #[serde(rename = "samsung-shv-e310k")]
    pub samsung_shv_e310k: SamsungShvE310k,
    #[serde(rename = "samsung-shv-e310l")]
    pub samsung_shv_e310l: SamsungShvE310l,
    #[serde(rename = "samsung-shv-e310s")]
    pub samsung_shv_e310s: SamsungShvE310s,
    #[serde(rename = "samsung-shv-e330k")]
    pub samsung_shv_e330k: SamsungShvE330k,
    #[serde(rename = "samsung-shv-e330l")]
    pub samsung_shv_e330l: SamsungShvE330l,
    #[serde(rename = "samsung-shv-e330s")]
    pub samsung_shv_e330s: SamsungShvE330s,
    #[serde(rename = "samsung-shv-e370k")]
    pub samsung_shv_e370k: SamsungShvE370k,
    #[serde(rename = "samsung-shv-e400s")]
    pub samsung_shv_e400s: SamsungShvE400s,
    #[serde(rename = "samsung-shv-e470s")]
    pub samsung_shv_e470s: SamsungShvE470s,
    #[serde(rename = "samsung-shv-e500s")]
    pub samsung_shv_e500s: SamsungShvE500s,
    #[serde(rename = "samsung-sm-001")]
    pub samsung_sm_001: SamsungSm001,
    #[serde(rename = "samsung-sm-1329")]
    pub samsung_sm_1329: SamsungSm1329,
    #[serde(rename = "samsung-sm-350e")]
    pub samsung_sm_350e: SamsungSm350e,
    #[serde(rename = "samsung-sm-705")]
    pub samsung_sm_705: SamsungSm705,
    #[serde(rename = "samsung-sm-910u")]
    pub samsung_sm_910u: SamsungSm910u,
    #[serde(rename = "samsung-sm-920t")]
    pub samsung_sm_920t: SamsungSm920t,
    #[serde(rename = "samsung-sm-970f")]
    pub samsung_sm_970f: SamsungSm970f,
    #[serde(rename = "samsung-sm-a3000")]
    pub samsung_sm_a3000: SamsungSmA3000,
    #[serde(rename = "samsung-sm-a300f")]
    pub samsung_sm_a300f: SamsungSmA300f,
    #[serde(rename = "samsung-sm-a300fu")]
    pub samsung_sm_a300fu: SamsungSmA300fu,
    #[serde(rename = "samsung-sm-a300g")]
    pub samsung_sm_a300g: SamsungSmA300g,
    #[serde(rename = "samsung-sm-a300h")]
    pub samsung_sm_a300h: SamsungSmA300h,
    #[serde(rename = "samsung-sm-a300m")]
    pub samsung_sm_a300m: SamsungSmA300m,
    #[serde(rename = "samsung-sm-a300y")]
    pub samsung_sm_a300y: SamsungSmA300y,
    #[serde(rename = "samsung-sm-a300yz")]
    pub samsung_sm_a300yz: SamsungSmA300yz,
    #[serde(rename = "samsung-sm-a310f")]
    pub samsung_sm_a310f: SamsungSmA310f,
    #[serde(rename = "samsung-sm-a310m")]
    pub samsung_sm_a310m: SamsungSmA310m,
    #[serde(rename = "samsung-sm-a310n0")]
    pub samsung_sm_a310n0: SamsungSmA310n0,
    #[serde(rename = "samsung-sm-a310x")]
    pub samsung_sm_a310x: SamsungSmA310x,
    #[serde(rename = "samsung-sm-a310y")]
    pub samsung_sm_a310y: SamsungSmA310y,
    #[serde(rename = "samsung-sm-a320f")]
    pub samsung_sm_a320f: SamsungSmA320f,
    #[serde(rename = "samsung-sm-a320fl")]
    pub samsung_sm_a320fl: SamsungSmA320fl,
    #[serde(rename = "samsung-sm-a320y")]
    pub samsung_sm_a320y: SamsungSmA320y,
    #[serde(rename = "samsung-sm-a500")]
    pub samsung_sm_a500: SamsungSmA500,
    #[serde(rename = "samsung-sm-a5000")]
    pub samsung_sm_a5000: SamsungSmA5000,
    #[serde(rename = "samsung-sm-a5009")]
    pub samsung_sm_a5009: SamsungSmA5009,
    #[serde(rename = "samsung-sm-a500f")]
    pub samsung_sm_a500f: SamsungSmA500f,
    #[serde(rename = "samsung-sm-a500fu")]
    pub samsung_sm_a500fu: SamsungSmA500fu,
    #[serde(rename = "samsung-sm-a500g")]
    pub samsung_sm_a500g: SamsungSmA500g,
    #[serde(rename = "samsung-sm-a500h")]
    pub samsung_sm_a500h: SamsungSmA500h,
    #[serde(rename = "samsung-sm-a500k")]
    pub samsung_sm_a500k: SamsungSmA500k,
    #[serde(rename = "samsung-sm-a500l")]
    pub samsung_sm_a500l: SamsungSmA500l,
    #[serde(rename = "samsung-sm-a500m")]
    pub samsung_sm_a500m: SamsungSmA500m,
    #[serde(rename = "samsung-sm-a500s")]
    pub samsung_sm_a500s: SamsungSmA500s,
    #[serde(rename = "samsung-sm-a500w")]
    pub samsung_sm_a500w: SamsungSmA500w,
    #[serde(rename = "samsung-sm-a500xz")]
    pub samsung_sm_a500xz: SamsungSmA500xz,
    #[serde(rename = "samsung-sm-a500y")]
    pub samsung_sm_a500y: SamsungSmA500y,
    #[serde(rename = "samsung-sm-a500yz")]
    pub samsung_sm_a500yz: SamsungSmA500yz,
    #[serde(rename = "samsung-sm-a5100")]
    pub samsung_sm_a5100: SamsungSmA5100,
    #[serde(rename = "samsung-sm-a5108")]
    pub samsung_sm_a5108: SamsungSmA5108,
    #[serde(rename = "samsung-sm-a510f")]
    pub samsung_sm_a510f: SamsungSmA510f,
    #[serde(rename = "samsung-sm-a510fd")]
    pub samsung_sm_a510fd: SamsungSmA510fd,
    #[serde(rename = "samsung-sm-a510k")]
    pub samsung_sm_a510k: SamsungSmA510k,
    #[serde(rename = "samsung-sm-a510l")]
    pub samsung_sm_a510l: SamsungSmA510l,
    #[serde(rename = "samsung-sm-a510m")]
    pub samsung_sm_a510m: SamsungSmA510m,
    #[serde(rename = "samsung-sm-a510s")]
    pub samsung_sm_a510s: SamsungSmA510s,
    #[serde(rename = "samsung-sm-a510y")]
    pub samsung_sm_a510y: SamsungSmA510y,
    #[serde(rename = "samsung-sm-a520f")]
    pub samsung_sm_a520f: SamsungSmA520f,
    #[serde(rename = "samsung-sm-a520l")]
    pub samsung_sm_a520l: SamsungSmA520l,
    #[serde(rename = "samsung-sm-a520s")]
    pub samsung_sm_a520s: SamsungSmA520s,
    #[serde(rename = "samsung-sm-a520w")]
    pub samsung_sm_a520w: SamsungSmA520w,
    #[serde(rename = "samsung-sm-a520x")]
    pub samsung_sm_a520x: SamsungSmA520x,
    #[serde(rename = "samsung-sm-a530f")]
    pub samsung_sm_a530f: SamsungSmA530f,
    #[serde(rename = "samsung-sm-a530n")]
    pub samsung_sm_a530n: SamsungSmA530n,
    #[serde(rename = "samsung-sm-a530w")]
    pub samsung_sm_a530w: SamsungSmA530w,
    #[serde(rename = "samsung-sm-a600f")]
    pub samsung_sm_a600f: SamsungSmA600f,
    #[serde(rename = "samsung-sm-a600fn")]
    pub samsung_sm_a600fn: SamsungSmA600fn,
    #[serde(rename = "samsung-sm-a600g")]
    pub samsung_sm_a600g: SamsungSmA600g,
    #[serde(rename = "samsung-sm-a6050")]
    pub samsung_sm_a6050: SamsungSmA6050,
    #[serde(rename = "samsung-sm-a605f")]
    pub samsung_sm_a605f: SamsungSmA605f,
    #[serde(rename = "samsung-sm-a605fn")]
    pub samsung_sm_a605fn: SamsungSmA605fn,
    #[serde(rename = "samsung-sm-a605g")]
    pub samsung_sm_a605g: SamsungSmA605g,
    #[serde(rename = "samsung-sm-a605gn")]
    pub samsung_sm_a605gn: SamsungSmA605gn,
    #[serde(rename = "samsung-sm-a605k")]
    pub samsung_sm_a605k: SamsungSmA605k,
    #[serde(rename = "samsung-sm-a7000")]
    pub samsung_sm_a7000: SamsungSmA7000,
    #[serde(rename = "samsung-sm-a7009")]
    pub samsung_sm_a7009: SamsungSmA7009,
    #[serde(rename = "samsung-sm-a700f")]
    pub samsung_sm_a700f: SamsungSmA700f,
    #[serde(rename = "samsung-sm-a700fd")]
    pub samsung_sm_a700fd: SamsungSmA700fd,
    #[serde(rename = "samsung-sm-a700h")]
    pub samsung_sm_a700h: SamsungSmA700h,
    #[serde(rename = "samsung-sm-a700k")]
    pub samsung_sm_a700k: SamsungSmA700k,
    #[serde(rename = "samsung-sm-a700l")]
    pub samsung_sm_a700l: SamsungSmA700l,
    #[serde(rename = "samsung-sm-a700s")]
    pub samsung_sm_a700s: SamsungSmA700s,
    #[serde(rename = "samsung-sm-a700yd")]
    pub samsung_sm_a700yd: SamsungSmA700yd,
    #[serde(rename = "samsung-sm-a71")]
    pub samsung_sm_a71: SamsungSmA71,
    #[serde(rename = "samsung-sm-a7100")]
    pub samsung_sm_a7100: SamsungSmA7100,
    #[serde(rename = "samsung-sm-a710f")]
    pub samsung_sm_a710f: SamsungSmA710f,
    #[serde(rename = "samsung-sm-a710k")]
    pub samsung_sm_a710k: SamsungSmA710k,
    #[serde(rename = "samsung-sm-a710l")]
    pub samsung_sm_a710l: SamsungSmA710l,
    #[serde(rename = "samsung-sm-a710m")]
    pub samsung_sm_a710m: SamsungSmA710m,
    #[serde(rename = "samsung-sm-a710s")]
    pub samsung_sm_a710s: SamsungSmA710s,
    #[serde(rename = "samsung-sm-a710y")]
    pub samsung_sm_a710y: SamsungSmA710y,
    #[serde(rename = "samsung-sm-a720f")]
    pub samsung_sm_a720f: SamsungSmA720f,
    #[serde(rename = "samsung-sm-a720s")]
    pub samsung_sm_a720s: SamsungSmA720s,
    #[serde(rename = "samsung-sm-a720x")]
    pub samsung_sm_a720x: SamsungSmA720x,
    #[serde(rename = "samsung-sm-a730f")]
    pub samsung_sm_a730f: SamsungSmA730f,
    #[serde(rename = "samsung-sm-a750f")]
    pub samsung_sm_a750f: SamsungSmA750f,
    #[serde(rename = "samsung-sm-a750fn")]
    pub samsung_sm_a750fn: SamsungSmA750fn,
    #[serde(rename = "samsung-sm-a8000")]
    pub samsung_sm_a8000: SamsungSmA8000,
    #[serde(rename = "samsung-sm-a800f")]
    pub samsung_sm_a800f: SamsungSmA800f,
    #[serde(rename = "samsung-sm-a800i")]
    pub samsung_sm_a800i: SamsungSmA800i,
    #[serde(rename = "samsung-sm-a800iz")]
    pub samsung_sm_a800iz: SamsungSmA800iz,
    #[serde(rename = "samsung-sm-a800s")]
    pub samsung_sm_a800s: SamsungSmA800s,
    #[serde(rename = "samsung-sm-a800yz")]
    pub samsung_sm_a800yz: SamsungSmA800yz,
    #[serde(rename = "samsung-sm-a810f")]
    pub samsung_sm_a810f: SamsungSmA810f,
    #[serde(rename = "samsung-sm-a810s")]
    pub samsung_sm_a810s: SamsungSmA810s,
    #[serde(rename = "samsung-sm-a810yz")]
    pub samsung_sm_a810yz: SamsungSmA810yz,
    #[serde(rename = "samsung-sm-a9")]
    pub samsung_sm_a9: SamsungSmA9,
    #[serde(rename = "samsung-sm-a9000")]
    pub samsung_sm_a9000: SamsungSmA9000,
    #[serde(rename = "samsung-sm-a9100")]
    pub samsung_sm_a9100: SamsungSmA9100,
    #[serde(rename = "samsung-sm-a910f")]
    pub samsung_sm_a910f: SamsungSmA910f,
    #[serde(rename = "samsung-sm-b311v")]
    pub samsung_sm_b311v: SamsungSmB311v,
    #[serde(rename = "samsung-sm-b312e")]
    pub samsung_sm_b312e: SamsungSmB312e,
    #[serde(rename = "samsung-sm-b313e")]
    pub samsung_sm_b313e: SamsungSmB313e,
    #[serde(rename = "samsung-sm-b350e")]
    pub samsung_sm_b350e: SamsungSmB350e,
    #[serde(rename = "samsung-sm-b351e")]
    pub samsung_sm_b351e: SamsungSmB351e,
    #[serde(rename = "samsung-sm-b355e")]
    pub samsung_sm_b355e: SamsungSmB355e,
    #[serde(rename = "samsung-sm-b360e")]
    pub samsung_sm_b360e: SamsungSmB360e,
    #[serde(rename = "samsung-sm-b510k")]
    pub samsung_sm_b510k: SamsungSmB510k,
    #[serde(rename = "samsung-sm-b550h")]
    pub samsung_sm_b550h: SamsungSmB550h,
    #[serde(rename = "samsung-sm-b690v")]
    pub samsung_sm_b690v: SamsungSmB690v,
    #[serde(rename = "samsung-sm-b780a")]
    pub samsung_sm_b780a: SamsungSmB780a,
    #[serde(rename = "samsung-sm-b780w")]
    pub samsung_sm_b780w: SamsungSmB780w,
    #[serde(rename = "samsung-sm-c101")]
    pub samsung_sm_c101: SamsungSmC101,
    #[serde(rename = "samsung-sm-c105")]
    pub samsung_sm_c105: SamsungSmC105,
    #[serde(rename = "samsung-sm-c105a")]
    pub samsung_sm_c105a: SamsungSmC105a,
    #[serde(rename = "samsung-sm-c105k")]
    pub samsung_sm_c105k: SamsungSmC105k,
    #[serde(rename = "samsung-sm-c105l")]
    pub samsung_sm_c105l: SamsungSmC105l,
    #[serde(rename = "samsung-sm-c111")]
    pub samsung_sm_c111: SamsungSmC111,
    #[serde(rename = "samsung-sm-c115")]
    pub samsung_sm_c115: SamsungSmC115,
    #[serde(rename = "samsung-sm-c115l")]
    pub samsung_sm_c115l: SamsungSmC115l,
    #[serde(rename = "samsung-sm-c115m")]
    pub samsung_sm_c115m: SamsungSmC115m,
    #[serde(rename = "samsung-sm-c115w")]
    pub samsung_sm_c115w: SamsungSmC115w,
    #[serde(rename = "samsung-sm-c5000")]
    pub samsung_sm_c5000: SamsungSmC5000,
    #[serde(rename = "samsung-sm-c5010")]
    pub samsung_sm_c5010: SamsungSmC5010,
    #[serde(rename = "samsung-sm-c5018")]
    pub samsung_sm_c5018: SamsungSmC5018,
    #[serde(rename = "samsung-sm-c7000")]
    pub samsung_sm_c7000: SamsungSmC7000,
    #[serde(rename = "samsung-sm-c7010")]
    pub samsung_sm_c7010: SamsungSmC7010,
    #[serde(rename = "samsung-sm-c701f")]
    pub samsung_sm_c701f: SamsungSmC701f,
    #[serde(rename = "samsung-sm-c7100")]
    pub samsung_sm_c7100: SamsungSmC7100,
    #[serde(rename = "samsung-sm-c7108")]
    pub samsung_sm_c7108: SamsungSmC7108,
    #[serde(rename = "samsung-sm-c710f")]
    pub samsung_sm_c710f: SamsungSmC710f,
    #[serde(rename = "samsung-sm-c9000")]
    pub samsung_sm_c9000: SamsungSmC9000,
    #[serde(rename = "samsung-sm-c9008")]
    pub samsung_sm_c9008: SamsungSmC9008,
    #[serde(rename = "samsung-sm-c900f")]
    pub samsung_sm_c900f: SamsungSmC900f,
    #[serde(rename = "samsung-sm-c900y")]
    pub samsung_sm_c900y: SamsungSmC900y,
    #[serde(rename = "samsung-sm-e500f")]
    pub samsung_sm_e500f: SamsungSmE500f,
    #[serde(rename = "samsung-sm-e500h")]
    pub samsung_sm_e500h: SamsungSmE500h,
    #[serde(rename = "samsung-sm-e500m")]
    pub samsung_sm_e500m: SamsungSmE500m,
    #[serde(rename = "samsung-sm-e7000")]
    pub samsung_sm_e7000: SamsungSmE7000,
    #[serde(rename = "samsung-sm-e700f")]
    pub samsung_sm_e700f: SamsungSmE700f,
    #[serde(rename = "samsung-sm-e700h")]
    pub samsung_sm_e700h: SamsungSmE700h,
    #[serde(rename = "samsung-sm-e700m")]
    pub samsung_sm_e700m: SamsungSmE700m,
    #[serde(rename = "samsung-sm-g110b")]
    pub samsung_sm_g110b: SamsungSmG110b,
    #[serde(rename = "samsung-sm-g110h")]
    pub samsung_sm_g110h: SamsungSmG110h,
    #[serde(rename = "samsung-sm-g110m")]
    pub samsung_sm_g110m: SamsungSmG110m,
    #[serde(rename = "samsung-sm-g130bt")]
    pub samsung_sm_g130bt: SamsungSmG130bt,
    #[serde(rename = "samsung-sm-g130bu")]
    pub samsung_sm_g130bu: SamsungSmG130bu,
    #[serde(rename = "samsung-sm-g130e")]
    pub samsung_sm_g130e: SamsungSmG130e,
    #[serde(rename = "samsung-sm-g130h")]
    pub samsung_sm_g130h: SamsungSmG130h,
    #[serde(rename = "samsung-sm-g130hn")]
    pub samsung_sm_g130hn: SamsungSmG130hn,
    #[serde(rename = "samsung-sm-g130m")]
    pub samsung_sm_g130m: SamsungSmG130m,
    #[serde(rename = "samsung-sm-g150nk")]
    pub samsung_sm_g150nk: SamsungSmG150nk,
    #[serde(rename = "samsung-sm-g150ns")]
    pub samsung_sm_g150ns: SamsungSmG150ns,
    #[serde(rename = "samsung-sm-g2817f")]
    pub samsung_sm_g2817f: SamsungSmG2817f,
    #[serde(rename = "samsung-sm-g310hn")]
    pub samsung_sm_g310hn: SamsungSmG310hn,
    #[serde(rename = "samsung-sm-g310r5")]
    pub samsung_sm_g310r5: SamsungSmG310r5,
    #[serde(rename = "samsung-sm-g3139d")]
    pub samsung_sm_g3139d: SamsungSmG3139d,
    #[serde(rename = "samsung-sm-g313f")]
    pub samsung_sm_g313f: SamsungSmG313f,
    #[serde(rename = "samsung-sm-g313h")]
    pub samsung_sm_g313h: SamsungSmG313h,
    #[serde(rename = "samsung-sm-g313hn")]
    pub samsung_sm_g313hn: SamsungSmG313hn,
    #[serde(rename = "samsung-sm-g313hu")]
    pub samsung_sm_g313hu: SamsungSmG313hu,
    #[serde(rename = "samsung-sm-g313hy")]
    pub samsung_sm_g313hy: SamsungSmG313hy,
    #[serde(rename = "samsung-sm-g313hz")]
    pub samsung_sm_g313hz: SamsungSmG313hz,
    #[serde(rename = "samsung-sm-g313m")]
    pub samsung_sm_g313m: SamsungSmG313m,
    #[serde(rename = "samsung-sm-g313ml")]
    pub samsung_sm_g313ml: SamsungSmG313ml,
    #[serde(rename = "samsung-sm-g313mu")]
    pub samsung_sm_g313mu: SamsungSmG313mu,
    #[serde(rename = "samsung-sm-g313my")]
    pub samsung_sm_g313my: SamsungSmG313my,
    #[serde(rename = "samsung-sm-g313u")]
    pub samsung_sm_g313u: SamsungSmG313u,
    #[serde(rename = "samsung-sm-g316hu")]
    pub samsung_sm_g316hu: SamsungSmG316hu,
    #[serde(rename = "samsung-sm-g316m")]
    pub samsung_sm_g316m: SamsungSmG316m,
    #[serde(rename = "samsung-sm-g316ml")]
    pub samsung_sm_g316ml: SamsungSmG316ml,
    #[serde(rename = "samsung-sm-g316my")]
    pub samsung_sm_g316my: SamsungSmG316my,
    #[serde(rename = "samsung-sm-g316u")]
    pub samsung_sm_g316u: SamsungSmG316u,
    #[serde(rename = "samsung-sm-g318h")]
    pub samsung_sm_g318h: SamsungSmG318h,
    #[serde(rename = "samsung-sm-g318hz")]
    pub samsung_sm_g318hz: SamsungSmG318hz,
    #[serde(rename = "samsung-sm-g318ml")]
    pub samsung_sm_g318ml: SamsungSmG318ml,
    #[serde(rename = "samsung-sm-g318mz")]
    pub samsung_sm_g318mz: SamsungSmG318mz,
    #[serde(rename = "samsung-sm-g350")]
    pub samsung_sm_g350: SamsungSmG350,
    #[serde(rename = "samsung-sm-g3502i")]
    pub samsung_sm_g3502i: SamsungSmG3502i,
    #[serde(rename = "samsung-sm-g3502l")]
    pub samsung_sm_g3502l: SamsungSmG3502l,
    #[serde(rename = "samsung-sm-g3502t")]
    pub samsung_sm_g3502t: SamsungSmG3502t,
    #[serde(rename = "samsung-sm-g3502u")]
    pub samsung_sm_g3502u: SamsungSmG3502u,
    #[serde(rename = "samsung-sm-g3508")]
    pub samsung_sm_g3508: SamsungSmG3508,
    #[serde(rename = "samsung-sm-g3508j")]
    pub samsung_sm_g3508j: SamsungSmG3508j,
    #[serde(rename = "samsung-sm-g3509")]
    pub samsung_sm_g3509: SamsungSmG3509,
    #[serde(rename = "samsung-sm-g3509i")]
    pub samsung_sm_g3509i: SamsungSmG3509i,
    #[serde(rename = "samsung-sm-g350e")]
    pub samsung_sm_g350e: SamsungSmG350e,
    #[serde(rename = "samsung-sm-g350l")]
    pub samsung_sm_g350l: SamsungSmG350l,
    #[serde(rename = "samsung-sm-g350m")]
    pub samsung_sm_g350m: SamsungSmG350m,
    #[serde(rename = "samsung-sm-g3518")]
    pub samsung_sm_g3518: SamsungSmG3518,
    #[serde(rename = "samsung-sm-g355h")]
    pub samsung_sm_g355h: SamsungSmG355h,
    #[serde(rename = "samsung-sm-g355hn")]
    pub samsung_sm_g355hn: SamsungSmG355hn,
    #[serde(rename = "samsung-sm-g355hq")]
    pub samsung_sm_g355hq: SamsungSmG355hq,
    #[serde(rename = "samsung-sm-g355j")]
    pub samsung_sm_g355j: SamsungSmG355j,
    #[serde(rename = "samsung-sm-g355m")]
    pub samsung_sm_g355m: SamsungSmG355m,
    #[serde(rename = "samsung-sm-g357fz")]
    pub samsung_sm_g357fz: SamsungSmG357fz,
    #[serde(rename = "samsung-sm-g357m")]
    pub samsung_sm_g357m: SamsungSmG357m,
    #[serde(rename = "samsung-sm-g3588v")]
    pub samsung_sm_g3588v: SamsungSmG3588v,
    #[serde(rename = "samsung-sm-g3608")]
    pub samsung_sm_g3608: SamsungSmG3608,
    #[serde(rename = "samsung-sm-g3609")]
    pub samsung_sm_g3609: SamsungSmG3609,
    #[serde(rename = "samsung-sm-g360az")]
    pub samsung_sm_g360az: SamsungSmG360az,
    #[serde(rename = "samsung-sm-g360bt")]
    pub samsung_sm_g360bt: SamsungSmG360bt,
    #[serde(rename = "samsung-sm-g360f")]
    pub samsung_sm_g360f: SamsungSmG360f,
    #[serde(rename = "samsung-sm-g360fy")]
    pub samsung_sm_g360fy: SamsungSmG360fy,
    #[serde(rename = "samsung-sm-g360g")]
    pub samsung_sm_g360g: SamsungSmG360g,
    #[serde(rename = "samsung-sm-g360gy")]
    pub samsung_sm_g360gy: SamsungSmG360gy,
    #[serde(rename = "samsung-sm-g360h")]
    pub samsung_sm_g360h: SamsungSmG360h,
    #[serde(rename = "samsung-sm-g360hu")]
    pub samsung_sm_g360hu: SamsungSmG360hu,
    #[serde(rename = "samsung-sm-g360m")]
    pub samsung_sm_g360m: SamsungSmG360m,
    #[serde(rename = "samsung-sm-g360p")]
    pub samsung_sm_g360p: SamsungSmG360p,
    #[serde(rename = "samsung-sm-g360r6")]
    pub samsung_sm_g360r6: SamsungSmG360r6,
    #[serde(rename = "samsung-sm-g360t")]
    pub samsung_sm_g360t: SamsungSmG360t,
    #[serde(rename = "samsung-sm-g360t1")]
    pub samsung_sm_g360t1: SamsungSmG360t1,
    #[serde(rename = "samsung-sm-g360v")]
    pub samsung_sm_g360v: SamsungSmG360v,
    #[serde(rename = "samsung-sm-g361f")]
    pub samsung_sm_g361f: SamsungSmG361f,
    #[serde(rename = "samsung-sm-g361h")]
    pub samsung_sm_g361h: SamsungSmG361h,
    #[serde(rename = "samsung-sm-g361hu")]
    pub samsung_sm_g361hu: SamsungSmG361hu,
    #[serde(rename = "samsung-sm-g3812")]
    pub samsung_sm_g3812: SamsungSmG3812,
    #[serde(rename = "samsung-sm-g3812b")]
    pub samsung_sm_g3812b: SamsungSmG3812b,
    #[serde(rename = "samsung-sm-g3815")]
    pub samsung_sm_g3815: SamsungSmG3815,
    #[serde(rename = "samsung-sm-g3818")]
    pub samsung_sm_g3818: SamsungSmG3818,
    #[serde(rename = "samsung-sm-g3858")]
    pub samsung_sm_g3858: SamsungSmG3858,
    #[serde(rename = "samsung-sm-g386f")]
    pub samsung_sm_g386f: SamsungSmG386f,
    #[serde(rename = "samsung-sm-g386t")]
    pub samsung_sm_g386t: SamsungSmG386t,
    #[serde(rename = "samsung-sm-g386t1")]
    pub samsung_sm_g386t1: SamsungSmG386t1,
    #[serde(rename = "samsung-sm-g386w")]
    pub samsung_sm_g386w: SamsungSmG386w,
    #[serde(rename = "samsung-sm-g388f")]
    pub samsung_sm_g388f: SamsungSmG388f,
    #[serde(rename = "samsung-sm-g389f")]
    pub samsung_sm_g389f: SamsungSmG389f,
    #[serde(rename = "samsung-sm-g390f")]
    pub samsung_sm_g390f: SamsungSmG390f,
    #[serde(rename = "samsung-sm-g390w")]
    pub samsung_sm_g390w: SamsungSmG390w,
    #[serde(rename = "samsung-sm-g390y")]
    pub samsung_sm_g390y: SamsungSmG390y,
    #[serde(rename = "samsung-sm-g495f")]
    pub samsung_sm_g495f: SamsungSmG495f,
    #[serde(rename = "samsung-sm-g5108q")]
    pub samsung_sm_g5108q: SamsungSmG5108q,
    #[serde(rename = "samsung-sm-g5306w")]
    pub samsung_sm_g5306w: SamsungSmG5306w,
    #[serde(rename = "samsung-sm-g5308w")]
    pub samsung_sm_g5308w: SamsungSmG5308w,
    #[serde(rename = "samsung-sm-g530a")]
    pub samsung_sm_g530a: SamsungSmG530a,
    #[serde(rename = "samsung-sm-g530az")]
    pub samsung_sm_g530az: SamsungSmG530az,
    #[serde(rename = "samsung-sm-g530bt")]
    pub samsung_sm_g530bt: SamsungSmG530bt,
    #[serde(rename = "samsung-sm-g530f")]
    pub samsung_sm_g530f: SamsungSmG530f,
    #[serde(rename = "samsung-sm-g530fz")]
    pub samsung_sm_g530fz: SamsungSmG530fz,
    #[serde(rename = "samsung-sm-g530h")]
    pub samsung_sm_g530h: SamsungSmG530h,
    #[serde(rename = "samsung-sm-g530m")]
    pub samsung_sm_g530m: SamsungSmG530m,
    #[serde(rename = "samsung-sm-g530mu")]
    pub samsung_sm_g530mu: SamsungSmG530mu,
    #[serde(rename = "samsung-sm-g530p")]
    pub samsung_sm_g530p: SamsungSmG530p,
    #[serde(rename = "samsung-sm-g530r4")]
    pub samsung_sm_g530r4: SamsungSmG530r4,
    #[serde(rename = "samsung-sm-g530r7")]
    pub samsung_sm_g530r7: SamsungSmG530r7,
    #[serde(rename = "samsung-sm-g530t")]
    pub samsung_sm_g530t: SamsungSmG530t,
    #[serde(rename = "samsung-sm-g530t1")]
    pub samsung_sm_g530t1: SamsungSmG530t1,
    #[serde(rename = "samsung-sm-g530w")]
    pub samsung_sm_g530w: SamsungSmG530w,
    #[serde(rename = "samsung-sm-g530y")]
    pub samsung_sm_g530y: SamsungSmG530y,
    #[serde(rename = "samsung-sm-g531bt")]
    pub samsung_sm_g531bt: SamsungSmG531bt,
    #[serde(rename = "samsung-sm-g531f")]
    pub samsung_sm_g531f: SamsungSmG531f,
    #[serde(rename = "samsung-sm-g531h")]
    pub samsung_sm_g531h: SamsungSmG531h,
    #[serde(rename = "samsung-sm-g531m")]
    pub samsung_sm_g531m: SamsungSmG531m,
    #[serde(rename = "samsung-sm-g531y")]
    pub samsung_sm_g531y: SamsungSmG531y,
    #[serde(rename = "samsung-sm-g532f")]
    pub samsung_sm_g532f: SamsungSmG532f,
    #[serde(rename = "samsung-sm-g532m")]
    pub samsung_sm_g532m: SamsungSmG532m,
    #[serde(rename = "samsung-sm-g532mt")]
    pub samsung_sm_g532mt: SamsungSmG532mt,
    #[serde(rename = "samsung-sm-g5500")]
    pub samsung_sm_g5500: SamsungSmG5500,
    #[serde(rename = "samsung-sm-g550fy")]
    pub samsung_sm_g550fy: SamsungSmG550fy,
    #[serde(rename = "samsung-sm-g550t")]
    pub samsung_sm_g550t: SamsungSmG550t,
    #[serde(rename = "samsung-sm-g550t1")]
    pub samsung_sm_g550t1: SamsungSmG550t1,
    #[serde(rename = "samsung-sm-g550t2")]
    pub samsung_sm_g550t2: SamsungSmG550t2,
    #[serde(rename = "samsung-sm-g5510")]
    pub samsung_sm_g5510: SamsungSmG5510,
    #[serde(rename = "samsung-sm-g5520")]
    pub samsung_sm_g5520: SamsungSmG5520,
    #[serde(rename = "samsung-sm-g5528")]
    pub samsung_sm_g5528: SamsungSmG5528,
    #[serde(rename = "samsung-sm-g5700")]
    pub samsung_sm_g5700: SamsungSmG5700,
    #[serde(rename = "samsung-sm-g570f")]
    pub samsung_sm_g570f: SamsungSmG570f,
    #[serde(rename = "samsung-sm-g570m")]
    pub samsung_sm_g570m: SamsungSmG570m,
    #[serde(rename = "samsung-sm-g570y")]
    pub samsung_sm_g570y: SamsungSmG570y,
    #[serde(rename = "samsung-sm-g6000")]
    pub samsung_sm_g6000: SamsungSmG6000,
    #[serde(rename = "samsung-sm-g600f")]
    pub samsung_sm_g600f: SamsungSmG600f,
    #[serde(rename = "samsung-sm-g600fy")]
    pub samsung_sm_g600fy: SamsungSmG600fy,
    #[serde(rename = "samsung-sm-g600s")]
    pub samsung_sm_g600s: SamsungSmG600s,
    #[serde(rename = "samsung-sm-g6100")]
    pub samsung_sm_g6100: SamsungSmG6100,
    #[serde(rename = "samsung-sm-g610k")]
    pub samsung_sm_g610k: SamsungSmG610k,
    #[serde(rename = "samsung-sm-g610m")]
    pub samsung_sm_g610m: SamsungSmG610m,
    #[serde(rename = "samsung-sm-g610s")]
    pub samsung_sm_g610s: SamsungSmG610s,
    #[serde(rename = "samsung-sm-g610y")]
    pub samsung_sm_g610y: SamsungSmG610y,
    #[serde(rename = "samsung-sm-g611f")]
    pub samsung_sm_g611f: SamsungSmG611f,
    #[serde(rename = "samsung-sm-g611ff")]
    pub samsung_sm_g611ff: SamsungSmG611ff,
    #[serde(rename = "samsung-sm-g611m")]
    pub samsung_sm_g611m: SamsungSmG611m,
    #[serde(rename = "samsung-sm-g611mt")]
    pub samsung_sm_g611mt: SamsungSmG611mt,
    #[serde(rename = "samsung-sm-g615f")]
    pub samsung_sm_g615f: SamsungSmG615f,
    #[serde(rename = "samsung-sm-g615fu")]
    pub samsung_sm_g615fu: SamsungSmG615fu,
    #[serde(rename = "samsung-sm-g625f")]
    pub samsung_sm_g625f: SamsungSmG625f,
    #[serde(rename = "samsung-sm-g710")]
    pub samsung_sm_g710: SamsungSmG710,
    #[serde(rename = "samsung-sm-g7102t")]
    pub samsung_sm_g7102t: SamsungSmG7102t,
    #[serde(rename = "samsung-sm-g7105")]
    pub samsung_sm_g7105: SamsungSmG7105,
    #[serde(rename = "samsung-sm-g7105h")]
    pub samsung_sm_g7105h: SamsungSmG7105h,
    #[serde(rename = "samsung-sm-g7105l")]
    pub samsung_sm_g7105l: SamsungSmG7105l,
    #[serde(rename = "samsung-sm-g7106")]
    pub samsung_sm_g7106: SamsungSmG7106,
    #[serde(rename = "samsung-sm-g7108")]
    pub samsung_sm_g7108: SamsungSmG7108,
    #[serde(rename = "samsung-sm-g7108v")]
    pub samsung_sm_g7108v: SamsungSmG7108v,
    #[serde(rename = "samsung-sm-g7109")]
    pub samsung_sm_g7109: SamsungSmG7109,
    #[serde(rename = "samsung-sm-g710k")]
    pub samsung_sm_g710k: SamsungSmG710k,
    #[serde(rename = "samsung-sm-g710l")]
    pub samsung_sm_g710l: SamsungSmG710l,
    #[serde(rename = "samsung-sm-g710s")]
    pub samsung_sm_g710s: SamsungSmG710s,
    #[serde(rename = "samsung-sm-g7202")]
    pub samsung_sm_g7202: SamsungSmG7202,
    #[serde(rename = "samsung-sm-g720ax")]
    pub samsung_sm_g720ax: SamsungSmG720ax,
    #[serde(rename = "samsung-sm-g720n0")]
    pub samsung_sm_g720n0: SamsungSmG720n0,
    #[serde(rename = "samsung-sm-g730a")]
    pub samsung_sm_g730a: SamsungSmG730a,
    #[serde(rename = "samsung-sm-g730v")]
    pub samsung_sm_g730v: SamsungSmG730v,
    #[serde(rename = "samsung-sm-g730w8")]
    pub samsung_sm_g730w8: SamsungSmG730w8,
    #[serde(rename = "samsung-sm-g7508q")]
    pub samsung_sm_g7508q: SamsungSmG7508q,
    #[serde(rename = "samsung-sm-g7509")]
    pub samsung_sm_g7509: SamsungSmG7509,
    #[serde(rename = "samsung-sm-g750a")]
    pub samsung_sm_g750a: SamsungSmG750a,
    #[serde(rename = "samsung-sm-g750f")]
    pub samsung_sm_g750f: SamsungSmG750f,
    #[serde(rename = "samsung-sm-g750h")]
    pub samsung_sm_g750h: SamsungSmG750h,
    #[serde(rename = "samsung-sm-g800a")]
    pub samsung_sm_g800a: SamsungSmG800a,
    #[serde(rename = "samsung-sm-g800f")]
    pub samsung_sm_g800f: SamsungSmG800f,
    #[serde(rename = "samsung-sm-g800h")]
    pub samsung_sm_g800h: SamsungSmG800h,
    #[serde(rename = "samsung-sm-g800hq")]
    pub samsung_sm_g800hq: SamsungSmG800hq,
    #[serde(rename = "samsung-sm-g800m")]
    pub samsung_sm_g800m: SamsungSmG800m,
    #[serde(rename = "samsung-sm-g800r4")]
    pub samsung_sm_g800r4: SamsungSmG800r4,
    #[serde(rename = "samsung-sm-g800y")]
    pub samsung_sm_g800y: SamsungSmG800y,
    #[serde(rename = "samsung-sm-g8508s")]
    pub samsung_sm_g8508s: SamsungSmG8508s,
    #[serde(rename = "samsung-sm-g850a")]
    pub samsung_sm_g850a: SamsungSmG850a,
    #[serde(rename = "samsung-sm-g850f")]
    pub samsung_sm_g850f: SamsungSmG850f,
    #[serde(rename = "samsung-sm-g850fq")]
    pub samsung_sm_g850fq: SamsungSmG850fq,
    #[serde(rename = "samsung-sm-g850k")]
    pub samsung_sm_g850k: SamsungSmG850k,
    #[serde(rename = "samsung-sm-g850l")]
    pub samsung_sm_g850l: SamsungSmG850l,
    #[serde(rename = "samsung-sm-g850m")]
    pub samsung_sm_g850m: SamsungSmG850m,
    #[serde(rename = "samsung-sm-g850s")]
    pub samsung_sm_g850s: SamsungSmG850s,
    #[serde(rename = "samsung-sm-g850w")]
    pub samsung_sm_g850w: SamsungSmG850w,
    #[serde(rename = "samsung-sm-g850y")]
    pub samsung_sm_g850y: SamsungSmG850y,
    #[serde(rename = "samsung-sm-g860p")]
    pub samsung_sm_g860p: SamsungSmG860p,
    #[serde(rename = "samsung-sm-g870a")]
    pub samsung_sm_g870a: SamsungSmG870a,
    #[serde(rename = "samsung-sm-g870f")]
    pub samsung_sm_g870f: SamsungSmG870f,
    #[serde(rename = "samsung-sm-g870w")]
    pub samsung_sm_g870w: SamsungSmG870w,
    #[serde(rename = "samsung-sm-g881f")]
    pub samsung_sm_g881f: SamsungSmG881f,
    #[serde(rename = "samsung-sm-g8850")]
    pub samsung_sm_g8850: SamsungSmG8850,
    #[serde(rename = "samsung-sm-g885f")]
    pub samsung_sm_g885f: SamsungSmG885f,
    #[serde(rename = "samsung-sm-g885s")]
    pub samsung_sm_g885s: SamsungSmG885s,
    #[serde(rename = "samsung-sm-g890a")]
    pub samsung_sm_g890a: SamsungSmG890a,
    #[serde(rename = "samsung-sm-g891a")]
    pub samsung_sm_g891a: SamsungSmG891a,
    #[serde(rename = "samsung-sm-g892a")]
    pub samsung_sm_g892a: SamsungSmG892a,
    #[serde(rename = "samsung-sm-g892u")]
    pub samsung_sm_g892u: SamsungSmG892u,
    #[serde(rename = "samsung-sm-g900")]
    pub samsung_sm_g900: SamsungSmG900,
    #[serde(rename = "samsung-sm-g9000")]
    pub samsung_sm_g9000: SamsungSmG9000,
    #[serde(rename = "samsung-sm-g9006v")]
    pub samsung_sm_g9006v: SamsungSmG9006v,
    #[serde(rename = "samsung-sm-g9006w")]
    pub samsung_sm_g9006w: SamsungSmG9006w,
    #[serde(rename = "samsung-sm-g9008v")]
    pub samsung_sm_g9008v: SamsungSmG9008v,
    #[serde(rename = "samsung-sm-g9008w")]
    pub samsung_sm_g9008w: SamsungSmG9008w,
    #[serde(rename = "samsung-sm-g9009d")]
    pub samsung_sm_g9009d: SamsungSmG9009d,
    #[serde(rename = "samsung-sm-g9009w")]
    pub samsung_sm_g9009w: SamsungSmG9009w,
    #[serde(rename = "samsung-sm-g900a")]
    pub samsung_sm_g900a: SamsungSmG900a,
    #[serde(rename = "samsung-sm-g900az")]
    pub samsung_sm_g900az: SamsungSmG900az,
    #[serde(rename = "samsung-sm-g900f")]
    pub samsung_sm_g900f: SamsungSmG900f,
    #[serde(rename = "samsung-sm-g900fbuild")]
    pub samsung_sm_g900fbuild: SamsungSmG900fbuild,
    #[serde(rename = "samsung-sm-g900fd")]
    pub samsung_sm_g900fd: SamsungSmG900fd,
    #[serde(rename = "samsung-sm-g900fq")]
    pub samsung_sm_g900fq: SamsungSmG900fq,
    #[serde(rename = "samsung-sm-g900h")]
    pub samsung_sm_g900h: SamsungSmG900h,
    #[serde(rename = "samsung-sm-g900i")]
    pub samsung_sm_g900i: SamsungSmG900i,
    #[serde(rename = "samsung-sm-g900j")]
    pub samsung_sm_g900j: SamsungSmG900j,
    #[serde(rename = "samsung-sm-g900k")]
    pub samsung_sm_g900k: SamsungSmG900k,
    #[serde(rename = "samsung-sm-g900l")]
    pub samsung_sm_g900l: SamsungSmG900l,
    #[serde(rename = "samsung-sm-g900m")]
    pub samsung_sm_g900m: SamsungSmG900m,
    #[serde(rename = "samsung-sm-g900md")]
    pub samsung_sm_g900md: SamsungSmG900md,
    #[serde(rename = "samsung-sm-g900p")]
    pub samsung_sm_g900p: SamsungSmG900p,
    #[serde(rename = "samsung-sm-g900r4")]
    pub samsung_sm_g900r4: SamsungSmG900r4,
    #[serde(rename = "samsung-sm-g900r6")]
    pub samsung_sm_g900r6: SamsungSmG900r6,
    #[serde(rename = "samsung-sm-g900r7")]
    pub samsung_sm_g900r7: SamsungSmG900r7,
    #[serde(rename = "samsung-sm-g900s")]
    pub samsung_sm_g900s: SamsungSmG900s,
    #[serde(rename = "samsung-sm-g900t")]
    pub samsung_sm_g900t: SamsungSmG900t,
    #[serde(rename = "samsung-sm-g900t1")]
    pub samsung_sm_g900t1: SamsungSmG900t1,
    #[serde(rename = "samsung-sm-g900t3")]
    pub samsung_sm_g900t3: SamsungSmG900t3,
    #[serde(rename = "samsung-sm-g900v")]
    pub samsung_sm_g900v: SamsungSmG900v,
    #[serde(rename = "samsung-sm-g900w8")]
    pub samsung_sm_g900w8: SamsungSmG900w8,
    #[serde(rename = "samsung-sm-g900x")]
    pub samsung_sm_g900x: SamsungSmG900x,
    #[serde(rename = "samsung-sm-g901f")]
    pub samsung_sm_g901f: SamsungSmG901f,
    #[serde(rename = "samsung-sm-g903f")]
    pub samsung_sm_g903f: SamsungSmG903f,
    #[serde(rename = "samsung-sm-g903m")]
    pub samsung_sm_g903m: SamsungSmG903m,
    #[serde(rename = "samsung-sm-g903w")]
    pub samsung_sm_g903w: SamsungSmG903w,
    #[serde(rename = "samsung-sm-g906k")]
    pub samsung_sm_g906k: SamsungSmG906k,
    #[serde(rename = "samsung-sm-g906l")]
    pub samsung_sm_g906l: SamsungSmG906l,
    #[serde(rename = "samsung-sm-g906s")]
    pub samsung_sm_g906s: SamsungSmG906s,
    #[serde(rename = "samsung-sm-g910s")]
    pub samsung_sm_g910s: SamsungSmG910s,
    #[serde(rename = "samsung-sm-g920")]
    pub samsung_sm_g920: SamsungSmG920,
    #[serde(rename = "samsung-sm-g9200")]
    pub samsung_sm_g9200: SamsungSmG9200,
    #[serde(rename = "samsung-sm-g9208")]
    pub samsung_sm_g9208: SamsungSmG9208,
    #[serde(rename = "samsung-sm-g9209")]
    pub samsung_sm_g9209: SamsungSmG9209,
    #[serde(rename = "samsung-sm-g920a")]
    pub samsung_sm_g920a: SamsungSmG920a,
    #[serde(rename = "samsung-sm-g920az")]
    pub samsung_sm_g920az: SamsungSmG920az,
    #[serde(rename = "samsung-sm-g920f")]
    pub samsung_sm_g920f: SamsungSmG920f,
    #[serde(rename = "samsung-sm-g920i")]
    pub samsung_sm_g920i: SamsungSmG920i,
    #[serde(rename = "samsung-sm-g920k")]
    pub samsung_sm_g920k: SamsungSmG920k,
    #[serde(rename = "samsung-sm-g920l")]
    pub samsung_sm_g920l: SamsungSmG920l,
    #[serde(rename = "samsung-sm-g920p")]
    pub samsung_sm_g920p: SamsungSmG920p,
    #[serde(rename = "samsung-sm-g920r4")]
    pub samsung_sm_g920r4: SamsungSmG920r4,
    #[serde(rename = "samsung-sm-g920r6")]
    pub samsung_sm_g920r6: SamsungSmG920r6,
    #[serde(rename = "samsung-sm-g920r7")]
    pub samsung_sm_g920r7: SamsungSmG920r7,
    #[serde(rename = "samsung-sm-g920s")]
    pub samsung_sm_g920s: SamsungSmG920s,
    #[serde(rename = "samsung-sm-g920t")]
    pub samsung_sm_g920t: SamsungSmG920t,
    #[serde(rename = "samsung-sm-g920t1")]
    pub samsung_sm_g920t1: SamsungSmG920t1,
    #[serde(rename = "samsung-sm-g920v")]
    pub samsung_sm_g920v: SamsungSmG920v,
    #[serde(rename = "samsung-sm-g920w8")]
    pub samsung_sm_g920w8: SamsungSmG920w8,
    #[serde(rename = "samsung-sm-g920x")]
    pub samsung_sm_g920x: SamsungSmG920x,
    #[serde(rename = "samsung-sm-g9250")]
    pub samsung_sm_g9250: SamsungSmG9250,
    #[serde(rename = "samsung-sm-g925a")]
    pub samsung_sm_g925a: SamsungSmG925a,
    #[serde(rename = "samsung-sm-g925f")]
    pub samsung_sm_g925f: SamsungSmG925f,
    #[serde(rename = "samsung-sm-g925i")]
    pub samsung_sm_g925i: SamsungSmG925i,
    #[serde(rename = "samsung-sm-g925k")]
    pub samsung_sm_g925k: SamsungSmG925k,
    #[serde(rename = "samsung-sm-g925l")]
    pub samsung_sm_g925l: SamsungSmG925l,
    #[serde(rename = "samsung-sm-g925p")]
    pub samsung_sm_g925p: SamsungSmG925p,
    #[serde(rename = "samsung-sm-g925r4")]
    pub samsung_sm_g925r4: SamsungSmG925r4,
    #[serde(rename = "samsung-sm-g925r6")]
    pub samsung_sm_g925r6: SamsungSmG925r6,
    #[serde(rename = "samsung-sm-g925r7")]
    pub samsung_sm_g925r7: SamsungSmG925r7,
    #[serde(rename = "samsung-sm-g925s")]
    pub samsung_sm_g925s: SamsungSmG925s,
    #[serde(rename = "samsung-sm-g925t")]
    pub samsung_sm_g925t: SamsungSmG925t,
    #[serde(rename = "samsung-sm-g925v")]
    pub samsung_sm_g925v: SamsungSmG925v,
    #[serde(rename = "samsung-sm-g925w8")]
    pub samsung_sm_g925w8: SamsungSmG925w8,
    #[serde(rename = "samsung-sm-g925x")]
    pub samsung_sm_g925x: SamsungSmG925x,
    #[serde(rename = "samsung-sm-g928")]
    pub samsung_sm_g928: SamsungSmG928,
    #[serde(rename = "samsung-sm-g9280")]
    pub samsung_sm_g9280: SamsungSmG9280,
    #[serde(rename = "samsung-sm-g9287")]
    pub samsung_sm_g9287: SamsungSmG9287,
    #[serde(rename = "samsung-sm-g9287c")]
    pub samsung_sm_g9287c: SamsungSmG9287c,
    #[serde(rename = "samsung-sm-g928a")]
    pub samsung_sm_g928a: SamsungSmG928a,
    #[serde(rename = "samsung-sm-g928c")]
    pub samsung_sm_g928c: SamsungSmG928c,
    #[serde(rename = "samsung-sm-g928f")]
    pub samsung_sm_g928f: SamsungSmG928f,
    #[serde(rename = "samsung-sm-g928g")]
    pub samsung_sm_g928g: SamsungSmG928g,
    #[serde(rename = "samsung-sm-g928i")]
    pub samsung_sm_g928i: SamsungSmG928i,
    #[serde(rename = "samsung-sm-g928k")]
    pub samsung_sm_g928k: SamsungSmG928k,
    #[serde(rename = "samsung-sm-g928l")]
    pub samsung_sm_g928l: SamsungSmG928l,
    #[serde(rename = "samsung-sm-g928n0")]
    pub samsung_sm_g928n0: SamsungSmG928n0,
    #[serde(rename = "samsung-sm-g928p")]
    pub samsung_sm_g928p: SamsungSmG928p,
    #[serde(rename = "samsung-sm-g928r4")]
    pub samsung_sm_g928r4: SamsungSmG928r4,
    #[serde(rename = "samsung-sm-g928s")]
    pub samsung_sm_g928s: SamsungSmG928s,
    #[serde(rename = "samsung-sm-g928t")]
    pub samsung_sm_g928t: SamsungSmG928t,
    #[serde(rename = "samsung-sm-g928v")]
    pub samsung_sm_g928v: SamsungSmG928v,
    #[serde(rename = "samsung-sm-g928w8")]
    pub samsung_sm_g928w8: SamsungSmG928w8,
    #[serde(rename = "samsung-sm-g928x")]
    pub samsung_sm_g928x: SamsungSmG928x,
    #[serde(rename = "samsung-sm-g9300")]
    pub samsung_sm_g9300: SamsungSmG9300,
    #[serde(rename = "samsung-sm-g930a")]
    pub samsung_sm_g930a: SamsungSmG930a,
    #[serde(rename = "samsung-sm-g930az")]
    pub samsung_sm_g930az: SamsungSmG930az,
    #[serde(rename = "samsung-sm-g930f")]
    pub samsung_sm_g930f: SamsungSmG930f,
    #[serde(rename = "samsung-sm-g930fd")]
    pub samsung_sm_g930fd: SamsungSmG930fd,
    #[serde(rename = "samsung-sm-g930k")]
    pub samsung_sm_g930k: SamsungSmG930k,
    #[serde(rename = "samsung-sm-g930l")]
    pub samsung_sm_g930l: SamsungSmG930l,
    #[serde(rename = "samsung-sm-g930p")]
    pub samsung_sm_g930p: SamsungSmG930p,
    #[serde(rename = "samsung-sm-g930r4")]
    pub samsung_sm_g930r4: SamsungSmG930r4,
    #[serde(rename = "samsung-sm-g930r6")]
    pub samsung_sm_g930r6: SamsungSmG930r6,
    #[serde(rename = "samsung-sm-g930r7")]
    pub samsung_sm_g930r7: SamsungSmG930r7,
    #[serde(rename = "samsung-sm-g930s")]
    pub samsung_sm_g930s: SamsungSmG930s,
    #[serde(rename = "samsung-sm-g930t")]
    pub samsung_sm_g930t: SamsungSmG930t,
    #[serde(rename = "samsung-sm-g930t1")]
    pub samsung_sm_g930t1: SamsungSmG930t1,
    #[serde(rename = "samsung-sm-g930u")]
    pub samsung_sm_g930u: SamsungSmG930u,
    #[serde(rename = "samsung-sm-g930v")]
    pub samsung_sm_g930v: SamsungSmG930v,
    #[serde(rename = "samsung-sm-g930vc")]
    pub samsung_sm_g930vc: SamsungSmG930vc,
    #[serde(rename = "samsung-sm-g930vl")]
    pub samsung_sm_g930vl: SamsungSmG930vl,
    #[serde(rename = "samsung-sm-g930w8")]
    pub samsung_sm_g930w8: SamsungSmG930w8,
    #[serde(rename = "samsung-sm-g930x")]
    pub samsung_sm_g930x: SamsungSmG930x,
    #[serde(rename = "samsung-sm-g935")]
    pub samsung_sm_g935: SamsungSmG935,
    #[serde(rename = "samsung-sm-g9350")]
    pub samsung_sm_g9350: SamsungSmG9350,
    #[serde(rename = "samsung-sm-g935a")]
    pub samsung_sm_g935a: SamsungSmG935a,
    #[serde(rename = "samsung-sm-g935c")]
    pub samsung_sm_g935c: SamsungSmG935c,
    #[serde(rename = "samsung-sm-g935f")]
    pub samsung_sm_g935f: SamsungSmG935f,
    #[serde(rename = "samsung-sm-g935k")]
    pub samsung_sm_g935k: SamsungSmG935k,
    #[serde(rename = "samsung-sm-g935l")]
    pub samsung_sm_g935l: SamsungSmG935l,
    #[serde(rename = "samsung-sm-g935p")]
    pub samsung_sm_g935p: SamsungSmG935p,
    #[serde(rename = "samsung-sm-g935r4")]
    pub samsung_sm_g935r4: SamsungSmG935r4,
    #[serde(rename = "samsung-sm-g935s")]
    pub samsung_sm_g935s: SamsungSmG935s,
    #[serde(rename = "samsung-sm-g935t")]
    pub samsung_sm_g935t: SamsungSmG935t,
    #[serde(rename = "samsung-sm-g935u")]
    pub samsung_sm_g935u: SamsungSmG935u,
    #[serde(rename = "samsung-sm-g935v")]
    pub samsung_sm_g935v: SamsungSmG935v,
    #[serde(rename = "samsung-sm-g935vc")]
    pub samsung_sm_g935vc: SamsungSmG935vc,
    #[serde(rename = "samsung-sm-g935w8")]
    pub samsung_sm_g935w8: SamsungSmG935w8,
    #[serde(rename = "samsung-sm-g935x")]
    pub samsung_sm_g935x: SamsungSmG935x,
    #[serde(rename = "samsung-sm-g950")]
    pub samsung_sm_g950: SamsungSmG950,
    #[serde(rename = "samsung-sm-g9500")]
    pub samsung_sm_g9500: SamsungSmG9500,
    #[serde(rename = "samsung-sm-g950f")]
    pub samsung_sm_g950f: SamsungSmG950f,
    #[serde(rename = "samsung-sm-g950n")]
    pub samsung_sm_g950n: SamsungSmG950n,
    #[serde(rename = "samsung-sm-g950p")]
    pub samsung_sm_g950p: SamsungSmG950p,
    #[serde(rename = "samsung-sm-g950u")]
    pub samsung_sm_g950u: SamsungSmG950u,
    #[serde(rename = "samsung-sm-g950u1")]
    pub samsung_sm_g950u1: SamsungSmG950u1,
    #[serde(rename = "samsung-sm-g950w")]
    pub samsung_sm_g950w: SamsungSmG950w,
    #[serde(rename = "samsung-sm-g950x")]
    pub samsung_sm_g950x: SamsungSmG950x,
    #[serde(rename = "samsung-sm-g950xu")]
    pub samsung_sm_g950xu: SamsungSmG950xu,
    #[serde(rename = "samsung-sm-g9550")]
    pub samsung_sm_g9550: SamsungSmG9550,
    #[serde(rename = "samsung-sm-g9550u")]
    pub samsung_sm_g9550u: SamsungSmG9550u,
    #[serde(rename = "samsung-sm-g9558")]
    pub samsung_sm_g9558: SamsungSmG9558,
    #[serde(rename = "samsung-sm-g955a")]
    pub samsung_sm_g955a: SamsungSmG955a,
    #[serde(rename = "samsung-sm-g955f")]
    pub samsung_sm_g955f: SamsungSmG955f,
    #[serde(rename = "samsung-sm-g955k")]
    pub samsung_sm_g955k: SamsungSmG955k,
    #[serde(rename = "samsung-sm-g955n")]
    pub samsung_sm_g955n: SamsungSmG955n,
    #[serde(rename = "samsung-sm-g955s")]
    pub samsung_sm_g955s: SamsungSmG955s,
    #[serde(rename = "samsung-sm-g955u")]
    pub samsung_sm_g955u: SamsungSmG955u,
    #[serde(rename = "samsung-sm-g955u1")]
    pub samsung_sm_g955u1: SamsungSmG955u1,
    #[serde(rename = "samsung-sm-g955w")]
    pub samsung_sm_g955w: SamsungSmG955w,
    #[serde(rename = "samsung-sm-g955x")]
    pub samsung_sm_g955x: SamsungSmG955x,
    #[serde(rename = "samsung-sm-g955xu")]
    pub samsung_sm_g955xu: SamsungSmG955xu,
    #[serde(rename = "samsung-sm-g960")]
    pub samsung_sm_g960: SamsungSmG960,
    #[serde(rename = "samsung-sm-g9600")]
    pub samsung_sm_g9600: SamsungSmG9600,
    #[serde(rename = "samsung-sm-g960f")]
    pub samsung_sm_g960f: SamsungSmG960f,
    #[serde(rename = "samsung-sm-g960n")]
    pub samsung_sm_g960n: SamsungSmG960n,
    #[serde(rename = "samsung-sm-g960u")]
    pub samsung_sm_g960u: SamsungSmG960u,
    #[serde(rename = "samsung-sm-g960u1")]
    pub samsung_sm_g960u1: SamsungSmG960u1,
    #[serde(rename = "samsung-sm-g960w")]
    pub samsung_sm_g960w: SamsungSmG960w,
    #[serde(rename = "samsung-sm-g960xn")]
    pub samsung_sm_g960xn: SamsungSmG960xn,
    #[serde(rename = "samsung-sm-g9650")]
    pub samsung_sm_g9650: SamsungSmG9650,
    #[serde(rename = "samsung-sm-g965f")]
    pub samsung_sm_g965f: SamsungSmG965f,
    #[serde(rename = "samsung-sm-g965n")]
    pub samsung_sm_g965n: SamsungSmG965n,
    #[serde(rename = "samsung-sm-g965u")]
    pub samsung_sm_g965u: SamsungSmG965u,
    #[serde(rename = "samsung-sm-g965u1")]
    pub samsung_sm_g965u1: SamsungSmG965u1,
    #[serde(rename = "samsung-sm-g965w")]
    pub samsung_sm_g965w: SamsungSmG965w,
    #[serde(rename = "samsung-sm-g965x")]
    pub samsung_sm_g965x: SamsungSmG965x,
    #[serde(rename = "samsung-sm-g965xu")]
    pub samsung_sm_g965xu: SamsungSmG965xu,
    #[serde(rename = "samsung-sm-g982a")]
    pub samsung_sm_g982a: SamsungSmG982a,
    #[serde(rename = "samsung-sm-g990v")]
    pub samsung_sm_g990v: SamsungSmG990v,
    #[serde(rename = "samsung-sm-galaxy")]
    pub samsung_sm_galaxy: SamsungSmGalaxy,
    #[serde(rename = "samsung-sm-galaxynote8")]
    pub samsung_sm_galaxynote8: SamsungSmGalaxynote8,
    #[serde(rename = "samsung-sm-i9060i")]
    pub samsung_sm_i9060i: SamsungSmI9060i,
    #[serde(rename = "samsung-sm-j100f")]
    pub samsung_sm_j100f: SamsungSmJ100f,
    #[serde(rename = "samsung-sm-j100fn")]
    pub samsung_sm_j100fn: SamsungSmJ100fn,
    #[serde(rename = "samsung-sm-j100g")]
    pub samsung_sm_j100g: SamsungSmJ100g,
    #[serde(rename = "samsung-sm-j100h")]
    pub samsung_sm_j100h: SamsungSmJ100h,
    #[serde(rename = "samsung-sm-j100m")]
    pub samsung_sm_j100m: SamsungSmJ100m,
    #[serde(rename = "samsung-sm-j100ml")]
    pub samsung_sm_j100ml: SamsungSmJ100ml,
    #[serde(rename = "samsung-sm-j100mu")]
    pub samsung_sm_j100mu: SamsungSmJ100mu,
    #[serde(rename = "samsung-sm-j100vpp")]
    pub samsung_sm_j100vpp: SamsungSmJ100vpp,
    #[serde(rename = "samsung-sm-j100y")]
    pub samsung_sm_j100y: SamsungSmJ100y,
    #[serde(rename = "samsung-sm-j105b")]
    pub samsung_sm_j105b: SamsungSmJ105b,
    #[serde(rename = "samsung-sm-j105f")]
    pub samsung_sm_j105f: SamsungSmJ105f,
    #[serde(rename = "samsung-sm-j105h")]
    pub samsung_sm_j105h: SamsungSmJ105h,
    #[serde(rename = "samsung-sm-j105m")]
    pub samsung_sm_j105m: SamsungSmJ105m,
    #[serde(rename = "samsung-sm-j105y")]
    pub samsung_sm_j105y: SamsungSmJ105y,
    #[serde(rename = "samsung-sm-j106b")]
    pub samsung_sm_j106b: SamsungSmJ106b,
    #[serde(rename = "samsung-sm-j106f")]
    pub samsung_sm_j106f: SamsungSmJ106f,
    #[serde(rename = "samsung-sm-j106h")]
    pub samsung_sm_j106h: SamsungSmJ106h,
    #[serde(rename = "samsung-sm-j106m")]
    pub samsung_sm_j106m: SamsungSmJ106m,
    #[serde(rename = "samsung-sm-j110f")]
    pub samsung_sm_j110f: SamsungSmJ110f,
    #[serde(rename = "samsung-sm-j110g")]
    pub samsung_sm_j110g: SamsungSmJ110g,
    #[serde(rename = "samsung-sm-j110h")]
    pub samsung_sm_j110h: SamsungSmJ110h,
    #[serde(rename = "samsung-sm-j110l")]
    pub samsung_sm_j110l: SamsungSmJ110l,
    #[serde(rename = "samsung-sm-j110m")]
    pub samsung_sm_j110m: SamsungSmJ110m,
    #[serde(rename = "samsung-sm-j111f")]
    pub samsung_sm_j111f: SamsungSmJ111f,
    #[serde(rename = "samsung-sm-j111m")]
    pub samsung_sm_j111m: SamsungSmJ111m,
    #[serde(rename = "samsung-sm-j120a")]
    pub samsung_sm_j120a: SamsungSmJ120a,
    #[serde(rename = "samsung-sm-j120az")]
    pub samsung_sm_j120az: SamsungSmJ120az,
    #[serde(rename = "samsung-sm-j120f")]
    pub samsung_sm_j120f: SamsungSmJ120f,
    #[serde(rename = "samsung-sm-j120fn")]
    pub samsung_sm_j120fn: SamsungSmJ120fn,
    #[serde(rename = "samsung-sm-j120g")]
    pub samsung_sm_j120g: SamsungSmJ120g,
    #[serde(rename = "samsung-sm-j120h")]
    pub samsung_sm_j120h: SamsungSmJ120h,
    #[serde(rename = "samsung-sm-j120m")]
    pub samsung_sm_j120m: SamsungSmJ120m,
    #[serde(rename = "samsung-sm-j120w")]
    pub samsung_sm_j120w: SamsungSmJ120w,
    #[serde(rename = "samsung-sm-j120zn")]
    pub samsung_sm_j120zn: SamsungSmJ120zn,
    #[serde(rename = "samsung-sm-j200bt")]
    pub samsung_sm_j200bt: SamsungSmJ200bt,
    #[serde(rename = "samsung-sm-j200f")]
    pub samsung_sm_j200f: SamsungSmJ200f,
    #[serde(rename = "samsung-sm-j200g")]
    pub samsung_sm_j200g: SamsungSmJ200g,
    #[serde(rename = "samsung-sm-j200gu")]
    pub samsung_sm_j200gu: SamsungSmJ200gu,
    #[serde(rename = "samsung-sm-j200h")]
    pub samsung_sm_j200h: SamsungSmJ200h,
    #[serde(rename = "samsung-sm-j200m")]
    pub samsung_sm_j200m: SamsungSmJ200m,
    #[serde(rename = "samsung-sm-j200y")]
    pub samsung_sm_j200y: SamsungSmJ200y,
    #[serde(rename = "samsung-sm-j210f")]
    pub samsung_sm_j210f: SamsungSmJ210f,
    #[serde(rename = "samsung-sm-j250f")]
    pub samsung_sm_j250f: SamsungSmJ250f,
    #[serde(rename = "samsung-sm-j250g")]
    pub samsung_sm_j250g: SamsungSmJ250g,
    #[serde(rename = "samsung-sm-j250m")]
    pub samsung_sm_j250m: SamsungSmJ250m,
    #[serde(rename = "samsung-sm-j260g")]
    pub samsung_sm_j260g: SamsungSmJ260g,
    #[serde(rename = "samsung-sm-j310")]
    pub samsung_sm_j310: SamsungSmJ310,
    #[serde(rename = "samsung-sm-j3109")]
    pub samsung_sm_j3109: SamsungSmJ3109,
    #[serde(rename = "samsung-sm-j3110")]
    pub samsung_sm_j3110: SamsungSmJ3110,
    #[serde(rename = "samsung-sm-j3119")]
    pub samsung_sm_j3119: SamsungSmJ3119,
    #[serde(rename = "samsung-sm-j3119s")]
    pub samsung_sm_j3119s: SamsungSmJ3119s,
    #[serde(rename = "samsung-sm-j320a")]
    pub samsung_sm_j320a: SamsungSmJ320a,
    #[serde(rename = "samsung-sm-j320az")]
    pub samsung_sm_j320az: SamsungSmJ320az,
    #[serde(rename = "samsung-sm-j320f")]
    pub samsung_sm_j320f: SamsungSmJ320f,
    #[serde(rename = "samsung-sm-j320fn")]
    pub samsung_sm_j320fn: SamsungSmJ320fn,
    #[serde(rename = "samsung-sm-j320g")]
    pub samsung_sm_j320g: SamsungSmJ320g,
    #[serde(rename = "samsung-sm-j320h")]
    pub samsung_sm_j320h: SamsungSmJ320h,
    #[serde(rename = "samsung-sm-j320m")]
    pub samsung_sm_j320m: SamsungSmJ320m,
    #[serde(rename = "samsung-sm-j320n0")]
    pub samsung_sm_j320n0: SamsungSmJ320n0,
    #[serde(rename = "samsung-sm-j320p")]
    pub samsung_sm_j320p: SamsungSmJ320p,
    #[serde(rename = "samsung-sm-j320r4")]
    pub samsung_sm_j320r4: SamsungSmJ320r4,
    #[serde(rename = "samsung-sm-j320v")]
    pub samsung_sm_j320v: SamsungSmJ320v,
    #[serde(rename = "samsung-sm-j320vpp")]
    pub samsung_sm_j320vpp: SamsungSmJ320vpp,
    #[serde(rename = "samsung-sm-j320w8")]
    pub samsung_sm_j320w8: SamsungSmJ320w8,
    #[serde(rename = "samsung-sm-j320y")]
    pub samsung_sm_j320y: SamsungSmJ320y,
    #[serde(rename = "samsung-sm-j320yz")]
    pub samsung_sm_j320yz: SamsungSmJ320yz,
    #[serde(rename = "samsung-sm-j320zn")]
    pub samsung_sm_j320zn: SamsungSmJ320zn,
    #[serde(rename = "samsung-sm-j321az")]
    pub samsung_sm_j321az: SamsungSmJ321az,
    #[serde(rename = "samsung-sm-j326az")]
    pub samsung_sm_j326az: SamsungSmJ326az,
    #[serde(rename = "samsung-sm-j327a")]
    pub samsung_sm_j327a: SamsungSmJ327a,
    #[serde(rename = "samsung-sm-j327az")]
    pub samsung_sm_j327az: SamsungSmJ327az,
    #[serde(rename = "samsung-sm-j327p")]
    pub samsung_sm_j327p: SamsungSmJ327p,
    #[serde(rename = "samsung-sm-j327r4")]
    pub samsung_sm_j327r4: SamsungSmJ327r4,
    #[serde(rename = "samsung-sm-j327r6")]
    pub samsung_sm_j327r6: SamsungSmJ327r6,
    #[serde(rename = "samsung-sm-j327r7")]
    pub samsung_sm_j327r7: SamsungSmJ327r7,
    #[serde(rename = "samsung-sm-j327t")]
    pub samsung_sm_j327t: SamsungSmJ327t,
    #[serde(rename = "samsung-sm-j327t1")]
    pub samsung_sm_j327t1: SamsungSmJ327t1,
    #[serde(rename = "samsung-sm-j327u")]
    pub samsung_sm_j327u: SamsungSmJ327u,
    #[serde(rename = "samsung-sm-j327v")]
    pub samsung_sm_j327v: SamsungSmJ327v,
    #[serde(rename = "samsung-sm-j327vpp")]
    pub samsung_sm_j327vpp: SamsungSmJ327vpp,
    #[serde(rename = "samsung-sm-j327w")]
    pub samsung_sm_j327w: SamsungSmJ327w,
    #[serde(rename = "samsung-sm-j3300")]
    pub samsung_sm_j3300: SamsungSmJ3300,
    #[serde(rename = "samsung-sm-j3308")]
    pub samsung_sm_j3308: SamsungSmJ3308,
    #[serde(rename = "samsung-sm-j330f")]
    pub samsung_sm_j330f: SamsungSmJ330f,
    #[serde(rename = "samsung-sm-j330fn")]
    pub samsung_sm_j330fn: SamsungSmJ330fn,
    #[serde(rename = "samsung-sm-j330g")]
    pub samsung_sm_j330g: SamsungSmJ330g,
    #[serde(rename = "samsung-sm-j330l")]
    pub samsung_sm_j330l: SamsungSmJ330l,
    #[serde(rename = "samsung-sm-j337a")]
    pub samsung_sm_j337a: SamsungSmJ337a,
    #[serde(rename = "samsung-sm-j337az")]
    pub samsung_sm_j337az: SamsungSmJ337az,
    #[serde(rename = "samsung-sm-j337p")]
    pub samsung_sm_j337p: SamsungSmJ337p,
    #[serde(rename = "samsung-sm-j337t")]
    pub samsung_sm_j337t: SamsungSmJ337t,
    #[serde(rename = "samsung-sm-j337v")]
    pub samsung_sm_j337v: SamsungSmJ337v,
    #[serde(rename = "samsung-sm-j337vpp")]
    pub samsung_sm_j337vpp: SamsungSmJ337vpp,
    #[serde(rename = "samsung-sm-j337w")]
    pub samsung_sm_j337w: SamsungSmJ337w,
    #[serde(rename = "samsung-sm-j400f")]
    pub samsung_sm_j400f: SamsungSmJ400f,
    #[serde(rename = "samsung-sm-j400m")]
    pub samsung_sm_j400m: SamsungSmJ400m,
    #[serde(rename = "samsung-sm-j415f")]
    pub samsung_sm_j415f: SamsungSmJ415f,
    #[serde(rename = "samsung-sm-j5007")]
    pub samsung_sm_j5007: SamsungSmJ5007,
    #[serde(rename = "samsung-sm-j5008")]
    pub samsung_sm_j5008: SamsungSmJ5008,
    #[serde(rename = "samsung-sm-j500f")]
    pub samsung_sm_j500f: SamsungSmJ500f,
    #[serde(rename = "samsung-sm-j500fn")]
    pub samsung_sm_j500fn: SamsungSmJ500fn,
    #[serde(rename = "samsung-sm-j500g")]
    pub samsung_sm_j500g: SamsungSmJ500g,
    #[serde(rename = "samsung-sm-j500h")]
    pub samsung_sm_j500h: SamsungSmJ500h,
    #[serde(rename = "samsung-sm-j500m")]
    pub samsung_sm_j500m: SamsungSmJ500m,
    #[serde(rename = "samsung-sm-j500n0")]
    pub samsung_sm_j500n0: SamsungSmJ500n0,
    #[serde(rename = "samsung-sm-j500y")]
    pub samsung_sm_j500y: SamsungSmJ500y,
    #[serde(rename = "samsung-sm-j5108")]
    pub samsung_sm_j5108: SamsungSmJ5108,
    #[serde(rename = "samsung-sm-j510f")]
    pub samsung_sm_j510f: SamsungSmJ510f,
    #[serde(rename = "samsung-sm-j510fn")]
    pub samsung_sm_j510fn: SamsungSmJ510fn,
    #[serde(rename = "samsung-sm-j510fq")]
    pub samsung_sm_j510fq: SamsungSmJ510fq,
    #[serde(rename = "samsung-sm-j510gn")]
    pub samsung_sm_j510gn: SamsungSmJ510gn,
    #[serde(rename = "samsung-sm-j510h")]
    pub samsung_sm_j510h: SamsungSmJ510h,
    #[serde(rename = "samsung-sm-j510k")]
    pub samsung_sm_j510k: SamsungSmJ510k,
    #[serde(rename = "samsung-sm-j510l")]
    pub samsung_sm_j510l: SamsungSmJ510l,
    #[serde(rename = "samsung-sm-j510mn")]
    pub samsung_sm_j510mn: SamsungSmJ510mn,
    #[serde(rename = "samsung-sm-j510s")]
    pub samsung_sm_j510s: SamsungSmJ510s,
    #[serde(rename = "samsung-sm-j510un")]
    pub samsung_sm_j510un: SamsungSmJ510un,
    #[serde(rename = "samsung-sm-j530f")]
    pub samsung_sm_j530f: SamsungSmJ530f,
    #[serde(rename = "samsung-sm-j530fm")]
    pub samsung_sm_j530fm: SamsungSmJ530fm,
    #[serde(rename = "samsung-sm-j530g")]
    pub samsung_sm_j530g: SamsungSmJ530g,
    #[serde(rename = "samsung-sm-j530k")]
    pub samsung_sm_j530k: SamsungSmJ530k,
    #[serde(rename = "samsung-sm-j530l")]
    pub samsung_sm_j530l: SamsungSmJ530l,
    #[serde(rename = "samsung-sm-j530s")]
    pub samsung_sm_j530s: SamsungSmJ530s,
    #[serde(rename = "samsung-sm-j530y")]
    pub samsung_sm_j530y: SamsungSmJ530y,
    #[serde(rename = "samsung-sm-j600f")]
    pub samsung_sm_j600f: SamsungSmJ600f,
    #[serde(rename = "samsung-sm-j600fn")]
    pub samsung_sm_j600fn: SamsungSmJ600fn,
    #[serde(rename = "samsung-sm-j600g")]
    pub samsung_sm_j600g: SamsungSmJ600g,
    #[serde(rename = "samsung-sm-j600gf")]
    pub samsung_sm_j600gf: SamsungSmJ600gf,
    #[serde(rename = "samsung-sm-j610f")]
    pub samsung_sm_j610f: SamsungSmJ610f,
    #[serde(rename = "samsung-sm-j700")]
    pub samsung_sm_j700: SamsungSmJ700,
    #[serde(rename = "samsung-sm-j7008")]
    pub samsung_sm_j7008: SamsungSmJ7008,
    #[serde(rename = "samsung-sm-j700f")]
    pub samsung_sm_j700f: SamsungSmJ700f,
    #[serde(rename = "samsung-sm-j700h")]
    pub samsung_sm_j700h: SamsungSmJ700h,
    #[serde(rename = "samsung-sm-j700k")]
    pub samsung_sm_j700k: SamsungSmJ700k,
    #[serde(rename = "samsung-sm-j700m")]
    pub samsung_sm_j700m: SamsungSmJ700m,
    #[serde(rename = "samsung-sm-j700p")]
    pub samsung_sm_j700p: SamsungSmJ700p,
    #[serde(rename = "samsung-sm-j700t")]
    pub samsung_sm_j700t: SamsungSmJ700t,
    #[serde(rename = "samsung-sm-j700t1")]
    pub samsung_sm_j700t1: SamsungSmJ700t1,
    #[serde(rename = "samsung-sm-j701f")]
    pub samsung_sm_j701f: SamsungSmJ701f,
    #[serde(rename = "samsung-sm-j701m")]
    pub samsung_sm_j701m: SamsungSmJ701m,
    #[serde(rename = "samsung-sm-j701mt")]
    pub samsung_sm_j701mt: SamsungSmJ701mt,
    #[serde(rename = "samsung-sm-j7108")]
    pub samsung_sm_j7108: SamsungSmJ7108,
    #[serde(rename = "samsung-sm-j710fn")]
    pub samsung_sm_j710fn: SamsungSmJ710fn,
    #[serde(rename = "samsung-sm-j710fq")]
    pub samsung_sm_j710fq: SamsungSmJ710fq,
    #[serde(rename = "samsung-sm-j710gn")]
    pub samsung_sm_j710gn: SamsungSmJ710gn,
    #[serde(rename = "samsung-sm-j710k")]
    pub samsung_sm_j710k: SamsungSmJ710k,
    #[serde(rename = "samsung-sm-j710mn")]
    pub samsung_sm_j710mn: SamsungSmJ710mn,
    #[serde(rename = "samsung-sm-j720f")]
    pub samsung_sm_j720f: SamsungSmJ720f,
    #[serde(rename = "samsung-sm-j727a")]
    pub samsung_sm_j727a: SamsungSmJ727a,
    #[serde(rename = "samsung-sm-j727az")]
    pub samsung_sm_j727az: SamsungSmJ727az,
    #[serde(rename = "samsung-sm-j727p")]
    pub samsung_sm_j727p: SamsungSmJ727p,
    #[serde(rename = "samsung-sm-j727r4")]
    pub samsung_sm_j727r4: SamsungSmJ727r4,
    #[serde(rename = "samsung-sm-j727s")]
    pub samsung_sm_j727s: SamsungSmJ727s,
    #[serde(rename = "samsung-sm-j727t")]
    pub samsung_sm_j727t: SamsungSmJ727t,
    #[serde(rename = "samsung-sm-j727t1")]
    pub samsung_sm_j727t1: SamsungSmJ727t1,
    #[serde(rename = "samsung-sm-j727u")]
    pub samsung_sm_j727u: SamsungSmJ727u,
    #[serde(rename = "samsung-sm-j727v")]
    pub samsung_sm_j727v: SamsungSmJ727v,
    #[serde(rename = "samsung-sm-j727vpp")]
    pub samsung_sm_j727vpp: SamsungSmJ727vpp,
    #[serde(rename = "samsung-sm-j730f")]
    pub samsung_sm_j730f: SamsungSmJ730f,
    #[serde(rename = "samsung-sm-j730fm")]
    pub samsung_sm_j730fm: SamsungSmJ730fm,
    #[serde(rename = "samsung-sm-j730g")]
    pub samsung_sm_j730g: SamsungSmJ730g,
    #[serde(rename = "samsung-sm-j730k")]
    pub samsung_sm_j730k: SamsungSmJ730k,
    #[serde(rename = "samsung-sm-j737a")]
    pub samsung_sm_j737a: SamsungSmJ737a,
    #[serde(rename = "samsung-sm-j737p")]
    pub samsung_sm_j737p: SamsungSmJ737p,
    #[serde(rename = "samsung-sm-j737s")]
    pub samsung_sm_j737s: SamsungSmJ737s,
    #[serde(rename = "samsung-sm-j737t")]
    pub samsung_sm_j737t: SamsungSmJ737t,
    #[serde(rename = "samsung-sm-j737v")]
    pub samsung_sm_j737v: SamsungSmJ737v,
    #[serde(rename = "samsung-sm-j800fn")]
    pub samsung_sm_j800fn: SamsungSmJ800fn,
    #[serde(rename = "samsung-sm-j810f")]
    pub samsung_sm_j810f: SamsungSmJ810f,
    #[serde(rename = "samsung-sm-j810g")]
    pub samsung_sm_j810g: SamsungSmJ810g,
    #[serde(rename = "samsung-sm-j810gf")]
    pub samsung_sm_j810gf: SamsungSmJ810gf,
    #[serde(rename = "samsung-sm-j810m")]
    pub samsung_sm_j810m: SamsungSmJ810m,
    #[serde(rename = "samsung-sm-j810y")]
    pub samsung_sm_j810y: SamsungSmJ810y,
    #[serde(rename = "samsung-sm-j900fn")]
    pub samsung_sm_j900fn: SamsungSmJ900fn,
    #[serde(rename = "samsung-sm-n750")]
    pub samsung_sm_n750: SamsungSmN750,
    #[serde(rename = "samsung-sm-n7500q")]
    pub samsung_sm_n7500q: SamsungSmN7500q,
    #[serde(rename = "samsung-sm-n7502")]
    pub samsung_sm_n7502: SamsungSmN7502,
    #[serde(rename = "samsung-sm-n7505")]
    pub samsung_sm_n7505: SamsungSmN7505,
    #[serde(rename = "samsung-sm-n7505l")]
    pub samsung_sm_n7505l: SamsungSmN7505l,
    #[serde(rename = "samsung-sm-n7506v")]
    pub samsung_sm_n7506v: SamsungSmN7506v,
    #[serde(rename = "samsung-sm-n7507")]
    pub samsung_sm_n7507: SamsungSmN7507,
    #[serde(rename = "samsung-sm-n7508v")]
    pub samsung_sm_n7508v: SamsungSmN7508v,
    #[serde(rename = "samsung-sm-n750k")]
    pub samsung_sm_n750k: SamsungSmN750k,
    #[serde(rename = "samsung-sm-n750l")]
    pub samsung_sm_n750l: SamsungSmN750l,
    #[serde(rename = "samsung-sm-n750s")]
    pub samsung_sm_n750s: SamsungSmN750s,
    #[serde(rename = "samsung-sm-n900")]
    pub samsung_sm_n900: SamsungSmN900,
    #[serde(rename = "samsung-sm-n9000q")]
    pub samsung_sm_n9000q: SamsungSmN9000q,
    #[serde(rename = "samsung-sm-n9002")]
    pub samsung_sm_n9002: SamsungSmN9002,
    #[serde(rename = "samsung-sm-n9005")]
    pub samsung_sm_n9005: SamsungSmN9005,
    #[serde(rename = "samsung-sm-n9006")]
    pub samsung_sm_n9006: SamsungSmN9006,
    #[serde(rename = "samsung-sm-n9007")]
    pub samsung_sm_n9007: SamsungSmN9007,
    #[serde(rename = "samsung-sm-n9008")]
    pub samsung_sm_n9008: SamsungSmN9008,
    #[serde(rename = "samsung-sm-n9008s")]
    pub samsung_sm_n9008s: SamsungSmN9008s,
    #[serde(rename = "samsung-sm-n9008v")]
    pub samsung_sm_n9008v: SamsungSmN9008v,
    #[serde(rename = "samsung-sm-n9009")]
    pub samsung_sm_n9009: SamsungSmN9009,
    #[serde(rename = "samsung-sm-n900a")]
    pub samsung_sm_n900a: SamsungSmN900a,
    #[serde(rename = "samsung-sm-n900k")]
    pub samsung_sm_n900k: SamsungSmN900k,
    #[serde(rename = "samsung-sm-n900l")]
    pub samsung_sm_n900l: SamsungSmN900l,
    #[serde(rename = "samsung-sm-n900p")]
    pub samsung_sm_n900p: SamsungSmN900p,
    #[serde(rename = "samsung-sm-n900r4")]
    pub samsung_sm_n900r4: SamsungSmN900r4,
    #[serde(rename = "samsung-sm-n900s")]
    pub samsung_sm_n900s: SamsungSmN900s,
    #[serde(rename = "samsung-sm-n900t")]
    pub samsung_sm_n900t: SamsungSmN900t,
    #[serde(rename = "samsung-sm-n900u")]
    pub samsung_sm_n900u: SamsungSmN900u,
    #[serde(rename = "samsung-sm-n900v")]
    pub samsung_sm_n900v: SamsungSmN900v,
    #[serde(rename = "samsung-sm-n900w8")]
    pub samsung_sm_n900w8: SamsungSmN900w8,
    #[serde(rename = "samsung-sm-n910")]
    pub samsung_sm_n910: SamsungSmN910,
    #[serde(rename = "samsung-sm-n9100")]
    pub samsung_sm_n9100: SamsungSmN9100,
    #[serde(rename = "samsung-sm-n9108v")]
    pub samsung_sm_n9108v: SamsungSmN9108v,
    #[serde(rename = "samsung-sm-n910a")]
    pub samsung_sm_n910a: SamsungSmN910a,
    #[serde(rename = "samsung-sm-n910c")]
    pub samsung_sm_n910c: SamsungSmN910c,
    #[serde(rename = "samsung-sm-n910f")]
    pub samsung_sm_n910f: SamsungSmN910f,
    #[serde(rename = "samsung-sm-n910g")]
    pub samsung_sm_n910g: SamsungSmN910g,
    #[serde(rename = "samsung-sm-n910h")]
    pub samsung_sm_n910h: SamsungSmN910h,
    #[serde(rename = "samsung-sm-n910k")]
    pub samsung_sm_n910k: SamsungSmN910k,
    #[serde(rename = "samsung-sm-n910l")]
    pub samsung_sm_n910l: SamsungSmN910l,
    #[serde(rename = "samsung-sm-n910p")]
    pub samsung_sm_n910p: SamsungSmN910p,
    #[serde(rename = "samsung-sm-n910r4")]
    pub samsung_sm_n910r4: SamsungSmN910r4,
    #[serde(rename = "samsung-sm-n910s")]
    pub samsung_sm_n910s: SamsungSmN910s,
    #[serde(rename = "samsung-sm-n910t")]
    pub samsung_sm_n910t: SamsungSmN910t,
    #[serde(rename = "samsung-sm-n910t2")]
    pub samsung_sm_n910t2: SamsungSmN910t2,
    #[serde(rename = "samsung-sm-n910t3")]
    pub samsung_sm_n910t3: SamsungSmN910t3,
    #[serde(rename = "samsung-sm-n910u")]
    pub samsung_sm_n910u: SamsungSmN910u,
    #[serde(rename = "samsung-sm-n910v")]
    pub samsung_sm_n910v: SamsungSmN910v,
    #[serde(rename = "samsung-sm-n910w8")]
    pub samsung_sm_n910w8: SamsungSmN910w8,
    #[serde(rename = "samsung-sm-n910x")]
    pub samsung_sm_n910x: SamsungSmN910x,
    #[serde(rename = "samsung-sm-n9150")]
    pub samsung_sm_n9150: SamsungSmN9150,
    #[serde(rename = "samsung-sm-n915a")]
    pub samsung_sm_n915a: SamsungSmN915a,
    #[serde(rename = "samsung-sm-n915f")]
    pub samsung_sm_n915f: SamsungSmN915f,
    #[serde(rename = "samsung-sm-n915fy")]
    pub samsung_sm_n915fy: SamsungSmN915fy,
    #[serde(rename = "samsung-sm-n915g")]
    pub samsung_sm_n915g: SamsungSmN915g,
    #[serde(rename = "samsung-sm-n915k")]
    pub samsung_sm_n915k: SamsungSmN915k,
    #[serde(rename = "samsung-sm-n915l")]
    pub samsung_sm_n915l: SamsungSmN915l,
    #[serde(rename = "samsung-sm-n915p")]
    pub samsung_sm_n915p: SamsungSmN915p,
    #[serde(rename = "samsung-sm-n915r4")]
    pub samsung_sm_n915r4: SamsungSmN915r4,
    #[serde(rename = "samsung-sm-n915s")]
    pub samsung_sm_n915s: SamsungSmN915s,
    #[serde(rename = "samsung-sm-n915t")]
    pub samsung_sm_n915t: SamsungSmN915t,
    #[serde(rename = "samsung-sm-n915v")]
    pub samsung_sm_n915v: SamsungSmN915v,
    #[serde(rename = "samsung-sm-n915w8")]
    pub samsung_sm_n915w8: SamsungSmN915w8,
    #[serde(rename = "samsung-sm-n915x")]
    pub samsung_sm_n915x: SamsungSmN915x,
    #[serde(rename = "samsung-sm-n916k")]
    pub samsung_sm_n916k: SamsungSmN916k,
    #[serde(rename = "samsung-sm-n916l")]
    pub samsung_sm_n916l: SamsungSmN916l,
    #[serde(rename = "samsung-sm-n916s")]
    pub samsung_sm_n916s: SamsungSmN916s,
    #[serde(rename = "samsung-sm-n920")]
    pub samsung_sm_n920: SamsungSmN920,
    #[serde(rename = "samsung-sm-n9200")]
    pub samsung_sm_n9200: SamsungSmN9200,
    #[serde(rename = "samsung-sm-n9208")]
    pub samsung_sm_n9208: SamsungSmN9208,
    #[serde(rename = "samsung-sm-n920a")]
    pub samsung_sm_n920a: SamsungSmN920a,
    #[serde(rename = "samsung-sm-n920c")]
    pub samsung_sm_n920c: SamsungSmN920c,
    #[serde(rename = "samsung-sm-n920f")]
    pub samsung_sm_n920f: SamsungSmN920f,
    #[serde(rename = "samsung-sm-n920g")]
    pub samsung_sm_n920g: SamsungSmN920g,
    #[serde(rename = "samsung-sm-n920i")]
    pub samsung_sm_n920i: SamsungSmN920i,
    #[serde(rename = "samsung-sm-n920k")]
    pub samsung_sm_n920k: SamsungSmN920k,
    #[serde(rename = "samsung-sm-n920l")]
    pub samsung_sm_n920l: SamsungSmN920l,
    #[serde(rename = "samsung-sm-n920p")]
    pub samsung_sm_n920p: SamsungSmN920p,
    #[serde(rename = "samsung-sm-n920r4")]
    pub samsung_sm_n920r4: SamsungSmN920r4,
    #[serde(rename = "samsung-sm-n920r6")]
    pub samsung_sm_n920r6: SamsungSmN920r6,
    #[serde(rename = "samsung-sm-n920r7")]
    pub samsung_sm_n920r7: SamsungSmN920r7,
    #[serde(rename = "samsung-sm-n920s")]
    pub samsung_sm_n920s: SamsungSmN920s,
    #[serde(rename = "samsung-sm-n920t")]
    pub samsung_sm_n920t: SamsungSmN920t,
    #[serde(rename = "samsung-sm-n920v")]
    pub samsung_sm_n920v: SamsungSmN920v,
    #[serde(rename = "samsung-sm-n920w8")]
    pub samsung_sm_n920w8: SamsungSmN920w8,
    #[serde(rename = "samsung-sm-n920x")]
    pub samsung_sm_n920x: SamsungSmN920x,
    #[serde(rename = "samsung-sm-n9300")]
    pub samsung_sm_n9300: SamsungSmN9300,
    #[serde(rename = "samsung-sm-n930a")]
    pub samsung_sm_n930a: SamsungSmN930a,
    #[serde(rename = "samsung-sm-n930f")]
    pub samsung_sm_n930f: SamsungSmN930f,
    #[serde(rename = "samsung-sm-n930l")]
    pub samsung_sm_n930l: SamsungSmN930l,
    #[serde(rename = "samsung-sm-n930p")]
    pub samsung_sm_n930p: SamsungSmN930p,
    #[serde(rename = "samsung-sm-n930s")]
    pub samsung_sm_n930s: SamsungSmN930s,
    #[serde(rename = "samsung-sm-n930t")]
    pub samsung_sm_n930t: SamsungSmN930t,
    #[serde(rename = "samsung-sm-n930v")]
    pub samsung_sm_n930v: SamsungSmN930v,
    #[serde(rename = "samsung-sm-n930w8")]
    pub samsung_sm_n930w8: SamsungSmN930w8,
    #[serde(rename = "samsung-sm-n930x")]
    pub samsung_sm_n930x: SamsungSmN930x,
    #[serde(rename = "samsung-sm-n935f")]
    pub samsung_sm_n935f: SamsungSmN935f,
    #[serde(rename = "samsung-sm-n935k")]
    pub samsung_sm_n935k: SamsungSmN935k,
    #[serde(rename = "samsung-sm-n935l")]
    pub samsung_sm_n935l: SamsungSmN935l,
    #[serde(rename = "samsung-sm-n935s")]
    pub samsung_sm_n935s: SamsungSmN935s,
    #[serde(rename = "samsung-sm-n9500")]
    pub samsung_sm_n9500: SamsungSmN9500,
    #[serde(rename = "samsung-sm-n950f")]
    pub samsung_sm_n950f: SamsungSmN950f,
    #[serde(rename = "samsung-sm-n950fd")]
    pub samsung_sm_n950fd: SamsungSmN950fd,
    #[serde(rename = "samsung-sm-n950k")]
    pub samsung_sm_n950k: SamsungSmN950k,
    #[serde(rename = "samsung-sm-n950n")]
    pub samsung_sm_n950n: SamsungSmN950n,
    #[serde(rename = "samsung-sm-n950u")]
    pub samsung_sm_n950u: SamsungSmN950u,
    #[serde(rename = "samsung-sm-n950u1")]
    pub samsung_sm_n950u1: SamsungSmN950u1,
    #[serde(rename = "samsung-sm-n950w")]
    pub samsung_sm_n950w: SamsungSmN950w,
    #[serde(rename = "samsung-sm-n950x")]
    pub samsung_sm_n950x: SamsungSmN950x,
    #[serde(rename = "samsung-sm-n9550")]
    pub samsung_sm_n9550: SamsungSmN9550,
    #[serde(rename = "samsung-sm-n9600")]
    pub samsung_sm_n9600: SamsungSmN9600,
    #[serde(rename = "samsung-sm-n960f")]
    pub samsung_sm_n960f: SamsungSmN960f,
    #[serde(rename = "samsung-sm-n960n")]
    pub samsung_sm_n960n: SamsungSmN960n,
    #[serde(rename = "samsung-sm-n960u")]
    pub samsung_sm_n960u: SamsungSmN960u,
    #[serde(rename = "samsung-sm-n960u1")]
    pub samsung_sm_n960u1: SamsungSmN960u1,
    #[serde(rename = "samsung-sm-n960w")]
    pub samsung_sm_n960w: SamsungSmN960w,
    #[serde(rename = "samsung-sm-n960x")]
    pub samsung_sm_n960x: SamsungSmN960x,
    #[serde(rename = "samsung-sm-n960xu")]
    pub samsung_sm_n960xu: SamsungSmN960xu,
    #[serde(rename = "samsung-sm-p355c")]
    pub samsung_sm_p355c: SamsungSmP355c,
    #[serde(rename = "samsung-sm-p355m")]
    pub samsung_sm_p355m: SamsungSmP355m,
    #[serde(rename = "samsung-sm-p355y")]
    pub samsung_sm_p355y: SamsungSmP355y,
    #[serde(rename = "samsung-sm-p555c")]
    pub samsung_sm_p555c: SamsungSmP555c,
    #[serde(rename = "samsung-sm-p555m")]
    pub samsung_sm_p555m: SamsungSmP555m,
    #[serde(rename = "samsung-sm-p585y")]
    pub samsung_sm_p585y: SamsungSmP585y,
    #[serde(rename = "samsung-sm-p605k")]
    pub samsung_sm_p605k: SamsungSmP605k,
    #[serde(rename = "samsung-sm-p605m")]
    pub samsung_sm_p605m: SamsungSmP605m,
    #[serde(rename = "samsung-sm-p9000")]
    pub samsung_sm_p9000: SamsungSmP9000,
    #[serde(rename = "samsung-sm-p905f0")]
    pub samsung_sm_p905f0: SamsungSmP905f0,
    #[serde(rename = "samsung-sm-p905m")]
    pub samsung_sm_p905m: SamsungSmP905m,
    #[serde(rename = "samsung-sm-pen15")]
    pub samsung_sm_pen15: SamsungSmPen15,
    #[serde(rename = "samsung-sm-r720")]
    pub samsung_sm_r720: SamsungSmR720,
    #[serde(rename = "samsung-sm-r730a")]
    pub samsung_sm_r730a: SamsungSmR730a,
    #[serde(rename = "samsung-sm-r732")]
    pub samsung_sm_r732: SamsungSmR732,
    #[serde(rename = "samsung-sm-r750")]
    pub samsung_sm_r750: SamsungSmR750,
    #[serde(rename = "samsung-sm-r750a")]
    pub samsung_sm_r750a: SamsungSmR750a,
    #[serde(rename = "samsung-sm-r760")]
    pub samsung_sm_r760: SamsungSmR760,
    #[serde(rename = "samsung-sm-r765")]
    pub samsung_sm_r765: SamsungSmR765,
    #[serde(rename = "samsung-sm-r765v")]
    pub samsung_sm_r765v: SamsungSmR765v,
    #[serde(rename = "samsung-sm-r810")]
    pub samsung_sm_r810: SamsungSmR810,
    #[serde(rename = "samsung-sm-s120vl")]
    pub samsung_sm_s120vl: SamsungSmS120vl,
    #[serde(rename = "samsung-sm-s320vl")]
    pub samsung_sm_s320vl: SamsungSmS320vl,
    #[serde(rename = "samsung-sm-s327vl")]
    pub samsung_sm_s327vl: SamsungSmS327vl,
    #[serde(rename = "samsung-sm-s337tl")]
    pub samsung_sm_s337tl: SamsungSmS337tl,
    #[serde(rename = "samsung-sm-s367vl")]
    pub samsung_sm_s367vl: SamsungSmS367vl,
    #[serde(rename = "samsung-sm-s550t")]
    pub samsung_sm_s550t: SamsungSmS550t,
    #[serde(rename = "samsung-sm-s550tl")]
    pub samsung_sm_s550tl: SamsungSmS550tl,
    #[serde(rename = "samsung-sm-s727vl")]
    pub samsung_sm_s727vl: SamsungSmS727vl,
    #[serde(rename = "samsung-sm-s737tl")]
    pub samsung_sm_s737tl: SamsungSmS737tl,
    #[serde(rename = "samsung-sm-s765c")]
    pub samsung_sm_s765c: SamsungSmS765c,
    #[serde(rename = "samsung-sm-s766c")]
    pub samsung_sm_s766c: SamsungSmS766c,
    #[serde(rename = "samsung-sm-s777c")]
    pub samsung_sm_s777c: SamsungSmS777c,
    #[serde(rename = "samsung-sm-s820l")]
    pub samsung_sm_s820l: SamsungSmS820l,
    #[serde(rename = "samsung-sm-s890l")]
    pub samsung_sm_s890l: SamsungSmS890l,
    #[serde(rename = "samsung-sm-s902l")]
    pub samsung_sm_s902l: SamsungSmS902l,
    #[serde(rename = "samsung-sm-s903vl")]
    pub samsung_sm_s903vl: SamsungSmS903vl,
    #[serde(rename = "samsung-sm-s906l")]
    pub samsung_sm_s906l: SamsungSmS906l,
    #[serde(rename = "samsung-sm-s907vl")]
    pub samsung_sm_s907vl: SamsungSmS907vl,
    #[serde(rename = "samsung-sm-s920l")]
    pub samsung_sm_s920l: SamsungSmS920l,
    #[serde(rename = "samsung-sm-s975l")]
    pub samsung_sm_s975l: SamsungSmS975l,
    #[serde(rename = "samsung-sm-s978l")]
    pub samsung_sm_s978l: SamsungSmS978l,
    #[serde(rename = "samsung-sm-t111m")]
    pub samsung_sm_t111m: SamsungSmT111m,
    #[serde(rename = "samsung-sm-t111nq")]
    pub samsung_sm_t111nq: SamsungSmT111nq,
    #[serde(rename = "samsung-sm-t113nu")]
    pub samsung_sm_t113nu: SamsungSmT113nu,
    #[serde(rename = "samsung-sm-t116bu")]
    pub samsung_sm_t116bu: SamsungSmT116bu,
    #[serde(rename = "samsung-sm-t116ir")]
    pub samsung_sm_t116ir: SamsungSmT116ir,
    #[serde(rename = "samsung-sm-t116nq")]
    pub samsung_sm_t116nq: SamsungSmT116nq,
    #[serde(rename = "samsung-sm-t116nu")]
    pub samsung_sm_t116nu: SamsungSmT116nu,
    #[serde(rename = "samsung-sm-t116ny")]
    pub samsung_sm_t116ny: SamsungSmT116ny,
    #[serde(rename = "samsung-sm-t210l")]
    pub samsung_sm_t210l: SamsungSmT210l,
    #[serde(rename = "samsung-sm-t210x")]
    pub samsung_sm_t210x: SamsungSmT210x,
    #[serde(rename = "samsung-sm-t211m")]
    pub samsung_sm_t211m: SamsungSmT211m,
    #[serde(rename = "samsung-sm-t2127s")]
    pub samsung_sm_t2127s: SamsungSmT2127s,
    #[serde(rename = "samsung-sm-t217a")]
    pub samsung_sm_t217a: SamsungSmT217a,
    #[serde(rename = "samsung-sm-t217t")]
    pub samsung_sm_t217t: SamsungSmT217t,
    #[serde(rename = "samsung-sm-t220")]
    pub samsung_sm_t220: SamsungSmT220,
    #[serde(rename = "samsung-sm-t2303")]
    pub samsung_sm_t2303: SamsungSmT2303,
    #[serde(rename = "samsung-sm-t230nt")]
    pub samsung_sm_t230nt: SamsungSmT230nt,
    #[serde(rename = "samsung-sm-t235y")]
    pub samsung_sm_t235y: SamsungSmT235y,
    #[serde(rename = "samsung-sm-t2397")]
    pub samsung_sm_t2397: SamsungSmT2397,
    #[serde(rename = "samsung-sm-t239m")]
    pub samsung_sm_t239m: SamsungSmT239m,
    #[serde(rename = "samsung-sm-t285m")]
    pub samsung_sm_t285m: SamsungSmT285m,
    #[serde(rename = "samsung-sm-t287")]
    pub samsung_sm_t287: SamsungSmT287,
    #[serde(rename = "samsung-sm-t320nzwaxar")]
    pub samsung_sm_t320nzwaxar: SamsungSmT320nzwaxar,
    #[serde(rename = "samsung-sm-t322")]
    pub samsung_sm_t322: SamsungSmT322,
    #[serde(rename = "samsung-sm-t331c")]
    pub samsung_sm_t331c: SamsungSmT331c,
    #[serde(rename = "samsung-sm-t335l")]
    pub samsung_sm_t335l: SamsungSmT335l,
    #[serde(rename = "samsung-sm-t357w")]
    pub samsung_sm_t357w: SamsungSmT357w,
    #[serde(rename = "samsung-sm-t3777")]
    pub samsung_sm_t3777: SamsungSmT3777,
    #[serde(rename = "samsung-sm-t377r4")]
    pub samsung_sm_t377r4: SamsungSmT377r4,
    #[serde(rename = "samsung-sm-t377t")]
    pub samsung_sm_t377t: SamsungSmT377t,
    #[serde(rename = "samsung-sm-t377vzkavzw")]
    pub samsung_sm_t377vzkavzw: SamsungSmT377vzkavzw,
    #[serde(rename = "samsung-sm-t377w")]
    pub samsung_sm_t377w: SamsungSmT377w,
    #[serde(rename = "samsung-sm-t378v")]
    pub samsung_sm_t378v: SamsungSmT378v,
    #[serde(rename = "samsung-sm-t380")]
    pub samsung_sm_t380: SamsungSmT380,
    #[serde(rename = "samsung-sm-t385")]
    pub samsung_sm_t385: SamsungSmT385,
    #[serde(rename = "samsung-sm-t385c")]
    pub samsung_sm_t385c: SamsungSmT385c,
    #[serde(rename = "samsung-sm-t387v")]
    pub samsung_sm_t387v: SamsungSmT387v,
    #[serde(rename = "samsung-sm-t395")]
    pub samsung_sm_t395: SamsungSmT395,
    #[serde(rename = "samsung-sm-t397u")]
    pub samsung_sm_t397u: SamsungSmT397u,
    #[serde(rename = "samsung-sm-t530nn")]
    pub samsung_sm_t530nn: SamsungSmT530nn,
    #[serde(rename = "samsung-sm-t537r4")]
    pub samsung_sm_t537r4: SamsungSmT537r4,
    #[serde(rename = "samsung-sm-t550x")]
    pub samsung_sm_t550x: SamsungSmT550x,
    #[serde(rename = "samsung-sm-t561m")]
    pub samsung_sm_t561m: SamsungSmT561m,
    #[serde(rename = "samsung-sm-t561y")]
    pub samsung_sm_t561y: SamsungSmT561y,
    #[serde(rename = "samsung-sm-t567v")]
    pub samsung_sm_t567v: SamsungSmT567v,
    #[serde(rename = "samsung-sm-t585n0")]
    pub samsung_sm_t585n0: SamsungSmT585n0,
    #[serde(rename = "samsung-sm-t587")]
    pub samsung_sm_t587: SamsungSmT587,
    #[serde(rename = "samsung-sm-t590")]
    pub samsung_sm_t590: SamsungSmT590,
    #[serde(rename = "samsung-sm-t595")]
    pub samsung_sm_t595: SamsungSmT595,
    #[serde(rename = "samsung-sm-t705m")]
    pub samsung_sm_t705m: SamsungSmT705m,
    #[serde(rename = "samsung-sm-t705w")]
    pub samsung_sm_t705w: SamsungSmT705w,
    #[serde(rename = "samsung-sm-t705y")]
    pub samsung_sm_t705y: SamsungSmT705y,
    #[serde(rename = "samsung-sm-t719y")]
    pub samsung_sm_t719y: SamsungSmT719y,
    #[serde(rename = "samsung-sm-t800x")]
    pub samsung_sm_t800x: SamsungSmT800x,
    #[serde(rename = "samsung-sm-t805c")]
    pub samsung_sm_t805c: SamsungSmT805c,
    #[serde(rename = "samsung-sm-t805m")]
    pub samsung_sm_t805m: SamsungSmT805m,
    #[serde(rename = "samsung-sm-t810x")]
    pub samsung_sm_t810x: SamsungSmT810x,
    #[serde(rename = "samsung-sm-t815c")]
    pub samsung_sm_t815c: SamsungSmT815c,
    #[serde(rename = "samsung-sm-t819c")]
    pub samsung_sm_t819c: SamsungSmT819c,
    #[serde(rename = "samsung-sm-t820nzkaxar")]
    pub samsung_sm_t820nzkaxar: SamsungSmT820nzkaxar,
    #[serde(rename = "samsung-sm-t825c")]
    pub samsung_sm_t825c: SamsungSmT825c,
    #[serde(rename = "samsung-sm-t825y")]
    pub samsung_sm_t825y: SamsungSmT825y,
    #[serde(rename = "samsung-sm-t827r4")]
    pub samsung_sm_t827r4: SamsungSmT827r4,
    #[serde(rename = "samsung-sm-t827v")]
    pub samsung_sm_t827v: SamsungSmT827v,
    #[serde(rename = "samsung-sm-t830")]
    pub samsung_sm_t830: SamsungSmT830,
    #[serde(rename = "samsung-sm-t835")]
    pub samsung_sm_t835: SamsungSmT835,
    #[serde(rename = "samsung-sm-t837v")]
    pub samsung_sm_t837v: SamsungSmT837v,
    #[serde(rename = "samsung-sm-w2014")]
    pub samsung_sm_w2014: SamsungSmW2014,
    #[serde(rename = "samsung-sm-w750v")]
    pub samsung_sm_w750v: SamsungSmW750v,
    #[serde(rename = "samsung-sm-w900w8")]
    pub samsung_sm_w900w8: SamsungSmW900w8,
    #[serde(rename = "samsung-sm-z130h")]
    pub samsung_sm_z130h: SamsungSmZ130h,
    #[serde(rename = "samsung-sm-z200f")]
    pub samsung_sm_z200f: SamsungSmZ200f,
    #[serde(rename = "samsung-sm-z200m")]
    pub samsung_sm_z200m: SamsungSmZ200m,
    #[serde(rename = "samsung-sm-z200y")]
    pub samsung_sm_z200y: SamsungSmZ200y,
    #[serde(rename = "samsung-sm-z300h")]
    pub samsung_sm_z300h: SamsungSmZ300h,
    #[serde(rename = "samsung-sm-z400f")]
    pub samsung_sm_z400f: SamsungSmZ400f,
    #[serde(rename = "samsung-sm-z400y")]
    pub samsung_sm_z400y: SamsungSmZ400y,
    #[serde(rename = "samsung-sm-z9005")]
    pub samsung_sm_z9005: SamsungSmZ9005,
    #[serde(rename = "samsung-sph-3970dci")]
    pub samsung_sph_3970dci: SamsungSph3970dci,
    #[serde(rename = "samsung-sph-d600")]
    pub samsung_sph_d600: SamsungSphD600,
    #[serde(rename = "samsung-sph-d700")]
    pub samsung_sph_d700: SamsungSphD700,
    #[serde(rename = "samsung-sph-d710bst")]
    pub samsung_sph_d710bst: SamsungSphD710bst,
    #[serde(rename = "samsung-sph-d710vmub")]
    pub samsung_sph_d710vmub: SamsungSphD710vmub,
    #[serde(rename = "samsung-sph-i325")]
    pub samsung_sph_i325: SamsungSphI325,
    #[serde(rename = "samsung-sph-i800")]
    pub samsung_sph_i800: SamsungSphI800,
    #[serde(rename = "samsung-sph-ip830w")]
    pub samsung_sph_ip830w: SamsungSphIp830w,
    #[serde(rename = "samsung-sph-l300")]
    pub samsung_sph_l300: SamsungSphL300,
    #[serde(rename = "samsung-sph-l520")]
    pub samsung_sph_l520: SamsungSphL520,
    #[serde(rename = "samsung-sph-l600")]
    pub samsung_sph_l600: SamsungSphL600,
    #[serde(rename = "samsung-sph-l710t")]
    pub samsung_sph_l710t: SamsungSphL710t,
    #[serde(rename = "samsung-sph-l720t")]
    pub samsung_sph_l720t: SamsungSphL720t,
    #[serde(rename = "samsung-sph-l900")]
    pub samsung_sph_l900: SamsungSphL900,
    #[serde(rename = "samsung-sph-m340")]
    pub samsung_sph_m340: SamsungSphM340,
    #[serde(rename = "samsung-sph-m540")]
    pub samsung_sph_m540: SamsungSphM540,
    #[serde(rename = "samsung-sph-m575")]
    pub samsung_sph_m575: SamsungSphM575,
    #[serde(rename = "samsung-sph-m580")]
    pub samsung_sph_m580: SamsungSphM580,
    #[serde(rename = "samsung-sph-m580bst")]
    pub samsung_sph_m580bst: SamsungSphM580bst,
    #[serde(rename = "samsung-sph-m800")]
    pub samsung_sph_m800: SamsungSphM800,
    #[serde(rename = "samsung-sph-m820")]
    pub samsung_sph_m820: SamsungSphM820,
    #[serde(rename = "samsung-sph-m840")]
    pub samsung_sph_m840: SamsungSphM840,
    #[serde(rename = "samsung-sph-m900")]
    pub samsung_sph_m900: SamsungSphM900,
    #[serde(rename = "samsung-sph-m910")]
    pub samsung_sph_m910: SamsungSphM910,
    #[serde(rename = "samsung-sph-m920")]
    pub samsung_sph_m920: SamsungSphM920,
    #[serde(rename = "samsung-sph-m930")]
    pub samsung_sph_m930: SamsungSphM930,
    #[serde(rename = "samsung-sph-m930bst")]
    pub samsung_sph_m930bst: SamsungSphM930bst,
    #[serde(rename = "samsung-sph-m950")]
    pub samsung_sph_m950: SamsungSphM950,
    #[serde(rename = "samsung-sph-p100")]
    pub samsung_sph_p100: SamsungSphP100,
    #[serde(rename = "samsung-sph-p500")]
    pub samsung_sph_p500: SamsungSphP500,
    #[serde(rename = "smart-tv")]
    pub smart_tv: SmartTv,
    #[serde(rename = "sony-digital-tv")]
    pub sony_digital_tv: SonyDigitalTv,
    #[serde(rename = "sony-ericsson-c510")]
    pub sony_ericsson_c510: SonyEricssonC510,
    #[serde(rename = "sony-ericsson-c510a")]
    pub sony_ericsson_c510a: SonyEricssonC510a,
    #[serde(rename = "sony-ericsson-c510v")]
    pub sony_ericsson_c510v: SonyEricssonC510v,
    #[serde(rename = "sony-ericsson-c6603")]
    pub sony_ericsson_c6603: SonyEricssonC6603,
    #[serde(rename = "sony-ericsson-c702")]
    pub sony_ericsson_c702: SonyEricssonC702,
    #[serde(rename = "sony-ericsson-c901")]
    pub sony_ericsson_c901: SonyEricssonC901,
    #[serde(rename = "sony-ericsson-c902")]
    pub sony_ericsson_c902: SonyEricssonC902,
    #[serde(rename = "sony-ericsson-c903")]
    pub sony_ericsson_c903: SonyEricssonC903,
    #[serde(rename = "sony-ericsson-ck13i")]
    pub sony_ericsson_ck13i: SonyEricssonCk13i,
    #[serde(rename = "sony-ericsson-ck15a")]
    pub sony_ericsson_ck15a: SonyEricssonCk15a,
    #[serde(rename = "sony-ericsson-ck15i")]
    pub sony_ericsson_ck15i: SonyEricssonCk15i,
    #[serde(rename = "sony-ericsson-e10a")]
    pub sony_ericsson_e10a: SonyEricssonE10a,
    #[serde(rename = "sony-ericsson-e10i")]
    pub sony_ericsson_e10i: SonyEricssonE10i,
    #[serde(rename = "sony-ericsson-e10iv")]
    pub sony_ericsson_e10iv: SonyEricssonE10iv,
    #[serde(rename = "sony-ericsson-e15a")]
    pub sony_ericsson_e15a: SonyEricssonE15a,
    #[serde(rename = "sony-ericsson-e15av")]
    pub sony_ericsson_e15av: SonyEricssonE15av,
    #[serde(rename = "sony-ericsson-e15i")]
    pub sony_ericsson_e15i: SonyEricssonE15i,
    #[serde(rename = "sony-ericsson-e15iv")]
    pub sony_ericsson_e15iv: SonyEricssonE15iv,
    #[serde(rename = "sony-ericsson-e16i")]
    pub sony_ericsson_e16i: SonyEricssonE16i,
    #[serde(rename = "sony-ericsson-e800")]
    pub sony_ericsson_e800: SonyEricssonE800,
    #[serde(rename = "sony-ericsson-f305")]
    pub sony_ericsson_f305: SonyEricssonF305,
    #[serde(rename = "sony-ericsson-g502")]
    pub sony_ericsson_g502: SonyEricssonG502,
    #[serde(rename = "sony-ericsson-g700")]
    pub sony_ericsson_g700: SonyEricssonG700,
    #[serde(rename = "sony-ericsson-g705")]
    pub sony_ericsson_g705: SonyEricssonG705,
    #[serde(rename = "sony-ericsson-g900")]
    pub sony_ericsson_g900: SonyEricssonG900,
    #[serde(rename = "sony-ericsson-is11s")]
    pub sony_ericsson_is11s: SonyEricssonIs11s,
    #[serde(rename = "sony-ericsson-is12s")]
    pub sony_ericsson_is12s: SonyEricssonIs12s,
    #[serde(rename = "sony-ericsson-j105i")]
    pub sony_ericsson_j105i: SonyEricssonJ105i,
    #[serde(rename = "sony-ericsson-j108a")]
    pub sony_ericsson_j108a: SonyEricssonJ108a,
    #[serde(rename = "sony-ericsson-j108i")]
    pub sony_ericsson_j108i: SonyEricssonJ108i,
    #[serde(rename = "sony-ericsson-j10i")]
    pub sony_ericsson_j10i: SonyEricssonJ10i,
    #[serde(rename = "sony-ericsson-j10i2")]
    pub sony_ericsson_j10i2: SonyEricssonJ10i2,
    #[serde(rename = "sony-ericsson-j20i")]
    pub sony_ericsson_j20i: SonyEricssonJ20i,
    #[serde(rename = "sony-ericsson-k300")]
    pub sony_ericsson_k300: SonyEricssonK300,
    #[serde(rename = "sony-ericsson-k310iv")]
    pub sony_ericsson_k310iv: SonyEricssonK310iv,
    #[serde(rename = "sony-ericsson-k320i")]
    pub sony_ericsson_k320i: SonyEricssonK320i,
    #[serde(rename = "sony-ericsson-k500i")]
    pub sony_ericsson_k500i: SonyEricssonK500i,
    #[serde(rename = "sony-ericsson-k510i")]
    pub sony_ericsson_k510i: SonyEricssonK510i,
    #[serde(rename = "sony-ericsson-k530i")]
    pub sony_ericsson_k530i: SonyEricssonK530i,
    #[serde(rename = "sony-ericsson-k550i")]
    pub sony_ericsson_k550i: SonyEricssonK550i,
    #[serde(rename = "sony-ericsson-k610i")]
    pub sony_ericsson_k610i: SonyEricssonK610i,
    #[serde(rename = "sony-ericsson-k630i")]
    pub sony_ericsson_k630i: SonyEricssonK630i,
    #[serde(rename = "sony-ericsson-k660i")]
    pub sony_ericsson_k660i: SonyEricssonK660i,
    #[serde(rename = "sony-ericsson-k700c")]
    pub sony_ericsson_k700c: SonyEricssonK700c,
    #[serde(rename = "sony-ericsson-k700i")]
    pub sony_ericsson_k700i: SonyEricssonK700i,
    #[serde(rename = "sony-ericsson-k750i")]
    pub sony_ericsson_k750i: SonyEricssonK750i,
    #[serde(rename = "sony-ericsson-k770i")]
    pub sony_ericsson_k770i: SonyEricssonK770i,
    #[serde(rename = "sony-ericsson-k800")]
    pub sony_ericsson_k800: SonyEricssonK800,
    #[serde(rename = "sony-ericsson-k800a")]
    pub sony_ericsson_k800a: SonyEricssonK800a,
    #[serde(rename = "sony-ericsson-k800c")]
    pub sony_ericsson_k800c: SonyEricssonK800c,
    #[serde(rename = "sony-ericsson-k800i")]
    pub sony_ericsson_k800i: SonyEricssonK800i,
    #[serde(rename = "sony-ericsson-k800iv")]
    pub sony_ericsson_k800iv: SonyEricssonK800iv,
    #[serde(rename = "sony-ericsson-k810i")]
    pub sony_ericsson_k810i: SonyEricssonK810i,
    #[serde(rename = "sony-ericsson-k818c")]
    pub sony_ericsson_k818c: SonyEricssonK818c,
    #[serde(rename = "sony-ericsson-k850i")]
    pub sony_ericsson_k850i: SonyEricssonK850i,
    #[serde(rename = "sony-ericsson-k858c")]
    pub sony_ericsson_k858c: SonyEricssonK858c,
    #[serde(rename = "sony-ericsson-lt15a")]
    pub sony_ericsson_lt15a: SonyEricssonLt15a,
    #[serde(rename = "sony-ericsson-lt15i")]
    pub sony_ericsson_lt15i: SonyEricssonLt15i,
    #[serde(rename = "sony-ericsson-lt15iv")]
    pub sony_ericsson_lt15iv: SonyEricssonLt15iv,
    #[serde(rename = "sony-ericsson-lt18")]
    pub sony_ericsson_lt18: SonyEricssonLt18,
    #[serde(rename = "sony-ericsson-lt18a")]
    pub sony_ericsson_lt18a: SonyEricssonLt18a,
    #[serde(rename = "sony-ericsson-lt18i")]
    pub sony_ericsson_lt18i: SonyEricssonLt18i,
    #[serde(rename = "sony-ericsson-lt18iv")]
    pub sony_ericsson_lt18iv: SonyEricssonLt18iv,
    #[serde(rename = "sony-ericsson-lt22i")]
    pub sony_ericsson_lt22i: SonyEricssonLt22i,
    #[serde(rename = "sony-ericsson-lt26i")]
    pub sony_ericsson_lt26i: SonyEricssonLt26i,
    #[serde(rename = "sony-ericsson-lt26ii")]
    pub sony_ericsson_lt26ii: SonyEricssonLt26ii,
    #[serde(rename = "sony-ericsson-lt26w")]
    pub sony_ericsson_lt26w: SonyEricssonLt26w,
    #[serde(rename = "sony-ericsson-lt28at")]
    pub sony_ericsson_lt28at: SonyEricssonLt28at,
    #[serde(rename = "sony-ericsson-lt28h")]
    pub sony_ericsson_lt28h: SonyEricssonLt28h,
    #[serde(rename = "sony-ericsson-lt28i")]
    pub sony_ericsson_lt28i: SonyEricssonLt28i,
    #[serde(rename = "sony-ericsson-m1i")]
    pub sony_ericsson_m1i: SonyEricssonM1i,
    #[serde(rename = "sony-ericsson-mk16a")]
    pub sony_ericsson_mk16a: SonyEricssonMk16a,
    #[serde(rename = "sony-ericsson-mk16i")]
    pub sony_ericsson_mk16i: SonyEricssonMk16i,
    #[serde(rename = "sony-ericsson-mt11a")]
    pub sony_ericsson_mt11a: SonyEricssonMt11a,
    #[serde(rename = "sony-ericsson-mt11i")]
    pub sony_ericsson_mt11i: SonyEricssonMt11i,
    #[serde(rename = "sony-ericsson-mt11iv")]
    pub sony_ericsson_mt11iv: SonyEricssonMt11iv,
    #[serde(rename = "sony-ericsson-mt15a")]
    pub sony_ericsson_mt15a: SonyEricssonMt15a,
    #[serde(rename = "sony-ericsson-mt15i")]
    pub sony_ericsson_mt15i: SonyEricssonMt15i,
    #[serde(rename = "sony-ericsson-mt15iv")]
    pub sony_ericsson_mt15iv: SonyEricssonMt15iv,
    #[serde(rename = "sony-ericsson-mt25i")]
    pub sony_ericsson_mt25i: SonyEricssonMt25i,
    #[serde(rename = "sony-ericsson-mt27i")]
    pub sony_ericsson_mt27i: SonyEricssonMt27i,
    #[serde(rename = "sony-ericsson-p100")]
    pub sony_ericsson_p100: SonyEricssonP100,
    #[serde(rename = "sony-ericsson-p1000i")]
    pub sony_ericsson_p1000i: SonyEricssonP1000i,
    #[serde(rename = "sony-ericsson-p1i")]
    pub sony_ericsson_p1i: SonyEricssonP1i,
    #[serde(rename = "sony-ericsson-p990i")]
    pub sony_ericsson_p990i: SonyEricssonP990i,
    #[serde(rename = "sony-ericsson-r800a")]
    pub sony_ericsson_r800a: SonyEricssonR800a,
    #[serde(rename = "sony-ericsson-r800at")]
    pub sony_ericsson_r800at: SonyEricssonR800at,
    #[serde(rename = "sony-ericsson-r800i")]
    pub sony_ericsson_r800i: SonyEricssonR800i,
    #[serde(rename = "sony-ericsson-r800x")]
    pub sony_ericsson_r800x: SonyEricssonR800x,
    #[serde(rename = "sony-ericsson-r800xhttp")]
    pub sony_ericsson_r800xhttp: SonyEricssonR800xhttp,
    #[serde(rename = "sony-ericsson-s312")]
    pub sony_ericsson_s312: SonyEricssonS312,
    #[serde(rename = "sony-ericsson-s500i")]
    pub sony_ericsson_s500i: SonyEricssonS500i,
    #[serde(rename = "sony-ericsson-s6")]
    pub sony_ericsson_s6: SonyEricssonS6,
    #[serde(rename = "sony-ericsson-s700i")]
    pub sony_ericsson_s700i: SonyEricssonS700i,
    #[serde(rename = "sony-ericsson-sk17a")]
    pub sony_ericsson_sk17a: SonyEricssonSk17a,
    #[serde(rename = "sony-ericsson-sk17i")]
    pub sony_ericsson_sk17i: SonyEricssonSk17i,
    #[serde(rename = "sony-ericsson-sk17iv")]
    pub sony_ericsson_sk17iv: SonyEricssonSk17iv,
    #[serde(rename = "sony-ericsson-so")]
    pub sony_ericsson_so: SonyEricssonSo,
    #[serde(rename = "sony-ericsson-st15a")]
    pub sony_ericsson_st15a: SonyEricssonSt15a,
    #[serde(rename = "sony-ericsson-st15i")]
    pub sony_ericsson_st15i: SonyEricssonSt15i,
    #[serde(rename = "sony-ericsson-st17a")]
    pub sony_ericsson_st17a: SonyEricssonSt17a,
    #[serde(rename = "sony-ericsson-st17i")]
    pub sony_ericsson_st17i: SonyEricssonSt17i,
    #[serde(rename = "sony-ericsson-st18a")]
    pub sony_ericsson_st18a: SonyEricssonSt18a,
    #[serde(rename = "sony-ericsson-st18av")]
    pub sony_ericsson_st18av: SonyEricssonSt18av,
    #[serde(rename = "sony-ericsson-st18i")]
    pub sony_ericsson_st18i: SonyEricssonSt18i,
    #[serde(rename = "sony-ericsson-st18iv")]
    pub sony_ericsson_st18iv: SonyEricssonSt18iv,
    #[serde(rename = "sony-ericsson-st25a")]
    pub sony_ericsson_st25a: SonyEricssonSt25a,
    #[serde(rename = "sony-ericsson-st25i")]
    pub sony_ericsson_st25i: SonyEricssonSt25i,
    #[serde(rename = "sony-ericsson-st25iv")]
    pub sony_ericsson_st25iv: SonyEricssonSt25iv,
    #[serde(rename = "sony-ericsson-st27a")]
    pub sony_ericsson_st27a: SonyEricssonSt27a,
    #[serde(rename = "sony-ericsson-st27i")]
    pub sony_ericsson_st27i: SonyEricssonSt27i,
    #[serde(rename = "sony-ericsson-st27iv")]
    pub sony_ericsson_st27iv: SonyEricssonSt27iv,
    #[serde(rename = "sony-ericsson-t100")]
    pub sony_ericsson_t100: SonyEricssonT100,
    #[serde(rename = "sony-ericsson-t200")]
    pub sony_ericsson_t200: SonyEricssonT200,
    #[serde(rename = "sony-ericsson-t280i")]
    pub sony_ericsson_t280i: SonyEricssonT280i,
    #[serde(rename = "sony-ericsson-t700")]
    pub sony_ericsson_t700: SonyEricssonT700,
    #[serde(rename = "sony-ericsson-t707")]
    pub sony_ericsson_t707: SonyEricssonT707,
    #[serde(rename = "sony-ericsson-t715")]
    pub sony_ericsson_t715: SonyEricssonT715,
    #[serde(rename = "sony-ericsson-t715a")]
    pub sony_ericsson_t715a: SonyEricssonT715a,
    #[serde(rename = "sony-ericsson-tm717")]
    pub sony_ericsson_tm717: SonyEricssonTm717,
    #[serde(rename = "sony-ericsson-u10i")]
    pub sony_ericsson_u10i: SonyEricssonU10i,
    #[serde(rename = "sony-ericsson-u1a")]
    pub sony_ericsson_u1a: SonyEricssonU1a,
    #[serde(rename = "sony-ericsson-u1i")]
    pub sony_ericsson_u1i: SonyEricssonU1i,
    #[serde(rename = "sony-ericsson-u1iv")]
    pub sony_ericsson_u1iv: SonyEricssonU1iv,
    #[serde(rename = "sony-ericsson-u20a")]
    pub sony_ericsson_u20a: SonyEricssonU20a,
    #[serde(rename = "sony-ericsson-u20i")]
    pub sony_ericsson_u20i: SonyEricssonU20i,
    #[serde(rename = "sony-ericsson-u20iv")]
    pub sony_ericsson_u20iv: SonyEricssonU20iv,
    #[serde(rename = "sony-ericsson-u5")]
    pub sony_ericsson_u5: SonyEricssonU5,
    #[serde(rename = "sony-ericsson-u5a")]
    pub sony_ericsson_u5a: SonyEricssonU5a,
    #[serde(rename = "sony-ericsson-u5i")]
    pub sony_ericsson_u5i: SonyEricssonU5i,
    #[serde(rename = "sony-ericsson-u8i")]
    pub sony_ericsson_u8i: SonyEricssonU8i,
    #[serde(rename = "sony-ericsson-v600i")]
    pub sony_ericsson_v600i: SonyEricssonV600i,
    #[serde(rename = "sony-ericsson-w100i")]
    pub sony_ericsson_w100i: SonyEricssonW100i,
    #[serde(rename = "sony-ericsson-w150a")]
    pub sony_ericsson_w150a: SonyEricssonW150a,
    #[serde(rename = "sony-ericsson-w150i")]
    pub sony_ericsson_w150i: SonyEricssonW150i,
    #[serde(rename = "sony-ericsson-w20")]
    pub sony_ericsson_w20: SonyEricssonW20,
    #[serde(rename = "sony-ericsson-w200a")]
    pub sony_ericsson_w200a: SonyEricssonW200a,
    #[serde(rename = "sony-ericsson-w200i")]
    pub sony_ericsson_w200i: SonyEricssonW200i,
    #[serde(rename = "sony-ericsson-w205")]
    pub sony_ericsson_w205: SonyEricssonW205,
    #[serde(rename = "sony-ericsson-w20i")]
    pub sony_ericsson_w20i: SonyEricssonW20i,
    #[serde(rename = "sony-ericsson-w300i")]
    pub sony_ericsson_w300i: SonyEricssonW300i,
    #[serde(rename = "sony-ericsson-w302")]
    pub sony_ericsson_w302: SonyEricssonW302,
    #[serde(rename = "sony-ericsson-w350i")]
    pub sony_ericsson_w350i: SonyEricssonW350i,
    #[serde(rename = "sony-ericsson-w395")]
    pub sony_ericsson_w395: SonyEricssonW395,
    #[serde(rename = "sony-ericsson-w518a")]
    pub sony_ericsson_w518a: SonyEricssonW518a,
    #[serde(rename = "sony-ericsson-w580i")]
    pub sony_ericsson_w580i: SonyEricssonW580i,
    #[serde(rename = "sony-ericsson-w595")]
    pub sony_ericsson_w595: SonyEricssonW595,
    #[serde(rename = "sony-ericsson-w610i")]
    pub sony_ericsson_w610i: SonyEricssonW610i,
    #[serde(rename = "sony-ericsson-w660i")]
    pub sony_ericsson_w660i: SonyEricssonW660i,
    #[serde(rename = "sony-ericsson-w700c")]
    pub sony_ericsson_w700c: SonyEricssonW700c,
    #[serde(rename = "sony-ericsson-w705")]
    pub sony_ericsson_w705: SonyEricssonW705,
    #[serde(rename = "sony-ericsson-w750i")]
    pub sony_ericsson_w750i: SonyEricssonW750i,
    #[serde(rename = "sony-ericsson-w800c")]
    pub sony_ericsson_w800c: SonyEricssonW800c,
    #[serde(rename = "sony-ericsson-w800i")]
    pub sony_ericsson_w800i: SonyEricssonW800i,
    #[serde(rename = "sony-ericsson-w810i")]
    pub sony_ericsson_w810i: SonyEricssonW810i,
    #[serde(rename = "sony-ericsson-w840i")]
    pub sony_ericsson_w840i: SonyEricssonW840i,
    #[serde(rename = "sony-ericsson-w850i")]
    pub sony_ericsson_w850i: SonyEricssonW850i,
    #[serde(rename = "sony-ericsson-w880i")]
    pub sony_ericsson_w880i: SonyEricssonW880i,
    #[serde(rename = "sony-ericsson-w890i")]
    pub sony_ericsson_w890i: SonyEricssonW890i,
    #[serde(rename = "sony-ericsson-w902")]
    pub sony_ericsson_w902: SonyEricssonW902,
    #[serde(rename = "sony-ericsson-w910i")]
    pub sony_ericsson_w910i: SonyEricssonW910i,
    #[serde(rename = "sony-ericsson-w950i")]
    pub sony_ericsson_w950i: SonyEricssonW950i,
    #[serde(rename = "sony-ericsson-w960i")]
    pub sony_ericsson_w960i: SonyEricssonW960i,
    #[serde(rename = "sony-ericsson-w980i")]
    pub sony_ericsson_w980i: SonyEricssonW980i,
    #[serde(rename = "sony-ericsson-w995")]
    pub sony_ericsson_w995: SonyEricssonW995,
    #[serde(rename = "sony-ericsson-w995a")]
    pub sony_ericsson_w995a: SonyEricssonW995a,
    #[serde(rename = "sony-ericsson-wt13i")]
    pub sony_ericsson_wt13i: SonyEricssonWt13i,
    #[serde(rename = "sony-ericsson-wt19a")]
    pub sony_ericsson_wt19a: SonyEricssonWt19a,
    #[serde(rename = "sony-ericsson-wt19i")]
    pub sony_ericsson_wt19i: SonyEricssonWt19i,
    #[serde(rename = "sony-ericsson-x10a")]
    pub sony_ericsson_x10a: SonyEricssonX10a,
    #[serde(rename = "sony-ericsson-x10i")]
    pub sony_ericsson_x10i: SonyEricssonX10i,
    #[serde(rename = "sony-ericsson-x10iv")]
    pub sony_ericsson_x10iv: SonyEricssonX10iv,
    #[serde(rename = "sony-ericsson-x1i")]
    pub sony_ericsson_x1i: SonyEricssonX1i,
    #[serde(rename = "sony-ericsson-x2")]
    pub sony_ericsson_x2: SonyEricssonX2,
    #[serde(rename = "sony-ericsson-xperia")]
    pub sony_ericsson_xperia: SonyEricssonXperia,
    #[serde(rename = "sony-ericsson-z310a")]
    pub sony_ericsson_z310a: SonyEricssonZ310a,
    #[serde(rename = "sony-ericsson-z530i")]
    pub sony_ericsson_z530i: SonyEricssonZ530i,
    #[serde(rename = "sony-ericsson-z780i")]
    pub sony_ericsson_z780i: SonyEricssonZ780i,
    #[serde(rename = "sony-ericsson-z800")]
    pub sony_ericsson_z800: SonyEricssonZ800,
    #[serde(rename = "sony-ericsson")]
    pub sony_ericsson: SonyEricsson,
    #[serde(rename = "sony-kdl-22ex553-digital-tv")]
    pub sony_kdl_22ex553_digital_tv: SonyKdl22ex553DigitalTv,
    #[serde(rename = "sony-kdl-24ex320-digital-tv")]
    pub sony_kdl_24ex320_digital_tv: SonyKdl24ex320DigitalTv,
    #[serde(rename = "sony-kdl-24w600a-digital-tv")]
    pub sony_kdl_24w600a_digital_tv: SonyKdl24w600aDigitalTv,
    #[serde(rename = "sony-kdl-24w605a-digital-tv")]
    pub sony_kdl_24w605a_digital_tv: SonyKdl24w605aDigitalTv,
    #[serde(rename = "sony-kdl-26ex550-digital-tv")]
    pub sony_kdl_26ex550_digital_tv: SonyKdl26ex550DigitalTv,
    #[serde(rename = "sony-kdl-32cx520-digital-tv")]
    pub sony_kdl_32cx520_digital_tv: SonyKdl32cx520DigitalTv,
    #[serde(rename = "sony-kdl-32cx523-digital-tv")]
    pub sony_kdl_32cx523_digital_tv: SonyKdl32cx523DigitalTv,
    #[serde(rename = "sony-kdl-32cx525-digital-tv")]
    pub sony_kdl_32cx525_digital_tv: SonyKdl32cx525DigitalTv,
    #[serde(rename = "sony-kdl-32ex425-digital-tv")]
    pub sony_kdl_32ex425_digital_tv: SonyKdl32ex425DigitalTv,
    #[serde(rename = "sony-kdl-32ex520-digital-tv")]
    pub sony_kdl_32ex520_digital_tv: SonyKdl32ex520DigitalTv,
    #[serde(rename = "sony-kdl-32ex525-digital-tv")]
    pub sony_kdl_32ex525_digital_tv: SonyKdl32ex525DigitalTv,
    #[serde(rename = "sony-kdl-32ex550-digital-tv")]
    pub sony_kdl_32ex550_digital_tv: SonyKdl32ex550DigitalTv,
    #[serde(rename = "sony-kdl-32ex557-digital-tv")]
    pub sony_kdl_32ex557_digital_tv: SonyKdl32ex557DigitalTv,
    #[serde(rename = "sony-kdl-32ex650-digital-tv")]
    pub sony_kdl_32ex650_digital_tv: SonyKdl32ex650DigitalTv,
    #[serde(rename = "sony-kdl-32ex653-digital-tv")]
    pub sony_kdl_32ex653_digital_tv: SonyKdl32ex653DigitalTv,
    #[serde(rename = "sony-kdl-32ex655-digital-tv")]
    pub sony_kdl_32ex655_digital_tv: SonyKdl32ex655DigitalTv,
    #[serde(rename = "sony-kdl-32ex720-digital-tv")]
    pub sony_kdl_32ex720_digital_tv: SonyKdl32ex720DigitalTv,
    #[serde(rename = "sony-kdl-32ex721-digital-tv")]
    pub sony_kdl_32ex721_digital_tv: SonyKdl32ex721DigitalTv,
    #[serde(rename = "sony-kdl-32hx750-digital-tv")]
    pub sony_kdl_32hx750_digital_tv: SonyKdl32hx750DigitalTv,
    #[serde(rename = "sony-kdl-32hx757-digital-tv")]
    pub sony_kdl_32hx757_digital_tv: SonyKdl32hx757DigitalTv,
    #[serde(rename = "sony-kdl-32j1-digital-tv")]
    pub sony_kdl_32j1_digital_tv: SonyKdl32j1DigitalTv,
    #[serde(rename = "sony-kdl-32w600a-digital-tv")]
    pub sony_kdl_32w600a_digital_tv: SonyKdl32w600aDigitalTv,
    #[serde(rename = "sony-kdl-32w650a-digital-tv")]
    pub sony_kdl_32w650a_digital_tv: SonyKdl32w650aDigitalTv,
    #[serde(rename = "sony-kdl-32w651a-digital-tv")]
    pub sony_kdl_32w651a_digital_tv: SonyKdl32w651aDigitalTv,
    #[serde(rename = "sony-kdl-32w653a-digital-tv")]
    pub sony_kdl_32w653a_digital_tv: SonyKdl32w653aDigitalTv,
    #[serde(rename = "sony-kdl-32w654a-digital-tv")]
    pub sony_kdl_32w654a_digital_tv: SonyKdl32w654aDigitalTv,
    #[serde(rename = "sony-kdl-32w655a-digital-tv")]
    pub sony_kdl_32w655a_digital_tv: SonyKdl32w655aDigitalTv,
    #[serde(rename = "sony-kdl-32w670a-digital-tv")]
    pub sony_kdl_32w670a_digital_tv: SonyKdl32w670aDigitalTv,
    #[serde(rename = "sony-kdl-32w700b-digital-tv")]
    pub sony_kdl_32w700b_digital_tv: SonyKdl32w700bDigitalTv,
    #[serde(rename = "sony-kdl-32w700c-digital-tv")]
    pub sony_kdl_32w700c_digital_tv: SonyKdl32w700cDigitalTv,
    #[serde(rename = "sony-kdl-32w705b-digital-tv")]
    pub sony_kdl_32w705b_digital_tv: SonyKdl32w705bDigitalTv,
    #[serde(rename = "sony-kdl-32w705c-digital-tv")]
    pub sony_kdl_32w705c_digital_tv: SonyKdl32w705cDigitalTv,
    #[serde(rename = "sony-kdl-32w706b-digital-tv")]
    pub sony_kdl_32w706b_digital_tv: SonyKdl32w706bDigitalTv,
    #[serde(rename = "sony-kdl-37ex720-digital-tv")]
    pub sony_kdl_37ex720_digital_tv: SonyKdl37ex720DigitalTv,
    #[serde(rename = "sony-kdl-37ex725-digital-tv")]
    pub sony_kdl_37ex725_digital_tv: SonyKdl37ex725DigitalTv,
    #[serde(rename = "sony-kdl-40cx520-digital-tv")]
    pub sony_kdl_40cx520_digital_tv: SonyKdl40cx520DigitalTv,
    #[serde(rename = "sony-kdl-40ex520-digital-tv")]
    pub sony_kdl_40ex520_digital_tv: SonyKdl40ex520DigitalTv,
    #[serde(rename = "sony-kdl-40ex521-digital-tv")]
    pub sony_kdl_40ex521_digital_tv: SonyKdl40ex521DigitalTv,
    #[serde(rename = "sony-kdl-40ex525-digital-tv")]
    pub sony_kdl_40ex525_digital_tv: SonyKdl40ex525DigitalTv,
    #[serde(rename = "sony-kdl-40ex640-digital-tv")]
    pub sony_kdl_40ex640_digital_tv: SonyKdl40ex640DigitalTv,
    #[serde(rename = "sony-kdl-40ex650-digital-tv")]
    pub sony_kdl_40ex650_digital_tv: SonyKdl40ex650DigitalTv,
    #[serde(rename = "sony-kdl-40ex720-digital-tv")]
    pub sony_kdl_40ex720_digital_tv: SonyKdl40ex720DigitalTv,
    #[serde(rename = "sony-kdl-40ex723-digital-tv")]
    pub sony_kdl_40ex723_digital_tv: SonyKdl40ex723DigitalTv,
    #[serde(rename = "sony-kdl-40ex725-digital-tv")]
    pub sony_kdl_40ex725_digital_tv: SonyKdl40ex725DigitalTv,
    #[serde(rename = "sony-kdl-40nx650-digital-tv")]
    pub sony_kdl_40nx650_digital_tv: SonyKdl40nx650DigitalTv,
    #[serde(rename = "sony-kdl-40nx720-digital-tv")]
    pub sony_kdl_40nx720_digital_tv: SonyKdl40nx720DigitalTv,
    #[serde(rename = "sony-kdl-40nx727-digital-tv")]
    pub sony_kdl_40nx727_digital_tv: SonyKdl40nx727DigitalTv,
    #[serde(rename = "sony-kdl-40w590b-digital-tv")]
    pub sony_kdl_40w590b_digital_tv: SonyKdl40w590bDigitalTv,
    #[serde(rename = "sony-kdl-40w600b-digital-tv")]
    pub sony_kdl_40w600b_digital_tv: SonyKdl40w600bDigitalTv,
    #[serde(rename = "sony-kdl-40w605b-digital-tv")]
    pub sony_kdl_40w605b_digital_tv: SonyKdl40w605bDigitalTv,
    #[serde(rename = "sony-kdl-40w700c-digital-tv")]
    pub sony_kdl_40w700c_digital_tv: SonyKdl40w700cDigitalTv,
    #[serde(rename = "sony-kdl-40w705c-digital-tv")]
    pub sony_kdl_40w705c_digital_tv: SonyKdl40w705cDigitalTv,
    #[serde(rename = "sony-kdl-42w650a-digital-tv")]
    pub sony_kdl_42w650a_digital_tv: SonyKdl42w650aDigitalTv,
    #[serde(rename = "sony-kdl-42w653a-digital-tv")]
    pub sony_kdl_42w653a_digital_tv: SonyKdl42w653aDigitalTv,
    #[serde(rename = "sony-kdl-42w654a-digital-tv")]
    pub sony_kdl_42w654a_digital_tv: SonyKdl42w654aDigitalTv,
    #[serde(rename = "sony-kdl-42w655a-digital-tv")]
    pub sony_kdl_42w655a_digital_tv: SonyKdl42w655aDigitalTv,
    #[serde(rename = "sony-kdl-42w670a-digital-tv")]
    pub sony_kdl_42w670a_digital_tv: SonyKdl42w670aDigitalTv,
    #[serde(rename = "sony-kdl-42w674a-digital-tv")]
    pub sony_kdl_42w674a_digital_tv: SonyKdl42w674aDigitalTv,
    #[serde(rename = "sony-kdl-42w700b-digital-tv")]
    pub sony_kdl_42w700b_digital_tv: SonyKdl42w700bDigitalTv,
    #[serde(rename = "sony-kdl-42w705b-digital-tv")]
    pub sony_kdl_42w705b_digital_tv: SonyKdl42w705bDigitalTv,
    #[serde(rename = "sony-kdl-42w706b-digital-tv")]
    pub sony_kdl_42w706b_digital_tv: SonyKdl42w706bDigitalTv,
    #[serde(rename = "sony-kdl-42w800a-digital-tv")]
    pub sony_kdl_42w800a_digital_tv: SonyKdl42w800aDigitalTv,
    #[serde(rename = "sony-kdl-42w800b-digital-tv")]
    pub sony_kdl_42w800b_digital_tv: SonyKdl42w800bDigitalTv,
    #[serde(rename = "sony-kdl-42w804a-digital-tv")]
    pub sony_kdl_42w804a_digital_tv: SonyKdl42w804aDigitalTv,
    #[serde(rename = "sony-kdl-42w805a-digital-tv")]
    pub sony_kdl_42w805a_digital_tv: SonyKdl42w805aDigitalTv,
    #[serde(rename = "sony-kdl-42w805b-digital-tv")]
    pub sony_kdl_42w805b_digital_tv: SonyKdl42w805bDigitalTv,
    #[serde(rename = "sony-kdl-42w807a-digital-tv")]
    pub sony_kdl_42w807a_digital_tv: SonyKdl42w807aDigitalTv,
    #[serde(rename = "sony-kdl-42w809a-digital-tv")]
    pub sony_kdl_42w809a_digital_tv: SonyKdl42w809aDigitalTv,
    #[serde(rename = "sony-kdl-42w815b-digital-tv")]
    pub sony_kdl_42w815b_digital_tv: SonyKdl42w815bDigitalTv,
    #[serde(rename = "sony-kdl-42w828b-digital-tv")]
    pub sony_kdl_42w828b_digital_tv: SonyKdl42w828bDigitalTv,
    #[serde(rename = "sony-kdl-42w829b-digital-tv")]
    pub sony_kdl_42w829b_digital_tv: SonyKdl42w829bDigitalTv,
    #[serde(rename = "sony-kdl-42w900b-digital-tv")]
    pub sony_kdl_42w900b_digital_tv: SonyKdl42w900bDigitalTv,
    #[serde(rename = "sony-kdl-43w780c-digital-tv")]
    pub sony_kdl_43w780c_digital_tv: SonyKdl43w780cDigitalTv,
    #[serde(rename = "sony-kdl-46ex520-digital-tv")]
    pub sony_kdl_46ex520_digital_tv: SonyKdl46ex520DigitalTv,
    #[serde(rename = "sony-kdl-46ex621-digital-tv")]
    pub sony_kdl_46ex621_digital_tv: SonyKdl46ex621DigitalTv,
    #[serde(rename = "sony-kdl-46ex645-digital-tv")]
    pub sony_kdl_46ex645_digital_tv: SonyKdl46ex645DigitalTv,
    #[serde(rename = "sony-kdl-46ex650-digital-tv")]
    pub sony_kdl_46ex650_digital_tv: SonyKdl46ex650DigitalTv,
    #[serde(rename = "sony-kdl-46ex720-digital-tv")]
    pub sony_kdl_46ex720_digital_tv: SonyKdl46ex720DigitalTv,
    #[serde(rename = "sony-kdl-46hx729-digital-tv")]
    pub sony_kdl_46hx729_digital_tv: SonyKdl46hx729DigitalTv,
    #[serde(rename = "sony-kdl-46hx750-digital-tv")]
    pub sony_kdl_46hx750_digital_tv: SonyKdl46hx750DigitalTv,
    #[serde(rename = "sony-kdl-46hx820-digital-tv")]
    pub sony_kdl_46hx820_digital_tv: SonyKdl46hx820DigitalTv,
    #[serde(rename = "sony-kdl-46hx850-digital-tv")]
    pub sony_kdl_46hx850_digital_tv: SonyKdl46hx850DigitalTv,
    #[serde(rename = "sony-kdl-46hx855-digital-tv")]
    pub sony_kdl_46hx855_digital_tv: SonyKdl46hx855DigitalTv,
    #[serde(rename = "sony-kdl-46nx720-digital-tv")]
    pub sony_kdl_46nx720_digital_tv: SonyKdl46nx720DigitalTv,
    #[serde(rename = "sony-kdl-46w700a-digital-tv")]
    pub sony_kdl_46w700a_digital_tv: SonyKdl46w700aDigitalTv,
    #[serde(rename = "sony-kdl-46w704a-digital-tv")]
    pub sony_kdl_46w704a_digital_tv: SonyKdl46w704aDigitalTv,
    #[serde(rename = "sony-kdl-46w705a-digital-tv")]
    pub sony_kdl_46w705a_digital_tv: SonyKdl46w705aDigitalTv,
    #[serde(rename = "sony-kdl-46w900a-digital-tv")]
    pub sony_kdl_46w900a_digital_tv: SonyKdl46w900aDigitalTv,
    #[serde(rename = "sony-kdl-46w904a-digital-tv")]
    pub sony_kdl_46w904a_digital_tv: SonyKdl46w904aDigitalTv,
    #[serde(rename = "sony-kdl-46w905a-digital-tv")]
    pub sony_kdl_46w905a_digital_tv: SonyKdl46w905aDigitalTv,
    #[serde(rename = "sony-kdl-46w954a-digital-tv")]
    pub sony_kdl_46w954a_digital_tv: SonyKdl46w954aDigitalTv,
    #[serde(rename = "sony-kdl-46w955a-digital-tv")]
    pub sony_kdl_46w955a_digital_tv: SonyKdl46w955aDigitalTv,
    #[serde(rename = "sony-kdl-47w800a-digital-tv")]
    pub sony_kdl_47w800a_digital_tv: SonyKdl47w800aDigitalTv,
    #[serde(rename = "sony-kdl-47w802a-digital-tv")]
    pub sony_kdl_47w802a_digital_tv: SonyKdl47w802aDigitalTv,
    #[serde(rename = "sony-kdl-47w804a-digital-tv")]
    pub sony_kdl_47w804a_digital_tv: SonyKdl47w804aDigitalTv,
    #[serde(rename = "sony-kdl-47w805a-digital-tv")]
    pub sony_kdl_47w805a_digital_tv: SonyKdl47w805aDigitalTv,
    #[serde(rename = "sony-kdl-47w850a-digital-tv")]
    pub sony_kdl_47w850a_digital_tv: SonyKdl47w850aDigitalTv,
    #[serde(rename = "sony-kdl-48w585b-digital-tv")]
    pub sony_kdl_48w585b_digital_tv: SonyKdl48w585bDigitalTv,
    #[serde(rename = "sony-kdl-48w600b-digital-tv")]
    pub sony_kdl_48w600b_digital_tv: SonyKdl48w600bDigitalTv,
    #[serde(rename = "sony-kdl-48w605b-digital-tv")]
    pub sony_kdl_48w605b_digital_tv: SonyKdl48w605bDigitalTv,
    #[serde(rename = "sony-kdl-48w607b-digital-tv")]
    pub sony_kdl_48w607b_digital_tv: SonyKdl48w607bDigitalTv,
    #[serde(rename = "sony-kdl-48w609b-digital-tv")]
    pub sony_kdl_48w609b_digital_tv: SonyKdl48w609bDigitalTv,
    #[serde(rename = "sony-kdl-48w700c-digital-tv")]
    pub sony_kdl_48w700c_digital_tv: SonyKdl48w700cDigitalTv,
    #[serde(rename = "sony-kdl-48w705c-digital-tv")]
    pub sony_kdl_48w705c_digital_tv: SonyKdl48w705cDigitalTv,
    #[serde(rename = "sony-kdl-50ex645-digital-tv")]
    pub sony_kdl_50ex645_digital_tv: SonyKdl50ex645DigitalTv,
    #[serde(rename = "sony-kdl-50r550a-digital-tv")]
    pub sony_kdl_50r550a_digital_tv: SonyKdl50r550aDigitalTv,
    #[serde(rename = "sony-kdl-50w650a-digital-tv")]
    pub sony_kdl_50w650a_digital_tv: SonyKdl50w650aDigitalTv,
    #[serde(rename = "sony-kdl-50w656a-digital-tv")]
    pub sony_kdl_50w656a_digital_tv: SonyKdl50w656aDigitalTv,
    #[serde(rename = "sony-kdl-50w685a-digital-tv")]
    pub sony_kdl_50w685a_digital_tv: SonyKdl50w685aDigitalTv,
    #[serde(rename = "sony-kdl-50w700a-digital-tv")]
    pub sony_kdl_50w700a_digital_tv: SonyKdl50w700aDigitalTv,
    #[serde(rename = "sony-kdl-50w700b-digital-tv")]
    pub sony_kdl_50w700b_digital_tv: SonyKdl50w700bDigitalTv,
    #[serde(rename = "sony-kdl-50w704a-digital-tv")]
    pub sony_kdl_50w704a_digital_tv: SonyKdl50w704aDigitalTv,
    #[serde(rename = "sony-kdl-50w705b-digital-tv")]
    pub sony_kdl_50w705b_digital_tv: SonyKdl50w705bDigitalTv,
    #[serde(rename = "sony-kdl-50w790b-digital-tv")]
    pub sony_kdl_50w790b_digital_tv: SonyKdl50w790bDigitalTv,
    #[serde(rename = "sony-kdl-50w800b-digital-tv")]
    pub sony_kdl_50w800b_digital_tv: SonyKdl50w800bDigitalTv,
    #[serde(rename = "sony-kdl-50w805b-digital-tv")]
    pub sony_kdl_50w805b_digital_tv: SonyKdl50w805bDigitalTv,
    #[serde(rename = "sony-kdl-50w807b-digital-tv")]
    pub sony_kdl_50w807b_digital_tv: SonyKdl50w807bDigitalTv,
    #[serde(rename = "sony-kdl-50w815b-digital-tv")]
    pub sony_kdl_50w815b_digital_tv: SonyKdl50w815bDigitalTv,
    #[serde(rename = "sony-kdl-50w828b-digital-tv")]
    pub sony_kdl_50w828b_digital_tv: SonyKdl50w828bDigitalTv,
    #[serde(rename = "sony-kdl-50w829b-digital-tv")]
    pub sony_kdl_50w829b_digital_tv: SonyKdl50w829bDigitalTv,
    #[serde(rename = "sony-kdl-50w900b-digital-tv")]
    pub sony_kdl_50w900b_digital_tv: SonyKdl50w900bDigitalTv,
    #[serde(rename = "sony-kdl-55ex640-digital-tv")]
    pub sony_kdl_55ex640_digital_tv: SonyKdl55ex640DigitalTv,
    #[serde(rename = "sony-kdl-55ex720-digital-tv")]
    pub sony_kdl_55ex720_digital_tv: SonyKdl55ex720DigitalTv,
    #[serde(rename = "sony-kdl-55hx729-digital-tv")]
    pub sony_kdl_55hx729_digital_tv: SonyKdl55hx729DigitalTv,
    #[serde(rename = "sony-kdl-55hx750-digital-tv")]
    pub sony_kdl_55hx750_digital_tv: SonyKdl55hx750DigitalTv,
    #[serde(rename = "sony-kdl-55hx753-digital-tv")]
    pub sony_kdl_55hx753_digital_tv: SonyKdl55hx753DigitalTv,
    #[serde(rename = "sony-kdl-55hx850-digital-tv")]
    pub sony_kdl_55hx850_digital_tv: SonyKdl55hx850DigitalTv,
    #[serde(rename = "sony-kdl-55hx950-digital-tv")]
    pub sony_kdl_55hx950_digital_tv: SonyKdl55hx950DigitalTv,
    #[serde(rename = "sony-kdl-55w700b-digital-tv")]
    pub sony_kdl_55w700b_digital_tv: SonyKdl55w700bDigitalTv,
    #[serde(rename = "sony-kdl-55w790b-digital-tv")]
    pub sony_kdl_55w790b_digital_tv: SonyKdl55w790bDigitalTv,
    #[serde(rename = "sony-kdl-55w800a-digital-tv")]
    pub sony_kdl_55w800a_digital_tv: SonyKdl55w800aDigitalTv,
    #[serde(rename = "sony-kdl-55w800b-digital-tv")]
    pub sony_kdl_55w800b_digital_tv: SonyKdl55w800bDigitalTv,
    #[serde(rename = "sony-kdl-55w802a-digital-tv")]
    pub sony_kdl_55w802a_digital_tv: SonyKdl55w802aDigitalTv,
    #[serde(rename = "sony-kdl-55w805a-digital-tv")]
    pub sony_kdl_55w805a_digital_tv: SonyKdl55w805aDigitalTv,
    #[serde(rename = "sony-kdl-55w805b-digital-tv")]
    pub sony_kdl_55w805b_digital_tv: SonyKdl55w805bDigitalTv,
    #[serde(rename = "sony-kdl-55w807a-digital-tv")]
    pub sony_kdl_55w807a_digital_tv: SonyKdl55w807aDigitalTv,
    #[serde(rename = "sony-kdl-55w815b-digital-tv")]
    pub sony_kdl_55w815b_digital_tv: SonyKdl55w815bDigitalTv,
    #[serde(rename = "sony-kdl-55w828b-digital-tv")]
    pub sony_kdl_55w828b_digital_tv: SonyKdl55w828bDigitalTv,
    #[serde(rename = "sony-kdl-55w829b-digital-tv")]
    pub sony_kdl_55w829b_digital_tv: SonyKdl55w829bDigitalTv,
    #[serde(rename = "sony-kdl-55w905a-digital-tv")]
    pub sony_kdl_55w905a_digital_tv: SonyKdl55w905aDigitalTv,
    #[serde(rename = "sony-kdl-55w955b-digital-tv")]
    pub sony_kdl_55w955b_digital_tv: SonyKdl55w955bDigitalTv,
    #[serde(rename = "sony-kdl-60ex645-digital-tv")]
    pub sony_kdl_60ex645_digital_tv: SonyKdl60ex645DigitalTv,
    #[serde(rename = "sony-kdl-60r510a-digital-tv")]
    pub sony_kdl_60r510a_digital_tv: SonyKdl60r510aDigitalTv,
    #[serde(rename = "sony-kdl-60r520a-digital-tv")]
    pub sony_kdl_60r520a_digital_tv: SonyKdl60r520aDigitalTv,
    #[serde(rename = "sony-kdl-60r550a-digital-tv")]
    pub sony_kdl_60r550a_digital_tv: SonyKdl60r550aDigitalTv,
    #[serde(rename = "sony-kdl-60r555a-digital-tv")]
    pub sony_kdl_60r555a_digital_tv: SonyKdl60r555aDigitalTv,
    #[serde(rename = "sony-kdl-60r557a-digital-tv")]
    pub sony_kdl_60r557a_digital_tv: SonyKdl60r557aDigitalTv,
    #[serde(rename = "sony-kdl-60w600b-digital-tv")]
    pub sony_kdl_60w600b_digital_tv: SonyKdl60w600bDigitalTv,
    #[serde(rename = "sony-kdl-60w605b-digital-tv")]
    pub sony_kdl_60w605b_digital_tv: SonyKdl60w605bDigitalTv,
    #[serde(rename = "sony-kdl-60w610b-digital-tv")]
    pub sony_kdl_60w610b_digital_tv: SonyKdl60w610bDigitalTv,
    #[serde(rename = "sony-kdl-60w630b-digital-tv")]
    pub sony_kdl_60w630b_digital_tv: SonyKdl60w630bDigitalTv,
    #[serde(rename = "sony-kdl-60w850b-digital-tv")]
    pub sony_kdl_60w850b_digital_tv: SonyKdl60w850bDigitalTv,
    #[serde(rename = "sony-kdl-60w855b-digital-tv")]
    pub sony_kdl_60w855b_digital_tv: SonyKdl60w855bDigitalTv,
    #[serde(rename = "sony-kdl-60w857b-digital-tv")]
    pub sony_kdl_60w857b_digital_tv: SonyKdl60w857bDigitalTv,
    #[serde(rename = "sony-kdl-65w850a-digital-tv")]
    pub sony_kdl_65w850a_digital_tv: SonyKdl65w850aDigitalTv,
    #[serde(rename = "sony-kdl-65w855a-digital-tv")]
    pub sony_kdl_65w855a_digital_tv: SonyKdl65w855aDigitalTv,
    #[serde(rename = "sony-kdl-65w955b-digital-tv")]
    pub sony_kdl_65w955b_digital_tv: SonyKdl65w955bDigitalTv,
    #[serde(rename = "sony-kdl-70r550a-digital-tv")]
    pub sony_kdl_70r550a_digital_tv: SonyKdl70r550aDigitalTv,
    #[serde(rename = "sony-kdl-70r555a-digital-tv")]
    pub sony_kdl_70r555a_digital_tv: SonyKdl70r555aDigitalTv,
    #[serde(rename = "sony-kdl-70w850b-digital-tv")]
    pub sony_kdl_70w850b_digital_tv: SonyKdl70w850bDigitalTv,
    #[serde(rename = "sony-playstation-4")]
    pub sony_playstation_4: SonyPlaystation4,
    #[serde(rename = "sony-prs-t1-reader")]
    pub sony_prs_t1_reader: SonyPrsT1Reader,
    #[serde(rename = "sony-prs-t3-reader")]
    pub sony_prs_t3_reader: SonyPrsT3Reader,
    pub sparcstation: Sparcstation,
    #[serde(rename = "tabulet-sparta")]
    pub tabulet_sparta: TabuletSparta,
    #[serde(rename = "tesla-model-s-dashboard")]
    pub tesla_model_s_dashboard: TeslaModelSDashboard,
    #[serde(rename = "transformer-pad")]
    pub transformer_pad: TransformerPad,
    #[serde(rename = "transformer-prime")]
    pub transformer_prime: TransformerPrime,
    pub transformer: Transformer,
    pub ultrasparc: Ultrasparc,
    pub vivo: Vivo,
    #[serde(rename = "windows-phone-7")]
    pub windows_phone_7: WindowsPhone7,
    #[serde(rename = "windows-phone-7lumia-520")]
    pub windows_phone_7lumia_520: WindowsPhone7lumia520,
    #[serde(rename = "xbox-360")]
    pub xbox_360: Xbox360,
    #[serde(rename = "xbox-one")]
    pub xbox_one: XboxOne,
    pub xbox: Xbox,
    #[serde(rename = "xoom-2-media-edition")]
    pub xoom_2_media_edition: Xoom2MediaEdition,
    #[serde(rename = "xperia-x")]
    pub xperia_x: XperiaX,
    #[serde(rename = "zte-android")]
    pub zte_android: ZteAndroid,
    #[serde(rename = "zte-blade")]
    pub zte_blade: ZteBlade,
    #[serde(rename = "zte-bladerunner")]
    pub zte_bladerunner: ZteBladerunner,
    #[serde(rename = "zte-e520")]
    pub zte_e520: ZteE520,
    #[serde(rename = "zte-f102")]
    pub zte_f102: ZteF102,
    #[serde(rename = "zte-f160")]
    pub zte_f160: ZteF160,
    #[serde(rename = "zte-f555")]
    pub zte_f555: ZteF555,
    #[serde(rename = "zte-f555n")]
    pub zte_f555n: ZteF555n,
    #[serde(rename = "zte-f900")]
    pub zte_f900: ZteF900,
    #[serde(rename = "zte-jack")]
    pub zte_jack: ZteJack,
    #[serde(rename = "zte-k88")]
    pub zte_k88: ZteK88,
    #[serde(rename = "zte-k92")]
    pub zte_k92: ZteK92,
    #[serde(rename = "zte-libra")]
    pub zte_libra: ZteLibra,
    #[serde(rename = "zte-me")]
    pub zte_me: ZteMe,
    #[serde(rename = "zte-n910")]
    pub zte_n910: ZteN910,
    #[serde(rename = "zte-p107a20")]
    pub zte_p107a20: ZteP107a20,
    #[serde(rename = "zte-p80aiii")]
    pub zte_p80aiii: ZteP80aiii,
    #[serde(rename = "zte-r230")]
    pub zte_r230: ZteR230,
    #[serde(rename = "zte-s50")]
    pub zte_s50: ZteS50,
    #[serde(rename = "zte-skate")]
    pub zte_skate: ZteSkate,
    #[serde(rename = "zte-sydney")]
    pub zte_sydney: ZteSydney,
    #[serde(rename = "zte-t100")]
    pub zte_t100: ZteT100,
    #[serde(rename = "zte-t116a")]
    pub zte_t116a: ZteT116a,
    #[serde(rename = "zte-t126")]
    pub zte_t126: ZteT126,
    #[serde(rename = "zte-t2")]
    pub zte_t2: ZteT2,
    #[serde(rename = "zte-t20")]
    pub zte_t20: ZteT20,
    #[serde(rename = "zte-t3")]
    pub zte_t3: ZteT3,
    #[serde(rename = "zte-t55")]
    pub zte_t55: ZteT55,
    #[serde(rename = "zte-t95")]
    pub zte_t95: ZteT95,
    #[serde(rename = "zte-t96")]
    pub zte_t96: ZteT96,
    #[serde(rename = "zte-tara3g")]
    pub zte_tara3g: ZteTara3g,
    #[serde(rename = "zte-v6500")]
    pub zte_v6500: ZteV6500,
    #[serde(rename = "zte-x500")]
    pub zte_x500: ZteX500,
    #[serde(rename = "zte-z221")]
    pub zte_z221: ZteZ221,
    #[serde(rename = "zte-z222")]
    pub zte_z222: ZteZ222,
    #[serde(rename = "zte-z223")]
    pub zte_z223: ZteZ223,
    #[serde(rename = "zte-z331")]
    pub zte_z331: ZteZ331,
    #[serde(rename = "zte-z431")]
    pub zte_z431: ZteZ431,
    #[serde(rename = "zte-z432")]
    pub zte_z432: ZteZ432,
    #[serde(rename = "zte-z433")]
    pub zte_z433: ZteZ433,
    #[serde(rename = "zte-z667g")]
    pub zte_z667g: ZteZ667g,
    #[serde(rename = "zte-z669")]
    pub zte_z669: ZteZ669,
    #[serde(rename = "zte-z716bl")]
    pub zte_z716bl: ZteZ716bl,
    #[serde(rename = "zte-z740")]
    pub zte_z740: ZteZ740,
    #[serde(rename = "zte-z740g")]
    pub zte_z740g: ZteZ740g,
    #[serde(rename = "zte-z753g")]
    pub zte_z753g: ZteZ753g,
    #[serde(rename = "zte-z755")]
    pub zte_z755: ZteZ755,
    #[serde(rename = "zte-z777")]
    pub zte_z777: ZteZ777,
    #[serde(rename = "zte-z787")]
    pub zte_z787: ZteZ787,
    #[serde(rename = "zte-z791g")]
    pub zte_z791g: ZteZ791g,
    #[serde(rename = "zte-z792")]
    pub zte_z792: ZteZ792,
    #[serde(rename = "zte-z812")]
    pub zte_z812: ZteZ812,
    #[serde(rename = "zte-z813")]
    pub zte_z813: ZteZ813,
    #[serde(rename = "zte-z815")]
    pub zte_z815: ZteZ815,
    #[serde(rename = "zte-z818l")]
    pub zte_z818l: ZteZ818l,
    #[serde(rename = "zte-z830")]
    pub zte_z830: ZteZ830,
    #[serde(rename = "zte-z831")]
    pub zte_z831: ZteZ831,
    #[serde(rename = "zte-z832")]
    pub zte_z832: ZteZ832,
    #[serde(rename = "zte-z835")]
    pub zte_z835: ZteZ835,
    #[serde(rename = "zte-z851m")]
    pub zte_z851m: ZteZ851m,
    #[serde(rename = "zte-z852")]
    pub zte_z852: ZteZ852,
    #[serde(rename = "zte-z861bl")]
    pub zte_z861bl: ZteZ861bl,
    #[serde(rename = "zte-z955l")]
    pub zte_z955l: ZteZ955l,
    #[serde(rename = "zte-z956")]
    pub zte_z956: ZteZ956,
    #[serde(rename = "zte-z958")]
    pub zte_z958: ZteZ958,
    #[serde(rename = "zte-z962bl")]
    pub zte_z962bl: ZteZ962bl,
    #[serde(rename = "zte-z965")]
    pub zte_z965: ZteZ965,
    #[serde(rename = "zte-z971")]
    pub zte_z971: ZteZ971,
    #[serde(rename = "zte-z983")]
    pub zte_z983: ZteZ983,
    #[serde(rename = "zte-z987")]
    pub zte_z987: ZteZ987,
    #[serde(rename = "zte-z988")]
    pub zte_z988: ZteZ988,
    #[serde(rename = "zte-z990")]
    pub zte_z990: ZteZ990,
    #[serde(rename = "zte-z990g")]
    pub zte_z990g: ZteZ990g,
    #[serde(rename = "zte-z992")]
    pub zte_z992: ZteZ992,
    #[serde(rename = "zte-z993")]
    pub zte_z993: ZteZ993,
    #[serde(rename = "zte-z995")]
    pub zte_z995: ZteZ995,
    #[serde(rename = "zte-z998")]
    pub zte_z998: ZteZ998,
    #[serde(rename = "zte-z999")]
    pub zte_z999: ZteZ999,
    #[serde(rename = "a-unix-based-os")]
    pub a_unix_based_os: AUnixBasedOs,
    pub bada: Bada,
    pub beos: Beos,
    #[serde(rename = "blackberry-os")]
    pub blackberry_os: BlackberryOs,
    pub chromeos: Chromeos,
    pub darwin: Darwin,
    #[serde(rename = "fire-os")]
    pub fire_os: FireOs,
    pub freebsd: Freebsd,
    pub haiku: Haiku,
    #[serde(rename = "hp-webos")]
    pub hp_webos: HpWebos,
    pub ios: Ios,
    pub irix: Irix,
    pub linux: Linux,
    pub livearea: Livearea,
    #[serde(rename = "mac-os-x")]
    pub mac_os_x: MacOsX,
    pub mac: Mac,
    pub macos: Macos,
    pub openbsd: Openbsd,
    pub palmos: Palmos,
    #[serde(rename = "rim-tablet-os")]
    pub rim_tablet_os: RimTabletOs,
    pub sunos: Sunos,
    pub symbian: Symbian,
    pub webos: Webos,
    #[serde(rename = "windows-mobile")]
    pub windows_mobile: WindowsMobile,
    #[serde(rename = "windows-phone")]
    pub windows_phone: WindowsPhone,
    pub windows: Windows,
    #[serde(rename = "126-browser")]
    pub n126_browser: n126Browser,
    #[serde(rename = "1337browser")]
    pub n1337browser: n1337browser,
    #[serde(rename = "1password")]
    pub n1password: n1password,
    #[serde(rename = "200pleasebot")]
    pub n200pleasebot: n200pleasebot,
    #[serde(rename = "360spider")]
    pub n360spider: n360spider,
    #[serde(rename = "3b-rooms-web-browser")]
    pub n3b_rooms_web_browser: n3bRoomsWebBrowser,
    #[serde(rename = "80legs-web-crawler")]
    pub n80legs_web_crawler: n80legsWebCrawler,
    #[serde(rename = "a-passion-for-jazz-media-crawler")]
    pub a_passion_for_jazz_media_crawler: APassionForJazzMediaCrawler,
    #[serde(rename = "abacho-crawler")]
    pub abacho_crawler: AbachoCrawler,
    #[serde(rename = "accoona-ai-crawler")]
    pub accoona_ai_crawler: AccoonaAiCrawler,
    #[serde(rename = "accoona-business-crawler")]
    pub accoona_business_crawler: AccoonaBusinessCrawler,
    #[serde(rename = "admantx-platform-semantic-analyzer")]
    pub admantx_platform_semantic_analyzer: AdmantxPlatformSemanticAnalyzer,
    #[serde(rename = "adobe-air")]
    pub adobe_air: AdobeAir,
    #[serde(rename = "ahrefs-backlink-research-bot")]
    pub ahrefs_backlink_research_bot: AhrefsBacklinkResearchBot,
    #[serde(rename = "alertsite-monitoring-bot")]
    pub alertsite_monitoring_bot: AlertsiteMonitoringBot,
    #[serde(rename = "alexa-bot")]
    pub alexa_bot: AlexaBot,
    #[serde(rename = "alexa-certification-scanner")]
    pub alexa_certification_scanner: AlexaCertificationScanner,
    #[serde(rename = "alexa-site-audit")]
    pub alexa_site_audit: AlexaSiteAudit,
    pub alienblue: Alienblue,
    pub amaya: Amaya,
    #[serde(rename = "amazon-api-gateway")]
    pub amazon_api_gateway: AmazonApiGateway,
    #[serde(rename = "android-browser")]
    pub android_browser: AndroidBrowser,
    #[serde(rename = "anyapex-web-directory-crawler")]
    pub anyapex_web_directory_crawler: AnyapexWebDirectoryCrawler,
    #[serde(rename = "aol-browser")]
    pub aol_browser: AolBrowser,
    #[serde(rename = "arachmo-download-manager")]
    pub arachmo_download_manager: ArachmoDownloadManager,
    pub arora: Arora,
    #[serde(rename = "avant-browser")]
    pub avant_browser: AvantBrowser,
    #[serde(rename = "avantgo-browser")]
    pub avantgo_browser: AvantgoBrowser,
    pub awesomium: Awesomium,
    #[serde(rename = "baidu-box-app")]
    pub baidu_box_app: BaiduBoxApp,
    #[serde(rename = "baidu-image-spider")]
    pub baidu_image_spider: BaiduImageSpider,
    #[serde(rename = "baidu-spider")]
    pub baidu_spider: BaiduSpider,
    #[serde(rename = "baidu-union-spider")]
    pub baidu_union_spider: BaiduUnionSpider,
    #[serde(rename = "become-com-crawler")]
    pub become_com_crawler: BecomeComCrawler,
    #[serde(rename = "beslist-shopping-crawler")]
    pub beslist_shopping_crawler: BeslistShoppingCrawler,
    pub bingbot: Bingbot,
    pub bingpreview: Bingpreview,
    #[serde(rename = "bit-ly-link-checker")]
    pub bit_ly_link_checker: BitLyLinkChecker,
    #[serde(rename = "blackberry-browser")]
    pub blackberry_browser: BlackberryBrowser,
    pub blazer: Blazer,
    #[serde(rename = "blitzbot-crawler")]
    pub blitzbot_crawler: BlitzbotCrawler,
    #[serde(rename = "blue-chrome")]
    pub blue_chrome: BlueChrome,
    #[serde(rename = "boitho-distributed-crawler")]
    pub boitho_distributed_crawler: BoithoDistributedCrawler,
    pub bonecho: Bonecho,
    pub brave: Brave,
    #[serde(rename = "broadsign-xpress")]
    pub broadsign_xpress: BroadsignXpress,
    #[serde(rename = "browsershots-com-cross-browser-tester")]
    pub browsershots_com_cross_browser_tester: BrowsershotsComCrossBrowserTester,
    pub camino: Camino,
    #[serde(rename = "careerbot-search-crawler")]
    pub careerbot_search_crawler: CareerbotSearchCrawler,
    pub catchbot: Catchbot,
    #[serde(rename = "catchpoint-analyser")]
    pub catchpoint_analyser: CatchpointAnalyser,
    pub charlotte: Charlotte,
    pub chimera: Chimera,
    pub chrome: Chrome,
    pub chromeplus: Chromeplus,
    pub chromium: Chromium,
    #[serde(rename = "clamav-website-scanner")]
    pub clamav_website_scanner: ClamavWebsiteScanner,
    pub coda: Coda,
    #[serde(rename = "coder-nut")]
    pub coder_nut: CoderNut,
    pub cometbird: Cometbird,
    #[serde(rename = "comodo-dragon")]
    pub comodo_dragon: ComodoDragon,
    #[serde(rename = "comodo-icedragon")]
    pub comodo_icedragon: ComodoIcedragon,
    #[serde(rename = "content-crawler-spider")]
    pub content_crawler_spider: ContentCrawlerSpider,
    pub converacrawler: Converacrawler,
    pub coolnovo: Coolnovo,
    #[serde(rename = "cosmos-crawler")]
    pub cosmos_crawler: CosmosCrawler,
    #[serde(rename = "covario-spider")]
    pub covario_spider: CovarioSpider,
    pub curl: Curl,
    #[serde(rename = "dataparksearch-engine")]
    pub dataparksearch_engine: DataparksearchEngine,
    #[serde(rename = "delphi-embedded-web-browser")]
    pub delphi_embedded_web_browser: DelphiEmbeddedWebBrowser,
    #[serde(rename = "diffbot-scanner")]
    pub diffbot_scanner: DiffbotScanner,
    pub dillo: Dillo,
    #[serde(rename = "discord-bot")]
    pub discord_bot: DiscordBot,
    #[serde(rename = "discovery-engine-crawler")]
    pub discovery_engine_crawler: DiscoveryEngineCrawler,
    #[serde(rename = "dlink-backdoor")]
    pub dlink_backdoor: DlinkBackdoor,
    pub dolfin: Dolfin,
    #[serde(rename = "domain-re-animator-bot")]
    pub domain_re_animator_bot: DomainReAnimatorBot,
    #[serde(rename = "domaintools-surveybot")]
    pub domaintools_surveybot: DomaintoolsSurveybot,
    pub dooble: Dooble,
    #[serde(rename = "dorado-wap-browser")]
    pub dorado_wap_browser: DoradoWapBrowser,
    #[serde(rename = "dotcom-monitor-bot")]
    pub dotcom_monitor_bot: DotcomMonitorBot,
    #[serde(rename = "dotnetdotcomdotorg-crawler")]
    pub dotnetdotcomdotorg_crawler: DotnetdotcomdotorgCrawler,
    pub dragon: Dragon,
    #[serde(rename = "duckduckgo-favicons-bot")]
    pub duckduckgo_favicons_bot: DuckduckgoFaviconsBot,
    #[serde(rename = "ea-origin-browser")]
    pub ea_origin_browser: EaOriginBrowser,
    #[serde(rename = "earthcom-crawler")]
    pub earthcom_crawler: EarthcomCrawler,
    pub earthworm: Earthworm,
    pub edge: Edge,
    #[serde(rename = "electron-application")]
    pub electron_application: ElectronApplication,
    pub elinks: Elinks,
    #[serde(rename = "embedded-web-browser")]
    pub embedded_web_browser: EmbeddedWebBrowser,
    #[serde(rename = "emeraldshield-com-filter")]
    pub emeraldshield_com_filter: EmeraldshieldComFilter,
    #[serde(rename = "envolk-spider")]
    pub envolk_spider: EnvolkSpider,
    pub epiphany: Epiphany,
    #[serde(rename = "evaliant-impressions-bot")]
    pub evaliant_impressions_bot: EvaliantImpressionsBot,
    #[serde(rename = "eve-in-game-browser")]
    pub eve_in_game_browser: EveInGameBrowser,
    #[serde(rename = "exalead-crawler")]
    pub exalead_crawler: ExaleadCrawler,
    #[serde(rename = "exalead-image-crawler")]
    pub exalead_image_crawler: ExaleadImageCrawler,
    #[serde(rename = "exb-language-crawler")]
    pub exb_language_crawler: ExbLanguageCrawler,
    pub excel: Excel,
    #[serde(rename = "facebook-app")]
    pub facebook_app: FacebookApp,
    #[serde(rename = "facebook-bot")]
    pub facebook_bot: FacebookBot,
    #[serde(rename = "fast-enterprise-crawler")]
    pub fast_enterprise_crawler: FastEnterpriseCrawler,
    #[serde(rename = "fast-fresh-crawler")]
    pub fast_fresh_crawler: FastFreshCrawler,
    pub fennec: Fennec,
    #[serde(rename = "findlinks-crawler-bot")]
    pub findlinks_crawler_bot: FindlinksCrawlerBot,
    pub firebird: Firebird,
    #[serde(rename = "firefox-focus")]
    pub firefox_focus: FirefoxFocus,
    pub firefox: Firefox,
    pub flashfire: Flashfire,
    pub flock: Flock,
    pub galeon: Galeon,
    #[serde(rename = "genieo-bot")]
    pub genieo_bot: GenieoBot,
    #[serde(rename = "gnip-unwindfetchor-crawler")]
    pub gnip_unwindfetchor_crawler: GnipUnwindfetchorCrawler,
    pub gomezagent: Gomezagent,
    #[serde(rename = "google-app-engine-software")]
    pub google_app_engine_software: GoogleAppEngineSoftware,
    #[serde(rename = "google-earth-pro")]
    pub google_earth_pro: GoogleEarthPro,
    #[serde(rename = "google-earth")]
    pub google_earth: GoogleEarth,
    #[serde(rename = "google-favicon-crawler")]
    pub google_favicon_crawler: GoogleFaviconCrawler,
    #[serde(rename = "google-image-proxy")]
    pub google_image_proxy: GoogleImageProxy,
    #[serde(rename = "google-s-media-partners-system-adsense")]
    pub google_s_media_partners_system_adsense: GoogleSMediaPartnersSystemAdsense,
    #[serde(rename = "google-search-app")]
    pub google_search_app: GoogleSearchApp,
    #[serde(rename = "google-site-verifier-bot")]
    pub google_site_verifier_bot: GoogleSiteVerifierBot,
    #[serde(rename = "google-snippet-fetcher")]
    pub google_snippet_fetcher: GoogleSnippetFetcher,
    #[serde(rename = "google-structured-data-testing-tool")]
    pub google_structured_data_testing_tool: GoogleStructuredDataTestingTool,
    #[serde(rename = "google-weblight-proxy")]
    pub google_weblight_proxy: GoogleWeblightProxy,
    #[serde(rename = "googlebot-mobile")]
    pub googlebot_mobile: GooglebotMobile,
    pub googlebot: Googlebot,
    #[serde(rename = "grapeshot-bot")]
    pub grapeshot_bot: GrapeshotBot,
    #[serde(rename = "gtmetrix-analyser")]
    pub gtmetrix_analyser: GtmetrixAnalyser,
    pub httpclient: Httpclient,
    pub ibrowser: Ibrowser,
    pub icab: Icab,
    pub iceape: Iceape,
    pub iceweasel: Iceweasel,
    #[serde(rename = "internet-archiver-bot")]
    pub internet_archiver_bot: InternetArchiverBot,
    #[serde(rename = "internet-channel")]
    pub internet_channel: InternetChannel,
    #[serde(rename = "internet-explorer-mobile")]
    pub internet_explorer_mobile: InternetExplorerMobile,
    #[serde(rename = "internet-explorer")]
    pub internet_explorer: InternetExplorer,
    #[serde(rename = "internet-tv-browser")]
    pub internet_tv_browser: InternetTvBrowser,
    pub iris: Iris,
    pub itunes: Itunes,
    #[serde(rename = "jakarta-commons-httpclient")]
    pub jakarta_commons_httpclient: JakartaCommonsHttpclient,
    #[serde(rename = "java-runtime-environment")]
    pub java_runtime_environment: JavaRuntimeEnvironment,
    #[serde(rename = "javafx-platform")]
    pub javafx_platform: JavafxPlatform,
    #[serde(rename = "k-meleon")]
    pub k_meleon: KMeleon,
    pub kazehakase: Kazehakase,
    #[serde(rename = "kindle-browser")]
    pub kindle_browser: KindleBrowser,
    pub konqueror: Konqueror,
    #[serde(rename = "lb-browser")]
    pub lb_browser: LbBrowser,
    #[serde(rename = "library-for-www-in-perl")]
    pub library_for_www_in_perl: LibraryForWwwInPerl,
    pub light: Light,
    #[serde(rename = "linkcheck-analyser")]
    pub linkcheck_analyser: LinkcheckAnalyser,
    pub links: Links,
    #[serde(rename = "liquid-mt-browser")]
    pub liquid_mt_browser: LiquidMtBrowser,
    pub lunascape: Lunascape,
    pub lynx: Lynx,
    #[serde(rename = "majestic-12-distributed-search-bot")]
    pub majestic_12_distributed_search_bot: Majestic12DistributedSearchBot,
    pub maxthon: Maxthon,
    #[serde(rename = "meanpath-bot")]
    pub meanpath_bot: MeanpathBot,
    #[serde(rename = "mercury-browser")]
    pub mercury_browser: MercuryBrowser,
    #[serde(rename = "microsoft-cryptoapi")]
    pub microsoft_cryptoapi: MicrosoftCryptoapi,
    pub midori: Midori,
    pub minefield: Minefield,
    pub mosaic: Mosaic,
    #[serde(rename = "motorola-internet-browser")]
    pub motorola_internet_browser: MotorolaInternetBrowser,
    #[serde(rename = "msn-bot")]
    pub msn_bot: MsnBot,
    #[serde(rename = "msn-media-bot")]
    pub msn_media_bot: MsnMediaBot,
    #[serde(rename = "mvision-player")]
    pub mvision_player: MvisionPlayer,
    pub naenara: Naenara,
    pub netcast: Netcast,
    #[serde(rename = "netcraft-web-server-survey")]
    pub netcraft_web_server_survey: NetcraftWebServerSurvey,
    #[serde(rename = "netfront-browser-nx")]
    pub netfront_browser_nx: NetfrontBrowserNx,
    #[serde(rename = "netscape-navigator")]
    pub netscape_navigator: NetscapeNavigator,
    pub netsurf: Netsurf,
    pub nexplayer: Nexplayer,
    #[serde(rename = "nintendo-browser")]
    pub nintendo_browser: NintendoBrowser,
    #[serde(rename = "nintendo-dsi-browser")]
    pub nintendo_dsi_browser: NintendoDsiBrowser,
    #[serde(rename = "nook-web-browser")]
    pub nook_web_browser: NookWebBrowser,
    #[serde(rename = "nutraspace-search")]
    pub nutraspace_search: NutraspaceSearch,
    pub obigo: Obigo,
    pub office: Office,
    pub okhttp: Okhttp,
    pub omniweb: Omniweb,
    pub onebrowser: Onebrowser,
    pub onenote: Onenote,
    #[serde(rename = "open-webkit-sharp-based-browser")]
    pub open_webkit_sharp_based_browser: OpenWebkitSharpBasedBrowser,
    #[serde(rename = "openwave-mobile-browser")]
    pub openwave_mobile_browser: OpenwaveMobileBrowser,
    #[serde(rename = "opera-mini")]
    pub opera_mini: OperaMini,
    pub opera: Opera,
    pub orca: Orca,
    #[serde(rename = "outform-digital-display")]
    pub outform_digital_display: OutformDigitalDisplay,
    pub outlook: Outlook,
    pub ovi: Ovi,
    #[serde(rename = "pale-moon")]
    pub pale_moon: PaleMoon,
    pub phoenix: Phoenix,
    #[serde(rename = "pinterest-app")]
    pub pinterest_app: PinterestApp,
    #[serde(rename = "pinterest-bot")]
    pub pinterest_bot: PinterestBot,
    #[serde(rename = "playbook-web-browser")]
    pub playbook_web_browser: PlaybookWebBrowser,
    #[serde(rename = "playstation-4-browser")]
    pub playstation_4_browser: Playstation4Browser,
    pub powerpoint: Powerpoint,
    #[serde(rename = "pro-engineer-wildfire")]
    pub pro_engineer_wildfire: ProEngineerWildfire,
    #[serde(rename = "proximic-search")]
    pub proximic_search: ProximicSearch,
    pub puffin: Puffin,
    #[serde(rename = "python-urllib")]
    pub python_urllib: PythonUrllib,
    #[serde(rename = "qihoo-360")]
    pub qihoo_360: Qihoo360,
    #[serde(rename = "qq-browser")]
    pub qq_browser: QqBrowser,
    #[serde(rename = "qqdownload-download-manager")]
    pub qqdownload_download_manager: QqdownloadDownloadManager,
    #[serde(rename = "qt-based-browser")]
    pub qt_based_browser: QtBasedBrowser,
    pub qtcarbrowser: Qtcarbrowser,
    #[serde(rename = "qualys-ssl-assessment-scanner")]
    pub qualys_ssl_assessment_scanner: QualysSslAssessmentScanner,
    pub qupzilla: Qupzilla,
    pub raptr: Raptr,
    pub rekonq: Rekonq,
    pub roccat: Roccat,
    pub rockmelt: Rockmelt,
    pub ruxitsynthetic: Ruxitsynthetic,
    pub safari: Safari,
    pub safepay: Safepay,
    #[serde(rename = "samsung-browser")]
    pub samsung_browser: SamsungBrowser,
    pub seamonkey: Seamonkey,
    pub secondlife: Secondlife,
    pub shiretoko: Shiretoko,
    pub silk: Silk,
    pub skyfire: Skyfire,
    #[serde(rename = "slackbot-link-checker")]
    pub slackbot_link_checker: SlackbotLinkChecker,
    pub sleipnir: Sleipnir,
    pub slimbrowser: Slimbrowser,
    #[serde(rename = "sogou-explorer")]
    pub sogou_explorer: SogouExplorer,
    #[serde(rename = "sogou-search-dog")]
    pub sogou_search_dog: SogouSearchDog,
    pub songbird: Songbird,
    #[serde(rename = "sony-web-browser")]
    pub sony_web_browser: SonyWebBrowser,
    #[serde(rename = "sosospider-search-bot")]
    pub sosospider_search_bot: SosospiderSearchBot,
    #[serde(rename = "speedcurve-speed-tester")]
    pub speedcurve_speed_tester: SpeedcurveSpeedTester,
    pub splash: Splash,
    pub spraycan: Spraycan,
    #[serde(rename = "squider-bot")]
    pub squider_bot: SquiderBot,
    #[serde(rename = "srware-iron")]
    pub srware_iron: SrwareIron,
    pub teashark: Teashark,
    pub tencenttraveler: Tencenttraveler,
    pub tenfourfox: Tenfourfox,
    #[serde(rename = "theworld-browser")]
    pub theworld_browser: TheworldBrowser,
    pub thunderbird: Thunderbird,
    #[serde(rename = "topsy-butterfly-robot")]
    pub topsy_butterfly_robot: TopsyButterflyRobot,
    #[serde(rename = "tweetmeme-bot")]
    pub tweetmeme_bot: TweetmemeBot,
    #[serde(rename = "twitter-app")]
    pub twitter_app: TwitterApp,
    pub twitterbot: Twitterbot,
    #[serde(rename = "uc-browser")]
    pub uc_browser: UcBrowser,
    #[serde(rename = "valve-steam-game-overlay")]
    pub valve_steam_game_overlay: ValveSteamGameOverlay,
    #[serde(rename = "valve-steam-tenfoot-display")]
    pub valve_steam_tenfoot_display: ValveSteamTenfootDisplay,
    pub vienna: Vienna,
    #[serde(rename = "vision-mobile-browser")]
    pub vision_mobile_browser: VisionMobileBrowser,
    #[serde(rename = "visual-basic-project")]
    pub visual_basic_project: VisualBasicProject,
    pub vivaldi: Vivaldi,
    #[serde(rename = "voilabot-beta")]
    pub voilabot_beta: VoilabotBeta,
    pub voilabot: Voilabot,
    #[serde(rename = "w3c-css-validator")]
    pub w3c_css_validator: W3cCssValidator,
    #[serde(rename = "w3c-link-checker")]
    pub w3c_link_checker: W3cLinkChecker,
    #[serde(rename = "w3c-validator")]
    pub w3c_validator: W3cValidator,
    pub w3m: W3m,
    pub waterfox: Waterfox,
    #[serde(rename = "webkit-based-browser")]
    pub webkit_based_browser: WebkitBasedBrowser,
    #[serde(rename = "weblink-preview")]
    pub weblink_preview: WeblinkPreview,
    pub weblink: Weblink,
    #[serde(rename = "webos-browser")]
    pub webos_browser: WebosBrowser,
    pub webpositive: Webpositive,
    pub webtv: Webtv,
    #[serde(rename = "webview-based-browser")]
    pub webview_based_browser: WebviewBasedBrowser,
    pub wechat: Wechat,
    pub wget: Wget,
    pub word: Word,
    pub wyzo: Wyzo,
    #[serde(rename = "yahoo-cache-system")]
    pub yahoo_cache_system: YahooCacheSystem,
    #[serde(rename = "yahoo-slurp-web-crawler-bot")]
    pub yahoo_slurp_web_crawler_bot: YahooSlurpWebCrawlerBot,
    #[serde(rename = "yandex-browser")]
    pub yandex_browser: YandexBrowser,
    #[serde(rename = "yandex-search-bot")]
    pub yandex_search_bot: YandexSearchBot,
    #[serde(rename = "yodaobot-search-bot")]
    pub yodaobot_search_bot: YodaobotSearchBot,
    pub analyser: Analyser,
    pub application: Application,
    pub crawler: Crawler,
    #[serde(rename = "download-helper")]
    pub download_helper: DownloadHelper,
    #[serde(rename = "in-app-browser")]
    pub in_app_browser: InAppBrowser,
    pub proxy: Proxy,
    #[serde(rename = "security-analyser")]
    pub security_analyser: SecurityAnalyser,
    #[serde(rename = "site-monitor")]
    pub site_monitor: SiteMonitor,
    #[serde(rename = "software-library")]
    pub software_library: SoftwareLibrary,
    pub tool: Tool,
    #[serde(rename = "web-browser")]
    pub web_browser: WebBrowser,
    #[serde(rename = "user-agents-whatismybrowserdotcom-large")]
    pub user_agents_whatismybrowserdotcom_large: UserAgentsWhatismybrowserdotcomLarge,
    #[serde(rename = "user-agents-whatismybrowserdotcom-mid")]
    pub user_agents_whatismybrowserdotcom_mid: UserAgentsWhatismybrowserdotcomMid,
    #[serde(rename = "user-agents-whatismybrowserdotcom-small")]
    pub user_agents_whatismybrowserdotcom_small: UserAgentsWhatismybrowserdotcomSmall,
    #[serde(rename = "Windows-Attacks")]
    pub windows_attacks: WindowsAttacks,
    #[serde(rename = "XML-FUZZ")]
    pub xml_fuzz: XmlFuzz,
    #[serde(rename = "XSS-BruteLogic")]
    pub xss_brute_logic: XssBruteLogic,
    #[serde(rename = "XSS-Bypass-Strings-BruteLogic")]
    pub xss_bypass_strings_brute_logic: XssBypassStringsBruteLogic,
    #[serde(rename = "XSS-Cheat-Sheet-PortSwigger")]
    pub xss_cheat_sheet_port_swigger: XssCheatSheetPortSwigger,
    #[serde(rename = "XSS-Jhaddix")]
    pub xss_jhaddix: XssJhaddix,
    #[serde(rename = "XSS-RSNAKE")]
    pub xss_rsnake: XssRsnake,
    #[serde(rename = "XSS-Somdev")]
    pub xss_somdev: XssSomdev,
    #[serde(rename = "XSS-Vectors-Mario")]
    pub xss_vectors_mario: XssVectorsMario,
    #[serde(rename = "XSS-With-Context-Jhaddix")]
    pub xss_with_context_jhaddix: XssWithContextJhaddix,
    #[serde(rename = "xss-without-parentheses-semi-colons-portswigger")]
    pub xss_without_parentheses_semi_colons_portswigger: XssWithoutParenthesesSemiColonsPortswigger,
    #[serde(rename = "XXE-Fuzzing")]
    pub xxe_fuzzing: XxeFuzzing,
    #[serde(rename = "alphanum-case-extra")]
    pub alphanum_case_extra: AlphanumCaseExtra,
    #[serde(rename = "alphanum-case")]
    pub alphanum_case: AlphanumCase,
    #[serde(rename = "big-list-of-naughty-strings")]
    pub big_list_of_naughty_strings: BigListOfNaughtyStrings,
    pub char: Char,
    #[serde(rename = "command-injection-commix")]
    pub command_injection_commix: CommandInjectionCommix,
    #[serde(rename = "doble-uri-hex")]
    pub doble_uri_hex: DobleUriHex,
    #[serde(rename = "extension-test")]
    pub extension_test: ExtensionTest,
    #[serde(rename = "extensions-Bo0oM")]
    pub extensions_bo0o_m: ExtensionsBo0oM,
    #[serde(rename = "extensions-compressed")]
    pub extensions_compressed: ExtensionsCompressed,
    #[serde(rename = "extensions-most-common")]
    pub extensions_most_common: ExtensionsMostCommon,
    #[serde(rename = "extensions-skipfish")]
    pub extensions_skipfish: ExtensionsSkipfish,
    #[serde(rename = "fuzz-Bo0oM")]
    pub fuzz_bo0o_m: FuzzBo0oM,
    #[serde(rename = "numeric-fields-only")]
    pub numeric_fields_only: NumericFieldsOnly,
    #[serde(rename = "special-chars")]
    pub special_chars: SpecialChars,
    #[serde(rename = "curl-protocols")]
    pub curl_protocols: CurlProtocols,
    #[serde(rename = "dns-resolvers")]
    pub dns_resolvers: DnsResolvers,
    #[serde(rename = "domains-1million-top")]
    pub domains_1million_top: Domains1millionTop,
    #[serde(rename = "ike-groupid")]
    pub ike_groupid: IkeGroupid,
    #[serde(rename = "lang-english")]
    pub lang_english: LangEnglish,
    #[serde(rename = "lang-french-full")]
    pub lang_french_full: LangFrenchFull,
    #[serde(rename = "lang-french-small")]
    pub lang_french_small: LangFrenchSmall,
    #[serde(rename = "lang-german")]
    pub lang_german: LangGerman,
    #[serde(rename = "lang-portuguese")]
    pub lang_portuguese: LangPortuguese,
    #[serde(rename = "lang-spanish")]
    pub lang_spanish: LangSpanish,
    #[serde(rename = "pi-large")]
    pub pi_large: PiLarge,
    pub cities: Cities,
    #[serde(rename = "city-state-country")]
    pub city_state_country: CityStateCountry,
    #[serde(rename = "common-surnames")]
    pub common_surnames: CommonSurnames,
    pub dates: Dates,
    #[serde(rename = "html-colors")]
    pub html_colors: HtmlColors,
    #[serde(rename = "street-names")]
    pub street_names: StreetNames,
    #[serde(rename = "Alabama")]
    pub alabama: Alabama,
    #[serde(rename = "Alaska")]
    pub alaska: Alaska,
    #[serde(rename = "American")]
    pub american: American,
    #[serde(rename = "Arizona")]
    pub arizona: Arizona,
    #[serde(rename = "Arkansas")]
    pub arkansas: Arkansas,
    #[serde(rename = "Bloomington,")]
    pub bloomington: Bloomington,
    #[serde(rename = "California")]
    pub california: California,
    #[serde(rename = "Colorado")]
    pub colorado: Colorado,
    #[serde(rename = "Connecticut")]
    pub connecticut: Connecticut,
    #[serde(rename = "Delaware")]
    pub delaware: Delaware,
    #[serde(rename = "District")]
    pub district: District,
    #[serde(rename = "Federated")]
    pub federated: Federated,
    #[serde(rename = "Florida")]
    pub florida: Florida,
    #[serde(rename = "Georgia")]
    pub georgia: Georgia,
    #[serde(rename = "Guam")]
    pub guam: Guam,
    #[serde(rename = "Honolulu,")]
    pub honolulu: Honolulu,
    #[serde(rename = "Idaho")]
    pub idaho: Idaho,
    #[serde(rename = "Illinois")]
    pub illinois: Illinois,
    #[serde(rename = "Indiana")]
    pub indiana: Indiana,
    #[serde(rename = "Iowa")]
    pub iowa: Iowa,
    #[serde(rename = "Kansas")]
    pub kansas: Kansas,
    #[serde(rename = "Kentucky")]
    pub kentucky: Kentucky,
    #[serde(rename = "Las")]
    pub las: Las,
    #[serde(rename = "Louisiana")]
    pub louisiana: Louisiana,
    #[serde(rename = "Maine")]
    pub maine: Maine,
    #[serde(rename = "Marshall")]
    pub marshall: Marshall,
    #[serde(rename = "Maryland")]
    pub maryland: Maryland,
    #[serde(rename = "Massachusetts")]
    pub massachusetts: Massachusetts,
    #[serde(rename = "Mississippi")]
    pub mississippi: Mississippi,
    #[serde(rename = "Missouri")]
    pub missouri: Missouri,
    #[serde(rename = "Montana")]
    pub montana: Montana,
    #[serde(rename = "Nebraska")]
    pub nebraska: Nebraska,
    #[serde(rename = "New")]
    pub new: New,
    #[serde(rename = "North")]
    pub north: North,
    #[serde(rename = "Northern")]
    pub northern: Northern,
    #[serde(rename = "Ohio")]
    pub ohio: Ohio,
    #[serde(rename = "Oklahoma")]
    pub oklahoma: Oklahoma,
    #[serde(rename = "Oregon")]
    pub oregon: Oregon,
    #[serde(rename = "Palau")]
    pub palau: Palau,
    #[serde(rename = "Pennsylvania")]
    pub pennsylvania: Pennsylvania,
    #[serde(rename = "Provo,")]
    pub provo: Provo,
    #[serde(rename = "Puerto")]
    pub puerto: Puerto,
    #[serde(rename = "Rhode")]
    pub rhode: Rhode,
    #[serde(rename = "South")]
    pub south: South,
    #[serde(rename = "Southfield,")]
    pub southfield: Southfield,
    #[serde(rename = "Tennessee")]
    pub tennessee: Tennessee,
    #[serde(rename = "Texas")]
    pub texas: Texas,
    #[serde(rename = "Vermont")]
    pub vermont: Vermont,
    #[serde(rename = "Virgin")]
    pub virgin: Virgin,
    #[serde(rename = "Virginia")]
    pub virginia: Virginia,
    #[serde(rename = "Washington")]
    pub washington: Washington,
    #[serde(rename = "West")]
    pub west: West,
    #[serde(rename = "Wisconsin")]
    pub wisconsin: Wisconsin,
    #[serde(rename = "Wyoming")]
    pub wyoming: Wyoming,
    #[serde(rename = "Alabama-school")]
    pub alabama_school: AlabamaSchool,
    #[serde(rename = "Alaska-school")]
    pub alaska_school: AlaskaSchool,
    #[serde(rename = "Arizona-school")]
    pub arizona_school: ArizonaSchool,
    #[serde(rename = "Arkansas-school")]
    pub arkansas_school: ArkansasSchool,
    #[serde(rename = "California-school")]
    pub california_school: CaliforniaSchool,
    #[serde(rename = "Colorado-school")]
    pub colorado_school: ColoradoSchool,
    #[serde(rename = "Connecticut-school")]
    pub connecticut_school: ConnecticutSchool,
    #[serde(rename = "Delaware-school")]
    pub delaware_school: DelawareSchool,
    #[serde(rename = "Florida-school")]
    pub florida_school: FloridaSchool,
    #[serde(rename = "Georgia-school")]
    pub georgia_school: GeorgiaSchool,
    #[serde(rename = "Hawaii-school")]
    pub hawaii_school: HawaiiSchool,
    #[serde(rename = "Idaho-school")]
    pub idaho_school: IdahoSchool,
    #[serde(rename = "Illinois-school")]
    pub illinois_school: IllinoisSchool,
    #[serde(rename = "Indiana-school")]
    pub indiana_school: IndianaSchool,
    #[serde(rename = "Iowa-school")]
    pub iowa_school: IowaSchool,
    #[serde(rename = "Kansas-school")]
    pub kansas_school: KansasSchool,
    #[serde(rename = "Kentucky-school")]
    pub kentucky_school: KentuckySchool,
    #[serde(rename = "Louisiana-school")]
    pub louisiana_school: LouisianaSchool,
    #[serde(rename = "Maine-school")]
    pub maine_school: MaineSchool,
    #[serde(rename = "Maryland-school")]
    pub maryland_school: MarylandSchool,
    #[serde(rename = "Massachusetts-school")]
    pub massachusetts_school: MassachusettsSchool,
    #[serde(rename = "Michigan-school")]
    pub michigan_school: MichiganSchool,
    #[serde(rename = "Minnesota-school")]
    pub minnesota_school: MinnesotaSchool,
    #[serde(rename = "Missouri-school")]
    pub missouri_school: MissouriSchool,
    #[serde(rename = "Montana-school")]
    pub montana_school: MontanaSchool,
    #[serde(rename = "Nebraska-school")]
    pub nebraska_school: NebraskaSchool,
    #[serde(rename = "Nevada-school")]
    pub nevada_school: NevadaSchool,
    #[serde(rename = "New-Hampshire-school")]
    pub new_hampshire_school: NewHampshireSchool,
    #[serde(rename = "New-Jersey-school")]
    pub new_jersey_school: NewJerseySchool,
    #[serde(rename = "New-Mexico-school")]
    pub new_mexico_school: NewMexicoSchool,
    #[serde(rename = "New-York-school")]
    pub new_york_school: NewYorkSchool,
    #[serde(rename = "North-Carolina-school")]
    pub north_carolina_school: NorthCarolinaSchool,
    #[serde(rename = "North-Dakota-school")]
    pub north_dakota_school: NorthDakotaSchool,
    #[serde(rename = "Ohio-school")]
    pub ohio_school: OhioSchool,
    #[serde(rename = "Oklahoma-school")]
    pub oklahoma_school: OklahomaSchool,
    #[serde(rename = "Oregon-school")]
    pub oregon_school: OregonSchool,
    #[serde(rename = "Pennslyvania-school")]
    pub pennslyvania_school: PennslyvaniaSchool,
    #[serde(rename = "Rhode-Island-school")]
    pub rhode_island_school: RhodeIslandSchool,
    #[serde(rename = "South-Carolina-school")]
    pub south_carolina_school: SouthCarolinaSchool,
    #[serde(rename = "South-Dakota-school")]
    pub south_dakota_school: SouthDakotaSchool,
    #[serde(rename = "Tennessee-school")]
    pub tennessee_school: TennesseeSchool,
    #[serde(rename = "Texas-school")]
    pub texas_school: TexasSchool,
    #[serde(rename = "Utah-school")]
    pub utah_school: UtahSchool,
    #[serde(rename = "Vermont-school")]
    pub vermont_school: VermontSchool,
    #[serde(rename = "Virginia-school")]
    pub virginia_school: VirginiaSchool,
    #[serde(rename = "Washington-DC-school")]
    pub washington_dc_school: WashingtonDcSchool,
    #[serde(rename = "Washington-school")]
    pub washington_school: WashingtonSchool,
    #[serde(rename = "West-Virginia-school")]
    pub west_virginia_school: WestVirginiaSchool,
    #[serde(rename = "Wisconsin-school")]
    pub wisconsin_school: WisconsinSchool,
    #[serde(rename = "Wyoming-school")]
    pub wyoming_school: WyomingSchool,
    #[serde(rename = "American-Samoa-school")]
    pub american_samoa_school: AmericanSamoaSchool,
    #[serde(rename = "Bureau-of-Indian-Affairs-school")]
    pub bureau_of_indian_affairs_school: BureauOfIndianAffairsSchool,
    #[serde(rename = "District-of-Columbia-school")]
    pub district_of_columbia_school: DistrictOfColumbiaSchool,
    #[serde(rename = "Guam-school")]
    pub guam_school: GuamSchool,
    #[serde(rename = "Mississippi-school")]
    pub mississippi_school: MississippiSchool,
    #[serde(rename = "Other-school")]
    pub other_school: OtherSchool,
    #[serde(rename = "Pennsylvania-school")]
    pub pennsylvania_school: PennsylvaniaSchool,
    #[serde(rename = "Puerto-Rico-school")]
    pub puerto_rico_school: PuertoRicoSchool,
    #[serde(rename = "Virgin-Islands-school")]
    pub virgin_islands_school: VirginIslandsSchool,
    #[serde(rename = "zip-codes")]
    pub zip_codes: ZipCodes,
    #[serde(rename = "us-cities")]
    pub us_cities: UsCities,
    #[serde(rename = "content-type")]
    pub content_type: ContentType,
    #[serde(rename = "html-events")]
    pub html_events: HtmlEvents,
    #[serde(rename = "html-tags")]
    pub html_tags: HtmlTags,
    #[serde(rename = "http-request-headers-common-ip-address")]
    pub http_request_headers_common_ip_address: HttpRequestHeadersCommonIpAddress,
    #[serde(rename = "http-request-headers-common-non-standard-examples")]
    pub http_request_headers_common_non_standard_examples: HttpRequestHeadersCommonNonStandardExamples,
    #[serde(rename = "http-request-headers-common-non-standard-fields")]
    pub http_request_headers_common_non_standard_fields: HttpRequestHeadersCommonNonStandardFields,
    #[serde(rename = "http-request-headers-common-standard-examples")]
    pub http_request_headers_common_standard_examples: HttpRequestHeadersCommonStandardExamples,
    #[serde(rename = "http-request-headers-common-standard-fields")]
    pub http_request_headers_common_standard_fields: HttpRequestHeadersCommonStandardFields,
    #[serde(rename = "session-id")]
    pub session_id: SessionId,
    #[serde(rename = "wordlist-skipfish")]
    pub wordlist_skipfish: WordlistSkipfish,
    #[serde(rename = "10-million-password-list-top-100")]
    pub n10_million_password_list_top_100: n10MillionPasswordListTop100,
    #[serde(rename = "10-million-password-list-top-1000")]
    pub n10_million_password_list_top_1000: n10MillionPasswordListTop1000,
    #[serde(rename = "10-million-password-list-top-10000")]
    pub n10_million_password_list_top_10000: n10MillionPasswordListTop10000,
    #[serde(rename = "10-million-password-list-top-100000")]
    pub n10_million_password_list_top_100000: n10MillionPasswordListTop100000,
    #[serde(rename = "10-million-password-list-top-1000000")]
    pub n10_million_password_list_top_1000000: n10MillionPasswordListTop1000000,
    #[serde(rename = "10-million-password-list-top-500")]
    pub n10_million_password_list_top_500: n10MillionPasswordListTop500,
    #[serde(rename = "100k-most-used-passwords-NCSC")]
    pub n100k_most_used_passwords_ncsc: n100kMostUsedPasswordsNcsc,
    #[serde(rename = "10k-most-common")]
    pub n10k_most_common: n10kMostCommon,
    #[serde(rename = "500-worst-passwords")]
    pub n500_worst_passwords: n500WorstPasswords,
    #[serde(rename = "SplashData-2014")]
    pub splash_data_2014: SplashData2014,
    #[serde(rename = "SplashData-2015-1")]
    pub splash_data_2015_1: SplashData20151,
    #[serde(rename = "SplashData-2015-2")]
    pub splash_data_2015_2: SplashData20152,
    pub best1050: Best1050,
    pub best110: Best110,
    pub best15: Best15,
    #[serde(rename = "common-passwords-win")]
    pub common_passwords_win: CommonPasswordsWin,
    #[serde(rename = "four-digit-pin-codes-sorted-by-frequency-withcount")]
    pub four_digit_pin_codes_sorted_by_frequency_withcount: FourDigitPinCodesSortedByFrequencyWithcount,
    #[serde(rename = "medical-devices")]
    pub medical_devices: MedicalDevices,
    #[serde(rename = "top-20-common-SSH-passwords")]
    pub top_20_common_ssh_passwords: Top20CommonSshPasswords,
    #[serde(rename = "top-passwords-shortlist")]
    pub top_passwords_shortlist: TopPasswordsShortlist,
    #[serde(rename = "worst-passwords-2017-top100-slashdata")]
    pub worst_passwords_2017_top100_slashdata: WorstPasswords2017Top100Slashdata,
    #[serde(rename = "milw0rm-dictionary")]
    pub milw0rm_dictionary: Milw0rmDictionary,
    #[serde(rename = "Oracle EBS passwordlist")]
    pub oracle_ebs_passwordlist: OracleEbsPasswordlist,
    #[serde(rename = "Oracle EBS userlist")]
    pub oracle_ebs_userlist: OracleEbsUserlist,
    #[serde(rename = "db2-betterdefaultpasslist")]
    pub db2_betterdefaultpasslist: Db2Betterdefaultpasslist,
    #[serde(rename = "default-passwords")]
    pub default_passwords: DefaultPasswords,
    #[serde(rename = "ftp-betterdefaultpasslist")]
    pub ftp_betterdefaultpasslist: FtpBetterdefaultpasslist,
    #[serde(rename = "mssql-betterdefaultpasslist")]
    pub mssql_betterdefaultpasslist: MssqlBetterdefaultpasslist,
    #[serde(rename = "mysql-betterdefaultpasslist")]
    pub mysql_betterdefaultpasslist: MysqlBetterdefaultpasslist,
    #[serde(rename = "oracle-betterdefaultpasslist")]
    pub oracle_betterdefaultpasslist: OracleBetterdefaultpasslist,
    #[serde(rename = "postgres-betterdefaultpasslist")]
    pub postgres_betterdefaultpasslist: PostgresBetterdefaultpasslist,
    #[serde(rename = "scada-pass")]
    pub scada_pass: ScadaPass,
    #[serde(rename = "ssh-betterdefaultpasslist")]
    pub ssh_betterdefaultpasslist: SshBetterdefaultpasslist,
    #[serde(rename = "telnet-betterdefaultpasslist")]
    pub telnet_betterdefaultpasslist: TelnetBetterdefaultpasslist,
    #[serde(rename = "telnet-phenoelit")]
    pub telnet_phenoelit: TelnetPhenoelit,
    #[serde(rename = "tomcat-betterdefaultpasslist")]
    pub tomcat_betterdefaultpasslist: TomcatBetterdefaultpasslist,
    #[serde(rename = "vnc-betterdefaultpasslist")]
    pub vnc_betterdefaultpasslist: VncBetterdefaultpasslist,
    #[serde(rename = "windows-betterdefaultpasslist")]
    pub windows_betterdefaultpasslist: WindowsBetterdefaultpasslist,
    #[serde(rename = "Sucuri-Top-Wordpress-Passwords")]
    pub sucuri_top_wordpress_passwords: SucuriTopWordpressPasswords,
    #[serde(rename = "multiplesources-passwords-fabian-fingerle")]
    pub multiplesources_passwords_fabian_fingerle: MultiplesourcesPasswordsFabianFingerle,
    #[serde(rename = "python-heralding-sep2019")]
    pub python_heralding_sep2019: PythonHeraldingSep2019,
    #[serde(rename = "wordpress-attacks-july2014")]
    pub wordpress_attacks_july2014: WordpressAttacksJuly2014,
    #[serde(rename = "Keyboard-Combinations")]
    pub keyboard_combinations: KeyboardCombinations,
    #[serde(rename = "000webhost")]
    pub n000webhost: n000webhost,
    #[serde(rename = "Ashley-Madison")]
    pub ashley_madison: AshleyMadison,
    #[serde(rename = "Lizard-Squad")]
    pub lizard_squad: LizardSquad,
    pub adobe100: Adobe100,
    #[serde(rename = "alleged-gmail-passwords")]
    pub alleged_gmail_passwords: AllegedGmailPasswords,
    #[serde(rename = "bible-withcount")]
    pub bible_withcount: BibleWithcount,
    pub bible: Bible,
    pub carders: Carders,
    #[serde(rename = "elitehacker-withcount")]
    pub elitehacker_withcount: ElitehackerWithcount,
    pub elitehacker: Elitehacker,
    #[serde(rename = "faithwriters-withcount")]
    pub faithwriters_withcount: FaithwritersWithcount,
    pub faithwriters: Faithwriters,
    #[serde(rename = "hak5-withcount")]
    pub hak5_withcount: Hak5Withcount,
    pub hak5: Hak5,
    #[serde(rename = "honeynet-withcount")]
    pub honeynet_withcount: HoneynetWithcount,
    pub honeynet: Honeynet,
    pub honeynet2: Honeynet2,
    pub hotmail: Hotmail,
    pub izmy: Izmy,
    #[serde(rename = "md5decryptor-uk")]
    pub md5decryptor_uk: Md5decryptorUk,
    #[serde(rename = "muslimMatch-withcount")]
    pub muslim_match_withcount: MuslimMatchWithcount,
    pub muslim_match: MuslimMatch,
    #[serde(rename = "myspace-withcount")]
    pub myspace_withcount: MyspaceWithcount,
    pub myspace: Myspace,
    #[serde(rename = "phpbb-cleaned-up")]
    pub phpbb_cleaned_up: PhpbbCleanedUp,
    #[serde(rename = "phpbb-withcount")]
    pub phpbb_withcount: PhpbbWithcount,
    pub phpbb: Phpbb,
    #[serde(rename = "porn-unknown-withcount")]
    pub porn_unknown_withcount: PornUnknownWithcount,
    #[serde(rename = "porn-unknown")]
    pub porn_unknown: PornUnknown,
    #[serde(rename = "rockyou-05")]
    pub rockyou_05: Rockyou05,
    #[serde(rename = "rockyou-10")]
    pub rockyou_10: Rockyou10,
    #[serde(rename = "rockyou-15")]
    pub rockyou_15: Rockyou15,
    #[serde(rename = "rockyou-20")]
    pub rockyou_20: Rockyou20,
    #[serde(rename = "rockyou-25")]
    pub rockyou_25: Rockyou25,
    #[serde(rename = "rockyou-30")]
    pub rockyou_30: Rockyou30,
    #[serde(rename = "rockyou-35")]
    pub rockyou_35: Rockyou35,
    #[serde(rename = "rockyou-40")]
    pub rockyou_40: Rockyou40,
    #[serde(rename = "rockyou-45")]
    pub rockyou_45: Rockyou45,
    #[serde(rename = "rockyou-50")]
    pub rockyou_50: Rockyou50,
    #[serde(rename = "rockyou-55")]
    pub rockyou_55: Rockyou55,
    #[serde(rename = "rockyou-60")]
    pub rockyou_60: Rockyou60,
    #[serde(rename = "rockyou-65")]
    pub rockyou_65: Rockyou65,
    #[serde(rename = "rockyou-70")]
    pub rockyou_70: Rockyou70,
    #[serde(rename = "rockyou-75")]
    pub rockyou_75: Rockyou75,
    #[serde(rename = "rockyou-withcount")]
    pub rockyou_withcount: RockyouWithcount,
    pub rockyou: Rockyou,
    pub singles: Singles,
    pub tuscl: Tuscl,
    #[serde(rename = "youporn2012-raw")]
    pub youporn2012_raw: Youporn2012Raw,
    pub youporn2012: Youporn2012,
    pub conficker: Conficker,
    #[serde(rename = "mirai-botnet")]
    pub mirai_botnet: MiraiBotnet,
    #[serde(rename = "Most-Popular-Letter-Passes")]
    pub most_popular_letter_passes: MostPopularLetterPasses,
    #[serde(rename = "PHP-Magic-Hashes")]
    pub php_magic_hashes: PhpMagicHashes,
    #[serde(rename = "1337speak")]
    pub n1337speak: n1337speak,
    #[serde(rename = "korelogic-password")]
    pub korelogic_password: KorelogicPassword,
    #[serde(rename = "password-permutations")]
    pub password_permutations: PasswordPermutations,
    #[serde(rename = "SCRABBLE-hackerhouse")]
    pub scrabble_hackerhouse: ScrabbleHackerhouse,
    #[serde(rename = "cain-and-abel")]
    pub cain_and_abel: CainAndAbel,
    #[serde(rename = "john-the-ripper")]
    pub john_the_ripper: JohnTheRipper,
    #[serde(rename = "UserPassCombo-Jay")]
    pub user_pass_combo_jay: UserPassComboJay,
    #[serde(rename = "probable-v2-wpa-top447")]
    pub probable_v2_wpa_top447: ProbableV2WpaTop447,
    #[serde(rename = "probable-v2-wpa-top4800")]
    pub probable_v2_wpa_top4800: ProbableV2WpaTop4800,
    #[serde(rename = "probable-v2-wpa-top62")]
    pub probable_v2_wpa_top62: ProbableV2WpaTop62,
    #[serde(rename = "bt4-password")]
    pub bt4_password: Bt4Password,
    #[serde(rename = "cirt-default-passwords")]
    pub cirt_default_passwords: CirtDefaultPasswords,
    #[serde(rename = "clarkson-university-82")]
    pub clarkson_university_82: ClarksonUniversity82,
    pub darkc0de: Darkc0de,
    #[serde(rename = "darkweb2017-top10")]
    pub darkweb2017_top10: Darkweb2017Top10,
    #[serde(rename = "darkweb2017-top100")]
    pub darkweb2017_top100: Darkweb2017Top100,
    #[serde(rename = "darkweb2017-top1000")]
    pub darkweb2017_top1000: Darkweb2017Top1000,
    #[serde(rename = "darkweb2017-top10000")]
    pub darkweb2017_top10000: Darkweb2017Top10000,
    #[serde(rename = "der-postillon")]
    pub der_postillon: DerPostillon,
    #[serde(rename = "dutch_wordlist")]
    pub dutch_wordlist: DutchWordlist,
    #[serde(rename = "mssql-passwords-nansh0u-guardicore")]
    pub mssql_passwords_nansh0u_guardicore: MssqlPasswordsNansh0uGuardicore,
    pub openwall: Openwall,
    #[serde(rename = "probable-v2-top12000")]
    pub probable_v2_top12000: ProbableV2Top12000,
    #[serde(rename = "probable-v2-top1575")]
    pub probable_v2_top1575: ProbableV2Top1575,
    #[serde(rename = "probable-v2-top207")]
    pub probable_v2_top207: ProbableV2Top207,
    #[serde(rename = "richelieu-french-top20000")]
    pub richelieu_french_top20000: RichelieuFrenchTop20000,
    #[serde(rename = "richelieu-french-top5000")]
    pub richelieu_french_top5000: RichelieuFrenchTop5000,
    #[serde(rename = "stupid-ones-in-production")]
    pub stupid_ones_in_production: StupidOnesInProduction,
    #[serde(rename = "twitter-banned")]
    pub twitter_banned: TwitterBanned,
    #[serde(rename = "unkown-azul")]
    pub unkown_azul: UnkownAzul,
    #[serde(rename = "xato-net-10-million-passwords-10")]
    pub xato_net_10_million_passwords_10: XatoNet10MillionPasswords10,
    #[serde(rename = "xato-net-10-million-passwords-100")]
    pub xato_net_10_million_passwords_100: XatoNet10MillionPasswords100,
    #[serde(rename = "xato-net-10-million-passwords-1000")]
    pub xato_net_10_million_passwords_1000: XatoNet10MillionPasswords1000,
    #[serde(rename = "xato-net-10-million-passwords-10000")]
    pub xato_net_10_million_passwords_10000: XatoNet10MillionPasswords10000,
    #[serde(rename = "xato-net-10-million-passwords-100000")]
    pub xato_net_10_million_passwords_100000: XatoNet10MillionPasswords100000,
    #[serde(rename = "xato-net-10-million-passwords-1000000")]
    pub xato_net_10_million_passwords_1000000: XatoNet10MillionPasswords1000000,
    #[serde(rename = "xato-net-10-million-passwords-dup")]
    pub xato_net_10_million_passwords_dup: XatoNet10MillionPasswordsDup,
    #[serde(rename = "xato-net-10-million-passwords")]
    pub xato_net_10_million_passwords: XatoNet10MillionPasswords,
    #[serde(rename = "CommonAdminBase64")]
    pub common_admin_base64: CommonAdminBase64,
    #[serde(rename = "multiplesources-users-fabian-fingerle")]
    pub multiplesources_users_fabian_fingerle: MultiplesourcesUsersFabianFingerle,
    #[serde(rename = "familynames-usa-top1000")]
    pub familynames_usa_top1000: FamilynamesUsaTop1000,
    #[serde(rename = "femalenames-usa-top1000")]
    pub femalenames_usa_top1000: FemalenamesUsaTop1000,
    #[serde(rename = "malenames-usa-top1000")]
    pub malenames_usa_top1000: MalenamesUsaTop1000,
    pub names: Names,
    #[serde(rename = "cirt-default-usernames")]
    pub cirt_default_usernames: CirtDefaultUsernames,
    #[serde(rename = "mssql-usernames-nansh0u-guardicore")]
    pub mssql_usernames_nansh0u_guardicore: MssqlUsernamesNansh0uGuardicore,
    #[serde(rename = "top-usernames-shortlist")]
    pub top_usernames_shortlist: TopUsernamesShortlist,
    #[serde(rename = "xato-net-10-million-usernames-dup")]
    pub xato_net_10_million_usernames_dup: XatoNet10MillionUsernamesDup,
    #[serde(rename = "xato-net-10-million-usernames")]
    pub xato_net_10_million_usernames: XatoNet10MillionUsernames,
    pub hashesorg2019: Hashesorg2019,
    #[serde(rename = "weakpass_2a")]
    pub weakpass_2a: Weakpass2a,
    #[serde(rename = "weakpass_2")]
    pub weakpass_2: Weakpass2,
    #[serde(rename = "HashesOrg")]
    pub hashes_org: HashesOrg,
    #[serde(rename = "weakpass_1")]
    pub weakpass_1: Weakpass1,
    #[serde(rename = "DCHTPassv1")]
    pub dchtpassv1: Dchtpassv1,
    pub weakpass: Weakpass,
    #[serde(rename = "DicAss")]
    pub dic_ass: DicAss,
    #[serde(rename = "weakpass_2_wifi")]
    pub weakpass_2_wifi: Weakpass2Wifi,
    #[serde(rename = "weakpass_wifi_1")]
    pub weakpass_wifi_1: WeakpassWifi1,
    #[serde(rename = "Top2Billion-probable-v2")]
    pub top2billion_probable_v2: Top2BillionProbableV2,
    #[serde(rename = "hk_hlm_founds")]
    pub hk_hlm_founds: HkHlmFounds,
    pub breachcompilation: Breachcompilation,
    #[serde(rename = "Nummer_DB")]
    pub nummer_db: NummerDb,
    #[serde(rename = "b0n3z-sorted-wordlist")]
    pub b0n3z_sorted_wordlist: B0n3zSortedWordlist,
    #[serde(rename = "only_latin")]
    pub only_latin: OnlyLatin,
    #[serde(rename = "Md5decrypt-awesome-wordlist")]
    pub md5decrypt_awesome_wordlist: Md5decryptAwesomeWordlist,
    pub b0n3z: B0n3z,
    pub antipublic: Antipublic,
    #[serde(rename = "Top353Million-probable-v2")]
    pub top353million_probable_v2: Top353MillionProbableV2,
    #[serde(rename = "passcape_comp")]
    pub passcape_comp: PasscapeComp,
    #[serde(rename = "EvilGhost")]
    pub evil_ghost: EvilGhost,
    #[serde(rename = "Top109Million-probable-v2")]
    pub top109million_probable_v2: Top109MillionProbableV2,
    #[serde(rename = "InsideProFull")]
    pub inside_pro_full: InsideProFull,
    pub kac: Kac,
    pub crackstation: Crackstation,
    #[serde(rename = "Super_mega_dic")]
    pub super_mega_dic: SuperMegaDic,
    pub uniq: Uniq,
    #[serde(rename = "passwords_collection")]
    pub passwords_collection: PasswordsCollection,
    #[serde(rename = "HyperionOnHackForumsNetRELEASE")]
    pub hyperion_on_hack_forums_net_release: HyperionOnHackForumsNetRelease,
    #[serde(rename = "MegaCracker")]
    pub mega_cracker: MegaCracker,
    #[serde(rename = "WordlistBySheez_v8")]
    pub wordlist_by_sheez_v8: WordlistBySheezV8,
    pub rp4: Rp4,
    #[serde(rename = "Top29Million-probable-v2")]
    pub top29million_probable_v2: Top29MillionProbableV2,
    pub rp2: Rp2,
    #[serde(rename = "passwords")]
    pub passwords2: Passwords2,
    #[serde(rename = "Wordlist_82_million")]
    pub wordlist_82_million: Wordlist82Million,
    pub lolwtfhax: Lolwtfhax,
    #[serde(rename = "eNtr0pY_ALL_sort_uniq")]
    pub e_ntr0p_y_all_sort_uniq: ENtr0pYAllSortUniq,
    #[serde(rename = "MIX_logins-email-2016")]
    pub mix_logins_email_2016: MixLoginsEmail2016,
    pub hashkiller: Hashkiller,
    #[serde(rename = "MECA Passlist")]
    pub meca_passlist: MecaPasslist,
    #[serde(rename = "crackstation-human-only")]
    pub crackstation_human_only: CrackstationHumanOnly,
    #[serde(rename = "Backtrack_big_password_library")]
    pub backtrack_big_password_library: BacktrackBigPasswordLibrary,
    #[serde(rename = "naxxatoe-dict-total-new-unsorted")]
    pub naxxatoe_dict_total_new_unsorted: NaxxatoeDictTotalNewUnsorted,
    #[serde(rename = "HYPER-WORDLIST-DIC")]
    pub hyper_wordlist_dic: HyperWordlistDic,
    #[serde(rename = "Hashcat_pot")]
    pub hashcat_pot: HashcatPot,
    #[serde(rename = "ErrorNeo_mixed_raw_v_0")]
    pub error_neo_mixed_raw_v_0: ErrorNeoMixedRawV0,
    #[serde(rename = "wordlist_by_Kakoluk")]
    pub wordlist_by_kakoluk: WordlistByKakoluk,
    #[serde(rename = "wordlist_by_Sheez_v6")]
    pub wordlist_by_sheez_v6: WordlistBySheezV6,
    #[serde(rename = "real_english")]
    pub real_english: RealEnglish,
    #[serde(rename = "hashkiller_output")]
    pub hashkiller_output: HashkillerOutput,
    #[serde(rename = "WordList-Collection-clean")]
    pub word_list_collection_clean: WordListCollectionClean,
    pub hashash: Hashash,
    #[serde(rename = "M3G_THI_CTH_WORDLIST_CLEANED")]
    pub m3g_thi_cth_wordlist_cleaned: M3GThiCthWordlistCleaned,
    #[serde(rename = "real-pass_login")]
    pub real_pass_login: RealPassLogin,
    #[serde(rename = "mega_slovar")]
    pub mega_slovar: MegaSlovar,
    #[serde(rename = "231_Mio_PWs_min_8_digits")]
    pub n231_mio_pws_min_8_digits: n231MioPwsMin8Digits,
    #[serde(rename = "random_social_usernamesupd")]
    pub random_social_usernamesupd: RandomSocialUsernamesupd,
    pub collection: Collection,
    #[serde(rename = "weakpass_2p")]
    pub weakpass_2p: Weakpass2p,
    pub domains: Domains,
    #[serde(rename = "SkullSecurityComp")]
    pub skull_security_comp: SkullSecurityComp,
    #[serde(rename = "fling_top")]
    pub fling_top: FlingTop,
    #[serde(rename = "adobe_users")]
    pub adobe_users: AdobeUsers,
    #[serde(rename = "Top1pt6Million-probable-v2")]
    pub top1pt6million_probable_v2: Top1pt6MillionProbableV2,
    #[serde(rename = "BestByChesteRock#1")]
    pub best_by_cheste_rock_1: BestByChesteRock1,
    #[serde(rename = "most_security")]
    pub most_security: MostSecurity,
    pub dazzlepod: Dazzlepod,
    #[serde(rename = "gmail-alleged")]
    pub gmail_alleged: GmailAlleged,
    #[serde(rename = "gmail_out_pass")]
    pub gmail_out_pass: GmailOutPass,
    #[serde(rename = "member_login")]
    pub member_login: MemberLogin,
    pub gmail: Gmail,
    pub sqlmap: Sqlmap,
    pub linkedin: Linkedin,
    #[serde(rename = "10_million_password_list_top_1000000")]
    pub n10_million_password_list_top_10000002: n10MillionPasswordListTop10000002,
    #[serde(rename = "words_usernames")]
    pub words_usernames: WordsUsernames,
    pub gamigo: Gamigo,
    #[serde(rename = "soundcloud_usernames")]
    pub soundcloud_usernames: SoundcloudUsernames,
    pub wordlist: Wordlist,
    pub antichat: Antichat,
    #[serde(rename = "cleared_primary_passlis_v2")]
    pub cleared_primary_passlis_v2: ClearedPrimaryPasslisV2,
    pub rp3: Rp3,
    pub mailpassname: Mailpassname,
    #[serde(rename = "aminno_member")]
    pub aminno_member: AminnoMember,
    #[serde(rename = "Misc")]
    pub misc: Misc,
    #[serde(rename = "3,000,000  combo list")]
    pub n3_000_000_combo_list: n3000000ComboList,
    #[serde(rename = "Custom-WPA")]
    pub custom_wpa: CustomWpa,
    pub huge: Huge,
    #[serde(rename = "mailpass_17")]
    pub mailpass_17: Mailpass17,
    pub xsplit: Xsplit,
    #[serde(rename = "NetZwerg")]
    pub net_zwerg: NetZwerg,
    #[serde(rename = "enwiki-20140502-all-titles_wordlists")]
    pub enwiki_20140502_all_titles_wordlists: Enwiki20140502AllTitlesWordlists,
    pub mail: Mail,
    #[serde(rename = "wordlist-final")]
    pub wordlist_final: WordlistFinal,
    #[serde(rename = "vb_passwords")]
    pub vb_passwords: VbPasswords,
    #[serde(rename = "wordlist_www")]
    pub wordlist_www: WordlistWww,
    #[serde(rename = "UT2004")]
    pub ut2004: Ut2004,
    #[serde(rename = "UltimatePasswordsList")]
    pub ultimate_passwords_list: UltimatePasswordsList,
    #[serde(rename = "clean_v2_out_pass")]
    pub clean_v2_out_pass: CleanV2OutPass,
    pub mangled: Mangled,
    #[serde(rename = "aminno_member_email_parsed")]
    pub aminno_member_email_parsed: AminnoMemberEmailParsed,
    #[serde(rename = "wordpress_usernames")]
    pub wordpress_usernames: WordpressUsernames,
    #[serde(rename = "Top304Thousand-probable-v2")]
    pub top304thousand_probable_v2: Top304ThousandProbableV2,
    #[serde(rename = "Argon_Wordlist_v2")]
    pub argon_wordlist_v2: ArgonWordlistV2,
    #[serde(rename = "AllRounder")]
    pub all_rounder: AllRounder,
    #[serde(rename = "International1")]
    pub international1: International1,
    #[serde(rename = "roblox_usernames")]
    pub roblox_usernames: RobloxUsernames,
    #[serde(rename = "mail_out_pass")]
    pub mail_out_pass: MailOutPass,
    #[serde(rename = "TinyButMighty")]
    pub tiny_but_mighty: TinyButMighty,
    #[serde(rename = "1,4_Mio_most_common_passwords")]
    pub n1_4_mio_most_common_passwords: n14MioMostCommonPasswords,
    #[serde(rename = "wpalist-clean_37_Mio")]
    pub wpalist_clean_37_mio: WpalistClean37Mio,
    #[serde(rename = "Wordlist")]
    pub wordlist2: Wordlist2,
    #[serde(rename = "Super-WPA")]
    pub super_wpa: SuperWpa,
    #[serde(rename = "davajj_ultimate_wordlist")]
    pub davajj_ultimate_wordlist: DavajjUltimateWordlist,
    #[serde(rename = "wordlist2")]
    pub wordlist22: Wordlist22,
    #[serde(rename = "email_logins")]
    pub email_logins: EmailLogins,
    #[serde(rename = "Sprashivairu")]
    pub sprashivairu: Sprashivairu,
    pub lulzsec: Lulzsec,
    pub human3: Human3,
    #[serde(rename = "yandex-alleged")]
    pub yandex_alleged: YandexAlleged,
    #[serde(rename = "wordlist-by-darkircop")]
    pub wordlist_by_darkircop: WordlistByDarkircop,
    #[serde(rename = "English")]
    pub english: English,
    pub human1: Human1,
    pub bfield: Bfield,
    pub kippo: Kippo,
    #[serde(rename = "Common")]
    pub common2: Common2,
    #[serde(rename = "10_million_password_list_top_100000")]
    pub n10_million_password_list_top_1000002: n10MillionPasswordListTop1000002,
    #[serde(rename = "logins")]
    pub logins2: Logins2,
    pub human4: Human4,
    #[serde(rename = "MusicBrainz_wordlists")]
    pub music_brainz_wordlists: MusicBrainzWordlists,
    pub vkontakte: Vkontakte,
    #[serde(rename = "USA_logins-email-2015")]
    pub usa_logins_email_2015: UsaLoginsEmail2015,
    pub gawker: Gawker,
    pub yahoo: Yahoo,
    pub realpass3: Realpass3,
    #[serde(rename = "WordList843")]
    pub word_list843: WordList843,
    #[serde(rename = "instagram_hashtags")]
    pub instagram_hashtags: InstagramHashtags,
    #[serde(rename = "webhost000(thechief)")]
    pub webhost000_thechief: Webhost000Thechief,
    pub freerainbowtables: Freerainbowtables,
    pub theargon: Theargon,
    #[serde(rename = "logins_en_ru")]
    pub logins_en_ru: LoginsEnRu,
    #[serde(rename = "leaked_email_2014")]
    pub leaked_email_2014: LeakedEmail2014,
    #[serde(rename = "InsideProFound")]
    pub inside_pro_found: InsideProFound,
    #[serde(rename = "cracklib-words")]
    pub cracklib_words: CracklibWords,
    #[serde(rename = "Cracklib")]
    pub cracklib: Cracklib,
    pub general: General,
    #[serde(rename = "GDict")]
    pub gdict: Gdict,
    #[serde(rename = "thedefinitvepasswordlist(complete)")]
    pub thedefinitvepasswordlist_complete: ThedefinitvepasswordlistComplete,
    #[serde(rename = "md5this-06")]
    pub md5this_06: Md5this06,
    #[serde(rename = "International2")]
    pub international2: International2,
    pub mailru: Mailru,
    #[serde(rename = "1000000pass_yandex-ru_out_pass")]
    pub n1000000pass_yandex_ru_out_pass: n1000000passYandexRuOutPass,
    #[serde(rename = "Computer related")]
    pub computer_related: ComputerRelated,
    #[serde(rename = "imdb_wordlists")]
    pub imdb_wordlists: ImdbWordlists,
    pub dictionary: Dictionary,
    #[serde(rename = "email-pass games")]
    pub email_pass_games: EmailPassGames,
    #[serde(rename = "6d58207a")]
    pub n6d58207a: n6d58207a,
    #[serde(rename = "vk_nickname")]
    pub vk_nickname: VkNickname,
    #[serde(rename = "Ashley_Madison")]
    pub ashley_madison2: AshleyMadison2,
    #[serde(rename = "openlibrary_wordlist")]
    pub openlibrary_wordlist: OpenlibraryWordlist,
    #[serde(rename = "forbes_users")]
    pub forbes_users: ForbesUsers,
    pub misc2013: Misc2013,
    #[serde(rename = "bad_5")]
    pub bad_5: Bad5,
    pub hackforums: Hackforums,
    pub medium: Medium,
    #[serde(rename = "Thematic")]
    pub thematic: Thematic,
    #[serde(rename = "ThematicSummary")]
    pub thematic_summary: ThematicSummary,
    pub aha: Aha,
    #[serde(rename = "681a79de")]
    pub n681a79de: n681a79de,
    pub realpass2: Realpass2,
    pub b6a9f16a: B6a9f16a,
    pub familii: Familii,
    pub mupass: Mupass,
    #[serde(rename = "Ragnarok Online 2003")]
    pub ragnarok_online_2003: RagnarokOnline2003,
    pub d5a9ec3f: D5a9ec3f,
    #[serde(rename = "facebook-first")]
    pub facebook_first: FacebookFirst,
    #[serde(rename = "facebook-firstnames")]
    pub facebook_firstnames: FacebookFirstnames,
    #[serde(rename = "facebook-last")]
    pub facebook_last: FacebookLast,
    #[serde(rename = "facebook-lastnames")]
    pub facebook_lastnames: FacebookLastnames,
    #[serde(rename = "2,275,000 password list")]
    pub n2_275_000_password_list: n2275000PasswordList,
    #[serde(rename = "Mats(999k)edited")]
    pub mats_999k_edited: Mats999kEdited,
    pub ffgbeach: Ffgbeach,
    pub human2: Human2,
    #[serde(rename = "1222532f")]
    pub n1222532f: n1222532f,
    #[serde(rename = "ThisIsItPWLFINAL")]
    pub this_is_it_pwlfinal: ThisIsItPwlfinal,
    #[serde(rename = "Tech and science")]
    pub tech_and_science: TechAndScience,
    #[serde(rename = "music_songs")]
    pub music_songs: MusicSongs,
    #[serde(rename = "Russian_domains")]
    pub russian_domains: RussianDomains,
    #[serde(rename = "_hugedb")]
    pub hugedb: Hugedb,
    #[serde(rename = "enwiktionary-20140522-all-titles_wordlists")]
    pub enwiktionary_20140522_all_titles_wordlists: Enwiktionary20140522AllTitlesWordlists,
    pub eb30e455: Eb30e455,
    pub stratfor: Stratfor,
    pub supercommon: Supercommon,
    #[serde(rename = "InsideProMini")]
    pub inside_pro_mini: InsideProMini,
    #[serde(rename = "3d2c6707")]
    pub n3d2c6707: n3d2c6707,
    #[serde(rename = "combocanem765927USERPASS")]
    pub combocanem765927userpass: Combocanem765927Userpass,
    #[serde(rename = "BestByChesteRock3")]
    pub best_by_cheste_rock3: BestByChesteRock3,
    #[serde(rename = "Combo18e")]
    pub combo18e: Combo18e,
    pub bigdict: Bigdict,
    #[serde(rename = "bad_6")]
    pub bad_6: Bad6,
    pub rootkit: Rootkit,
    #[serde(rename = "enjin_usernames")]
    pub enjin_usernames: EnjinUsernames,
    pub xac2: Xac2,
    pub xaf2: Xaf2,
    #[serde(rename = "super pwl")]
    pub super_pwl: SuperPwl,
    pub fanfiction: Fanfiction,
    #[serde(rename = "German")]
    pub german: German,
    #[serde(rename = "Names_net")]
    pub names_net: NamesNet,
    pub vk: Vk,
    #[serde(rename = "cracklib")]
    pub cracklib2: Cracklib2,
    #[serde(rename = "PASSWORDWORDLIST")]
    pub passwordwordlist: Passwordwordlist,
    pub tbswordlist1: Tbswordlist1,
    pub b5fb43b6: B5fb43b6,
    pub realpass: Realpass,
    #[serde(rename = "FacebookWords")]
    pub facebook_words: FacebookWords,
    #[serde(rename = "polska-wordlist2")]
    pub polska_wordlist2: PolskaWordlist2,
    pub dico: Dico,
    pub xag2: Xag2,
    #[serde(rename = "Word02")]
    pub word02: Word02,
    #[serde(rename = "0vhfirstpass")]
    pub n0vhfirstpass: n0vhfirstpass,
    pub milw0rm: Milw0rm,
    #[serde(rename = "372481d4")]
    pub n372481d4: n372481d4,
    pub f04d073b: F04d073b,
    #[serde(rename = "argon-outher")]
    pub argon_outher: ArgonOuther,
    pub xad2: Xad2,
    #[serde(rename = "Top12Thousand-probable-v2")]
    pub top12thousand_probable_v2: Top12ThousandProbableV2,
    pub yandexru: Yandexru,
    pub blackhat: Blackhat,
    #[serde(rename = "delicious_takoyaki")]
    pub delicious_takoyaki: DeliciousTakoyaki,
    #[serde(rename = "german-dic")]
    pub german_dic: GermanDic,
    #[serde(rename = "BestByChesteRock2")]
    pub best_by_cheste_rock2: BestByChesteRock2,
    #[serde(rename = "world_poker")]
    pub world_poker: WorldPoker,
    #[serde(rename = "geonames_wordlists")]
    pub geonames_wordlists: GeonamesWordlists,
    pub surname2: Surname2,
    #[serde(rename = "Email_Pass_Mutil_hoster_14122015")]
    pub email_pass_mutil_hoster_14122015: EmailPassMutilHoster14122015,
    pub passwordlist: Passwordlist,
    #[serde(rename = "10_million_password_list_top_10000")]
    pub n10_million_password_list_top_100002: n10MillionPasswordListTop100002,
    pub nmap: Nmap,
    #[serde(rename = "MAJYPWL")]
    pub majypwl: Majypwl,
    #[serde(rename = "mixed 660k  PWs")]
    pub mixed_660k_pws: Mixed660kPws,
    pub randompastebin1: Randompastebin1,
    #[serde(rename = "music_artists")]
    pub music_artists: MusicArtists,
    #[serde(rename = "vk_surnames")]
    pub vk_surnames: VkSurnames,
    #[serde(rename = "5497a0c7")]
    pub n5497a0c7: n5497a0c7,
    pub whitefox: Whitefox,
    pub c046a38b: C046a38b,
    pub xab2: Xab2,
    pub name: Name,
    #[serde(rename = "Abbreviation")]
    pub abbreviation: Abbreviation,
    pub used: Used,
    #[serde(rename = "Gamers")]
    pub gamers: Gamers,
    #[serde(rename = "vk_names")]
    pub vk_names: VkNames,
    pub allwords: Allwords,
    #[serde(rename = "30k")]
    pub n30k: n30k,
    #[serde(rename = "29e5152a")]
    pub n29e5152a: n29e5152a,
    pub mayhem: Mayhem,
    #[serde(rename = "InsideOtherByChesteRock")]
    pub inside_other_by_cheste_rock: InsideOtherByChesteRock,
    pub pron: Pron,
    #[serde(rename = "[COMBO] NEW")]
    pub combo_new: ComboNew,
    #[serde(rename = "finnish-unknown")]
    pub finnish_unknown: FinnishUnknown,
    #[serde(rename = "BruteX_password")]
    pub brute_x_password: BruteXPassword,
    #[serde(rename = "10k_most_common")]
    pub n10k_most_common2: n10kMostCommon2,
    #[serde(rename = "common_roots")]
    pub common_roots: CommonRoots,
    #[serde(rename = "Army")]
    pub army: Army,
    #[serde(rename = "BIG-WPA-LIST-1")]
    pub big_wpa_list_1: BigWpaList1,
    #[serde(rename = "music_albums")]
    pub music_albums: MusicAlbums,
    pub fe2a5103: Fe2a5103,
    pub xaa2: Xaa2,
    pub b5791f06: B5791f06,
    #[serde(rename = "ThC PWL (81k)")]
    pub th_c_pwl_81k: ThCPwl81k,
    pub happybirthdaytoeq: Happybirthdaytoeq,
    #[serde(rename = "actress-characters_nopunct_nospace_lower")]
    pub actress_characters_nopunct_nospace_lower: ActressCharactersNopunctNospaceLower,
    #[serde(rename = "42500m")]
    pub n42500m: n42500m,
    #[serde(rename = "facebook-names-unique")]
    pub facebook_names_unique: FacebookNamesUnique,
    pub walla: Walla,
    #[serde(rename = "Best64ByChesteRock")]
    pub best64by_cheste_rock: Best64ByChesteRock,
    #[serde(rename = "Surnames")]
    pub surnames: Surnames,
    pub ebooks: Ebooks,
    #[serde(rename = "surnames")]
    pub surnames2: Surnames2,
    pub cinnescape: Cinnescape,
    #[serde(rename = "Mru")]
    pub mru: Mru,
    #[serde(rename = "3wifi-wordlist")]
    pub n3wifi_wordlist: n3wifiWordlist,
    #[serde(rename = "54fbb463")]
    pub n54fbb463: n54fbb463,
    pub encyclopedia1: Encyclopedia1,
    #[serde(rename = "unknown-porn")]
    pub unknown_porn: UnknownPorn,
    pub cain: Cain,
    #[serde(rename = "BIG-WPA-LIST-2")]
    pub big_wpa_list_2: BigWpaList2,
    #[serde(rename = "CainandAbel")]
    pub cainand_abel: CainandAbel,
    #[serde(rename = "_Words")]
    pub words: Words,
    #[serde(rename = "inet-mac")]
    pub inet_mac: InetMac,
    #[serde(rename = "plain-text")]
    pub plain_text: PlainText,
    #[serde(rename = "top_domains")]
    pub top_domains: TopDomains,
    #[serde(rename = "russian_users")]
    pub russian_users: RussianUsers,
    #[serde(rename = "InsideProMicro")]
    pub inside_pro_micro: InsideProMicro,
    pub john: John,
    #[serde(rename = "Fabfreeforums")]
    pub fabfreeforums: Fabfreeforums,
    pub weekend: Weekend,
    #[serde(rename = "final-wordlist")]
    pub final_wordlist: FinalWordlist,
    #[serde(rename = "Elitepwl")]
    pub elitepwl: Elitepwl,
    #[serde(rename = "Other PWL [1]")]
    pub other_pwl_1: OtherPwl1,
    pub leets: Leets,
    pub tomsawyer: Tomsawyer,
    #[serde(rename = "mEga PWL")]
    pub m_ega_pwl: MEgaPwl,
    pub wpa: Wpa,
    #[serde(rename = "2PWL")]
    pub n2pwl: n2Pwl,
    #[serde(rename = "Some_passw_28")]
    pub some_passw_28: SomePassw28,
    #[serde(rename = "tetrisfriends_usernames")]
    pub tetrisfriends_usernames: TetrisfriendsUsernames,
    #[serde(rename = "sony-delboca")]
    pub sony_delboca: SonyDelboca,
    #[serde(rename = "music_misc")]
    pub music_misc: MusicMisc,
    #[serde(rename = "awakened-lands")]
    pub awakened_lands: AwakenedLands,
    #[serde(rename = "ICQ-Popular")]
    pub icq_popular: IcqPopular,
    pub mini: Mini,
    #[serde(rename = "Popular-Russia")]
    pub popular_russia: PopularRussia,
    #[serde(rename = "unix-fresh-scanner")]
    pub unix_fresh_scanner: UnixFreshScanner,
    #[serde(rename = "14k_ru_out_pass")]
    pub n14k_ru_out_pass: n14kRuOutPass,
    #[serde(rename = "mini-pass")]
    pub mini_pass: MiniPass,
    pub blackstar: Blackstar,
    pub net: Net,
    pub abc: Abc,
    pub random: Random,
    pub sonyleaked: Sonyleaked,
    #[serde(rename = "WordList768")]
    pub word_list768: WordList768,
    #[serde(rename = "instagram_usernames")]
    pub instagram_usernames: InstagramUsernames,
    pub quequero: Quequero,
    #[serde(rename = "facebook-lastfirst")]
    pub facebook_lastfirst: FacebookLastfirst,
    #[serde(rename = "English_large_lower")]
    pub english_large_lower: EnglishLargeLower,
    #[serde(rename = "TwoWord")]
    pub two_word: TwoWord,
    pub gaming: Gaming,
    pub opnkorea: Opnkorea,
    pub dictionaries: Dictionaries,
    #[serde(rename = "facadecomputer-wordlist")]
    pub facadecomputer_wordlist: FacadecomputerWordlist,
    #[serde(rename = "english")]
    pub english2: English2,
    pub films: Films,
    #[serde(rename = "passwords_youporn2012")]
    pub passwords_youporn2012: PasswordsYouporn2012,
    #[serde(rename = "passwords_youporn2012_raw")]
    pub passwords_youporn2012_raw: PasswordsYouporn2012Raw,
    pub alypaa: Alypaa,
    #[serde(rename = "Top1575-probable2")]
    pub top1575_probable2: Top1575Probable2,
    #[serde(rename = "enwikibooks-20140606-all-titles_wordlists")]
    pub enwikibooks_20140606_all_titles_wordlists: Enwikibooks20140606AllTitlesWordlists,
    #[serde(rename = "HOT_PwList")]
    pub hot_pw_list: HotPwList,
    #[serde(rename = "host pwlist")]
    pub host_pwlist: HostPwlist,
    #[serde(rename = "misc-dictionary")]
    pub misc_dictionary: MiscDictionary,
    #[serde(rename = "Italian")]
    pub italian: Italian,
    #[serde(rename = "lista-password")]
    pub lista_password: ListaPassword,
    #[serde(rename = "routerscan_wordlist_20150530")]
    pub routerscan_wordlist_20150530: RouterscanWordlist20150530,
    #[serde(rename = "Culture")]
    pub culture: Culture,
    #[serde(rename = "facebook-firstlast")]
    pub facebook_firstlast: FacebookFirstlast,
    #[serde(rename = "English_small_lower")]
    pub english_small_lower: EnglishSmallLower,
    pub lower: Lower,
    pub lower3: Lower3,
    pub hellfire: Hellfire,
    #[serde(rename = "facebook-f")]
    pub facebook_f: FacebookF,
    #[serde(rename = "Smerks pwL")]
    pub smerks_pw_l: SmerksPwL,
    #[serde(rename = "world_of_warcraft_usernames")]
    pub world_of_warcraft_usernames: WorldOfWarcraftUsernames,
    #[serde(rename = "host n leet")]
    pub host_n_leet: HostNLeet,
    #[serde(rename = "common-4")]
    pub common_4: Common4,
    #[serde(rename = "Finnish")]
    pub finnish: Finnish,
    #[serde(rename = "bad_2")]
    pub bad_2: Bad2,
    #[serde(rename = "finnish-www")]
    pub finnish_www: FinnishWww,
    #[serde(rename = "06")]
    pub n06: n06,
    #[serde(rename = "mini-qwerty")]
    pub mini_qwerty: MiniQwerty,
    pub numpass: Numpass,
    #[serde(rename = "Danish")]
    pub danish: Danish,
    #[serde(rename = "3360-Common")]
    pub n3360_common: n3360Common,
    #[serde(rename = "prosap-hotel")]
    pub prosap_hotel: ProsapHotel,
    pub quotes: Quotes,
    #[serde(rename = "Danish_large_lower")]
    pub danish_large_lower: DanishLargeLower,
    #[serde(rename = "bad_3")]
    pub bad_3: Bad3,
    #[serde(rename = "02bc69bc")]
    pub n02bc69bc: n02bc69bc,
    #[serde(rename = "3785b57c")]
    pub n3785b57c: n3785b57c,
    #[serde(rename = "tyte pwl(8500)")]
    pub tyte_pwl_8500: TytePwl8500,
    pub titles: Titles,
    #[serde(rename = "acdc%27s_dictionary")]
    pub acdc_27s_dictionary: Acdc27sDictionary,
    #[serde(rename = "Danny PWL")]
    pub danny_pwl: DannyPwl,
    #[serde(rename = "danish")]
    pub danish2: Danish2,
    #[serde(rename = "ipmi_passwords")]
    pub ipmi_passwords: IpmiPasswords,
    #[serde(rename = "Finnish_lower")]
    pub finnish_lower: FinnishLower,
    pub xae2: Xae2,
    #[serde(rename = "dirb_best1050")]
    pub dirb_best1050: DirbBest1050,
    #[serde(rename = "sony-restless-beauty")]
    pub sony_restless_beauty: SonyRestlessBeauty,
    #[serde(rename = "wifimaps-wordlist")]
    pub wifimaps_wordlist: WifimapsWordlist,
    #[serde(rename = "Knuth_big")]
    pub knuth_big: KnuthBig,
    #[serde(rename = "BIG-WPA-LIST-3")]
    pub big_wpa_list_3: BigWpaList3,
    pub mindo: Mindo,
    #[serde(rename = "Midgets bigger common PWL")]
    pub midgets_bigger_common_pwl: MidgetsBiggerCommonPwl,
    #[serde(rename = "Suomifutisnet")]
    pub suomifutisnet: Suomifutisnet,
    #[serde(rename = "default_pass_for_services_unhash")]
    pub default_pass_for_services_unhash: DefaultPassForServicesUnhash,
    pub sunrise: Sunrise,
    #[serde(rename = "patreon_email")]
    pub patreon_email: PatreonEmail,
    pub lineup37: Lineup37,
    pub lineupodd37: Lineupodd37,
    #[serde(rename = "Norwegian")]
    pub norwegian: Norwegian,
    #[serde(rename = "Common_small")]
    pub common_small: CommonSmall,
    pub actors: Actors,
    #[serde(rename = "hkgroup_passwords_sorted")]
    pub hkgroup_passwords_sorted: HkgroupPasswordsSorted,
    #[serde(rename = "10_million_password_list_top_1000")]
    pub n10_million_password_list_top_10002: n10MillionPasswordListTop10002,
    #[serde(rename = "Italian_large_lower")]
    pub italian_large_lower: ItalianLargeLower,
    #[serde(rename = "payas0 host")]
    pub payas0_host: Payas0Host,
    #[serde(rename = "Religion")]
    pub religion: Religion,
    #[serde(rename = "common-passwords")]
    pub common_passwords: CommonPasswords,
    #[serde(rename = "TOP-630-passwords-2009")]
    pub top_630_passwords_2009: Top630Passwords2009,
    #[serde(rename = "Japanese")]
    pub japanese: Japanese,
    pub starin: Starin,
    #[serde(rename = "50k_names")]
    pub n50k_names: n50kNames,
    #[serde(rename = "en_wordlist")]
    pub en_wordlist: EnWordlist,
    #[serde(rename = "facebook-phished")]
    pub facebook_phished: FacebookPhished,
    pub encyclopedia2: Encyclopedia2,
    pub junk: Junk,
    #[serde(rename = "en_GB_wordlist")]
    pub en_gb_wordlist: EnGbWordlist,
    #[serde(rename = "Movies")]
    pub movies: Movies,
    #[serde(rename = "TOP-Passwords-Rdp")]
    pub top_passwords_rdp: TopPasswordsRdp,
    #[serde(rename = "Midgets common PWL")]
    pub midgets_common_pwl: MidgetsCommonPwl,
    #[serde(rename = "en_US_wordlist")]
    pub en_us_wordlist: EnUsWordlist,
    #[serde(rename = "French")]
    pub french: French,
    #[serde(rename = "burnett_top_1024")]
    pub burnett_top_1024: BurnettTop1024,
    pub pbs: Pbs,
    #[serde(rename = "FacebookUsernames")]
    pub facebook_usernames: FacebookUsernames,
    #[serde(rename = "English_extra_lower")]
    pub english_extra_lower: EnglishExtraLower,
    #[serde(rename = "ALL-DICTIONARIES")]
    pub all_dictionaries: AllDictionaries,
    pub lower2: Lower2,
    pub german1: German1,
    pub kali2: Kali2,
    pub casio: Casio,
    #[serde(rename = "faithwriters-nocount")]
    pub faithwriters_nocount: FaithwritersNocount,
    pub soundtracks: Soundtracks,
    #[serde(rename = "unix_passwords")]
    pub unix_passwords: UnixPasswords,
    pub opisrael: Opisrael,
    #[serde(rename = "Criminal and junk")]
    pub criminal_and_junk: CriminalAndJunk,
    #[serde(rename = "NORM&R")]
    pub norm_r: NormR,
    #[serde(rename = "Some_passw_26")]
    pub some_passw_26: SomePassw26,
    #[serde(rename = "10_million_password_list_top_500")]
    pub n10_million_password_list_top_5002: n10MillionPasswordListTop5002,
    pub randompastebin3: Randompastebin3,
    #[serde(rename = "dates01011900-31312020")]
    pub dates01011900_31312020: Dates0101190031312020,
    #[serde(rename = "books_wordlists")]
    pub books_wordlists: BooksWordlists,
    #[serde(rename = "online_brute")]
    pub online_brute: OnlineBrute,
    pub fasttrack: Fasttrack,
    #[serde(rename = "Businessname")]
    pub businessname: Businessname,
    #[serde(rename = "Classic")]
    pub classic: Classic,
    #[serde(rename = "common_pass")]
    pub common_pass: CommonPass,
    #[serde(rename = "wl_fr")]
    pub wl_fr: WlFr,
    #[serde(rename = "French_lower")]
    pub french_lower: FrenchLower,
    pub xah6: Xah6,
    pub line37: Line37,
    #[serde(rename = "common-passwords-2")]
    pub common_passwords_2: CommonPasswords2,
    #[serde(rename = "Unix")]
    pub unix: Unix,
    #[serde(rename = "books_nopunct_nospace_lower")]
    pub books_nopunct_nospace_lower: BooksNopunctNospaceLower,
    #[serde(rename = "MostCommonPass")]
    pub most_common_pass: MostCommonPass,
    #[serde(rename = "words")]
    pub words2: Words2,
    #[serde(rename = "GoodByChesteRock")]
    pub good_by_cheste_rock: GoodByChesteRock,
    #[serde(rename = "List")]
    pub list: List,
    pub jargon2: Jargon2,
    pub voodo: Voodo,
    #[serde(rename = "Knuth")]
    pub knuth: Knuth,
    #[serde(rename = "usenet-login_ids")]
    pub usenet_login_ids: UsenetLoginIds,
    #[serde(rename = "usenet-l")]
    pub usenet_l: UsenetL,
    pub dansk: Dansk,
    pub ud: Ud,
    pub web2: Web2,
    #[serde(rename = "webster-dictionary")]
    pub webster_dictionary: WebsterDictionary,
    pub beale: Beale,
    #[serde(rename = "2of4brif")]
    pub n2of4brif: n2of4brif,
    #[serde(rename = "Top207-probable-v2")]
    pub top207_probable_v2: Top207ProbableV2,
    pub hosts: Hosts,
    #[serde(rename = "usenet-m")]
    pub usenet_m: UsenetM,
    pub kjbible: Kjbible,
    #[serde(rename = "usenet-machines")]
    pub usenet_machines: UsenetMachines,
    #[serde(rename = "snmp_default_pass")]
    pub snmp_default_pass: SnmpDefaultPass,
    #[serde(rename = "RouterScan_PopularPasswords")]
    pub router_scan_popular_passwords: RouterScanPopularPasswords,
    #[serde(rename = "telnet_cisco_default_pass")]
    pub telnet_cisco_default_pass: TelnetCiscoDefaultPass,
    #[serde(rename = "5desk")]
    pub n5desk: n5desk,
    pub league: League,
    pub netflix: Netflix,
    pub megabeast: Megabeast,
    pub kali: Kali,
    pub policy: Policy,
    #[serde(rename = "English_tiny_lower")]
    pub english_tiny_lower: EnglishTinyLower,
    #[serde(rename = "Some_passw_27")]
    pub some_passw_27: SomePassw27,
    #[serde(rename = "Places")]
    pub places: Places,
    #[serde(rename = "Cracking-Illyz-By-Scrappy")]
    pub cracking_illyz_by_scrappy: CrackingIllyzByScrappy,
    #[serde(rename = "burnett_top_500")]
    pub burnett_top_500: BurnettTop500,
    #[serde(rename = "twitter_32m")]
    pub twitter_32m: Twitter32m,
    pub otherpwl2: Otherpwl2,
    #[serde(rename = "passwords2")]
    pub passwords22: Passwords22,
    #[serde(rename = "english-words")]
    pub english_words: EnglishWords,
    #[serde(rename = "Minix")]
    pub minix: Minix,
    pub klichki: Klichki,
    #[serde(rename = "wordlist_top_500PswMangled")]
    pub wordlist_top_500psw_mangled: WordlistTop500PswMangled,
    pub length06: Length06,
    #[serde(rename = "Names_pet")]
    pub names_pet: NamesPet,
    #[serde(rename = "unix-dictionary")]
    pub unix_dictionary: UnixDictionary,
    #[serde(rename = "GoldenPass")]
    pub golden_pass: GoldenPass,
    pub actresses: Actresses,
    pub cow: Cow,
    #[serde(rename = "Polish_lower")]
    pub polish_lower: PolishLower,
    #[serde(rename = "NAMES")]
    pub names2: Names2,
    #[serde(rename = "usenet-n")]
    pub usenet_n: UsenetN,
    #[serde(rename = "Some_passw_23")]
    pub some_passw_23: SomePassw23,
    #[serde(rename = "Polish")]
    pub polish: Polish,
    #[serde(rename = "Dutch")]
    pub dutch: Dutch,
    #[serde(rename = "Dic-for-BR-Names")]
    pub dic_for_br_names: DicForBrNames,
    #[serde(rename = "usenet-names")]
    pub usenet_names: UsenetNames,
    pub otherpwl5: Otherpwl5,
    #[serde(rename = "coyotecult-wordlist")]
    pub coyotecult_wordlist: CoyotecultWordlist,
    pub ethnolog: Ethnolog,
    #[serde(rename = "10_million_password_list_top_100")]
    pub n10_million_password_list_top_1002: n10MillionPasswordListTop1002,
    pub opsea: Opsea,
    #[serde(rename = "CaseMutation")]
    pub case_mutation: CaseMutation,
    #[serde(rename = "da_wordlist")]
    pub da_wordlist: DaWordlist,
    #[serde(rename = "Digits")]
    pub digits: Digits,
    #[serde(rename = "pass_by_frog-416")]
    pub pass_by_frog_416: PassByFrog416,
    #[serde(rename = "Englex")]
    pub englex: Englex,
    #[serde(rename = "Names_last")]
    pub names_last: NamesLast,
    pub eharmony: Eharmony,
    #[serde(rename = "Brizilian")]
    pub brizilian: Brizilian,
    #[serde(rename = "GNU")]
    pub gnu: Gnu,
    pub python: Python,
    #[serde(rename = "uunet-si")]
    pub uunet_si: UunetSi,
    #[serde(rename = "pt_BR_wordlist")]
    pub pt_br_wordlist: PtBrWordlist,
    pub zipcodes: Zipcodes,
    #[serde(rename = "rus_cities_translit")]
    pub rus_cities_translit: RusCitiesTranslit,
    pub yandex: Yandex,
    #[serde(rename = "db2_default_pass")]
    pub db2_default_pass: Db2DefaultPass,
    #[serde(rename = "Japanese_lower")]
    pub japanese_lower: JapaneseLower,
    #[serde(rename = "1000000cl")]
    pub n1000000cl: n1000000cl,
    #[serde(rename = "Keyboard")]
    pub keyboard: Keyboard,
    #[serde(rename = "italian")]
    pub italian2: Italian2,
    #[serde(rename = "advlamer-sequences")]
    pub advlamer_sequences: AdvlamerSequences,
    #[serde(rename = "tims-password-list")]
    pub tims_password_list: TimsPasswordList,
    #[serde(rename = "BigAssPassList")]
    pub big_ass_pass_list: BigAssPassList,
    #[serde(rename = "UTF8")]
    pub utf8: Utf8,
    #[serde(rename = "Boerse PW Liste")]
    pub boerse_pw_liste: BoersePwListe,
    pub length08: Length08,
    #[serde(rename = "08")]
    pub n08: n08,
    pub lcarrol: Lcarrol,
    #[serde(rename = "KeyboardCombo3")]
    pub keyboard_combo3: KeyboardCombo3,
    #[serde(rename = "french-wordlist-accent")]
    pub french_wordlist_accent: FrenchWordlistAccent,
    #[serde(rename = "DefPass")]
    pub def_pass: DefPass,
    #[serde(rename = "fl_rudump")]
    pub fl_rudump: FlRudump,
    #[serde(rename = "fr_wordlist")]
    pub fr_wordlist: FrWordlist,
    #[serde(rename = "IndianNames")]
    pub indian_names: IndianNames,
    #[serde(rename = "89b6c191")]
    pub n89b6c191: n89b6c191,
    #[serde(rename = "nl_wordlist")]
    pub nl_wordlist: NlWordlist,
    pub latina: Latina,
    #[serde(rename = "patreon_Youtube")]
    pub patreon_youtube: PatreonYoutube,
    pub asteroid: Asteroid,
    #[serde(rename = "Chinese")]
    pub chinese: Chinese,
    #[serde(rename = "Korean")]
    pub korean: Korean,
    pub medak: Medak,
    #[serde(rename = "Spanish")]
    pub spanish: Spanish,
    #[serde(rename = "Malagasy")]
    pub malagasy: Malagasy,
    #[serde(rename = "Serbian")]
    pub serbian: Serbian,
    #[serde(rename = "Russian")]
    pub russian: Russian,
    #[serde(rename = "Malayalam")]
    pub malayalam: Malayalam,
    #[serde(rename = "Sanskrit")]
    pub sanskrit: Sanskrit,
    #[serde(rename = "Swedish")]
    pub swedish: Swedish,
    #[serde(rename = "Occitan")]
    pub occitan: Occitan,
    #[serde(rename = "Czech_lower")]
    pub czech_lower: CzechLower,
    #[serde(rename = "Malay")]
    pub malay: Malay,
    #[serde(rename = "Marathi")]
    pub marathi: Marathi,
    #[serde(rename = "Turkish")]
    pub turkish: Turkish,
    #[serde(rename = "Nepali")]
    pub nepali: Nepali,
    #[serde(rename = "Tamil")]
    pub tamil: Tamil,
    #[serde(rename = "Telugu")]
    pub telugu: Telugu,
    #[serde(rename = "Thai")]
    pub thai: Thai,
    #[serde(rename = "Macedonian")]
    pub macedonian: Macedonian,
    #[serde(rename = "Czech")]
    pub czech: Czech,
    #[serde(rename = "Bihari")]
    pub bihari: Bihari,
    #[serde(rename = "Arabic")]
    pub arabic: Arabic,
    #[serde(rename = "Albanian")]
    pub albanian: Albanian,
    #[serde(rename = "Catalan")]
    pub catalan: Catalan,
    #[serde(rename = "Hindi")]
    pub hindi: Hindi,
    #[serde(rename = "Esperanto")]
    pub esperanto: Esperanto,
    #[serde(rename = "Indonesian")]
    pub indonesian: Indonesian,
    #[serde(rename = "Ukrainian")]
    pub ukrainian: Ukrainian,
    pub hafan: Hafan,
    #[serde(rename = "pan-prstenu")]
    pub pan_prstenu: PanPrstenu,
    #[serde(rename = "rus_cities_kbchange")]
    pub rus_cities_kbchange: RusCitiesKbchange,
    #[serde(rename = "Somali")]
    pub somali: Somali,
    #[serde(rename = "Romanian")]
    pub romanian: Romanian,
    #[serde(rename = "Ossetian")]
    pub ossetian: Ossetian,
    #[serde(rename = "Slovene")]
    pub slovene: Slovene,
    #[serde(rename = "Swati")]
    pub swati: Swati,
    #[serde(rename = "Uzbek")]
    pub uzbek: Uzbek,
    #[serde(rename = "Vietnamese")]
    pub vietnamese: Vietnamese,
    #[serde(rename = "Navajo")]
    pub navajo: Navajo,
    #[serde(rename = "Yiddish")]
    pub yiddish: Yiddish,
    #[serde(rename = "Turkmen")]
    pub turkmen: Turkmen,
    #[serde(rename = "Urdu")]
    pub urdu: Urdu,
    #[serde(rename = "Welsh")]
    pub welsh: Welsh,
    #[serde(rename = "Romansh")]
    pub romansh: Romansh,
    #[serde(rename = "Mongolian")]
    pub mongolian: Mongolian,
    #[serde(rename = "Wolof")]
    pub wolof: Wolof,
    #[serde(rename = "Panjabi")]
    pub panjabi: Panjabi,
    #[serde(rename = "Western Frisian")]
    pub western_frisian: WesternFrisian,
    #[serde(rename = "Tibetan")]
    pub tibetan: Tibetan,
    #[serde(rename = "Pashto")]
    pub pashto: Pashto,
    #[serde(rename = "Oriya")]
    pub oriya: Oriya,
    #[serde(rename = "Northern Sami")]
    pub northern_sami: NorthernSami,
    #[serde(rename = "Maltese")]
    pub maltese: Maltese,
    #[serde(rename = "Tonga")]
    pub tonga: Tonga,
    #[serde(rename = "Portuguese")]
    pub portuguese: Portuguese,
    #[serde(rename = "Volapuk")]
    pub volapuk: Volapuk,
    #[serde(rename = "Maori")]
    pub maori: Maori,
    #[serde(rename = "Persian")]
    pub persian: Persian,
    #[serde(rename = "Norwegian Nynorsk")]
    pub norwegian_nynorsk: NorwegianNynorsk,
    #[serde(rename = "Yoruba")]
    pub yoruba: Yoruba,
    #[serde(rename = "Slovak")]
    pub slovak: Slovak,
    #[serde(rename = "Quechua")]
    pub quechua: Quechua,
    #[serde(rename = "Uighur")]
    pub uighur: Uighur,
    #[serde(rename = "Sindhi")]
    pub sindhi: Sindhi,
    #[serde(rename = "Luxembourgish")]
    pub luxembourgish: Luxembourgish,
    #[serde(rename = "Tatar")]
    pub tatar: Tatar,
    #[serde(rename = "Sardinian")]
    pub sardinian: Sardinian,
    #[serde(rename = "Tajik")]
    pub tajik: Tajik,
    #[serde(rename = "Tagalog")]
    pub tagalog: Tagalog,
    #[serde(rename = "Pali")]
    pub pali: Pali,
    #[serde(rename = "Walloon")]
    pub walloon: Walloon,
    #[serde(rename = "international_names")]
    pub international_names: InternationalNames,
    #[serde(rename = "dump-ctf365")]
    pub dump_ctf365: DumpCtf365,
    #[serde(rename = "file-locations")]
    pub file_locations: FileLocations,
    #[serde(rename = "de_wordlist")]
    pub de_wordlist: DeWordlist,
    #[serde(rename = "Assamese")]
    pub assamese: Assamese,
    #[serde(rename = "Abkhaz")]
    pub abkhaz: Abkhaz,
    #[serde(rename = "Chuvash")]
    pub chuvash: Chuvash,
    #[serde(rename = "Bengali")]
    pub bengali: Bengali,
    #[serde(rename = "Armenian")]
    pub armenian: Armenian,
    #[serde(rename = "Afrikaans")]
    pub afrikaans: Afrikaans,
    #[serde(rename = "Church Slavonic")]
    pub church_slavonic: ChurchSlavonic,
    #[serde(rename = "Bashkir")]
    pub bashkir: Bashkir,
    #[serde(rename = "Corsican")]
    pub corsican: Corsican,
    #[serde(rename = "Bambara")]
    pub bambara: Bambara,
    #[serde(rename = "Burmese")]
    pub burmese: Burmese,
    #[serde(rename = "Azerbaijani")]
    pub azerbaijani: Azerbaijani,
    #[serde(rename = "Cornish")]
    pub cornish: Cornish,
    #[serde(rename = "Basque")]
    pub basque: Basque,
    #[serde(rename = "Chechen")]
    pub chechen: Chechen,
    #[serde(rename = "Bulgarian")]
    pub bulgarian: Bulgarian,
    #[serde(rename = "Belarusian")]
    pub belarusian: Belarusian,
    #[serde(rename = "Aragonese")]
    pub aragonese: Aragonese,
    #[serde(rename = "Avaric")]
    pub avaric: Avaric,
    #[serde(rename = "Amharic")]
    pub amharic: Amharic,
    #[serde(rename = "Bosnian")]
    pub bosnian: Bosnian,
    #[serde(rename = "Aymara")]
    pub aymara: Aymara,
    #[serde(rename = "Divehi")]
    pub divehi: Divehi,
    #[serde(rename = "Breton")]
    pub breton: Breton,
    #[serde(rename = "Croatian")]
    pub croatian: Croatian,
    #[serde(rename = "Javanese")]
    pub javanese: Javanese,
    #[serde(rename = "Kurdish")]
    pub kurdish: Kurdish,
    #[serde(rename = "Georgian")]
    pub georgian: Georgian,
    #[serde(rename = "Haitian")]
    pub haitian: Haitian,
    #[serde(rename = "Lingala")]
    pub lingala: Lingala,
    #[serde(rename = "Komi")]
    pub komi: Komi,
    #[serde(rename = "Icelandic")]
    pub icelandic: Icelandic,
    #[serde(rename = "Lao")]
    pub lao: Lao,
    #[serde(rename = "Hungarian")]
    pub hungarian: Hungarian,
    #[serde(rename = "Interlingue")]
    pub interlingue: Interlingue,
    #[serde(rename = "Irish")]
    pub irish: Irish,
    #[serde(rename = "Gaelic")]
    pub gaelic: Gaelic,
    #[serde(rename = "Greek")]
    pub greek: Greek,
    #[serde(rename = "Interlingua")]
    pub interlingua: Interlingua,
    #[serde(rename = "Ido")]
    pub ido: Ido,
    #[serde(rename = "Igbo")]
    pub igbo: Igbo,
    #[serde(rename = "Latvian")]
    pub latvian: Latvian,
    #[serde(rename = "Guarani")]
    pub guarani: Guarani,
    #[serde(rename = "Kirghiz")]
    pub kirghiz: Kirghiz,
    #[serde(rename = "Galician")]
    pub galician: Galician,
    #[serde(rename = "Gujarati")]
    pub gujarati: Gujarati,
    #[serde(rename = "Faroese")]
    pub faroese: Faroese,
    #[serde(rename = "Lithuanian")]
    pub lithuanian: Lithuanian,
    #[serde(rename = "Kalaallisut")]
    pub kalaallisut: Kalaallisut,
    #[serde(rename = "Kinyarwanda")]
    pub kinyarwanda: Kinyarwanda,
    #[serde(rename = "Limburgish")]
    pub limburgish: Limburgish,
    #[serde(rename = "Kannada")]
    pub kannada: Kannada,
    #[serde(rename = "Estonian")]
    pub estonian: Estonian,
    #[serde(rename = "Hebrew")]
    pub hebrew: Hebrew,
    #[serde(rename = "Kazakh")]
    pub kazakh: Kazakh,
    #[serde(rename = "Khmer")]
    pub khmer: Khmer,
    #[serde(rename = "Latin")]
    pub latin: Latin,
    #[serde(rename = "Sundanese")]
    pub sundanese: Sundanese,
    #[serde(rename = "Swahili")]
    pub swahili: Swahili,
    #[serde(rename = "Sinhala")]
    pub sinhala: Sinhala,
    #[serde(rename = "Manx")]
    pub manx: Manx,
    #[serde(rename = "american-english-homophones")]
    pub american_english_homophones: AmericanEnglishHomophones,
    #[serde(rename = "oz_homophones")]
    pub oz_homophones: OzHomophones,
    pub akvaristika: Akvaristika,
    pub lecivky: Lecivky,
    pub myslivost: Myslivost,
    #[serde(rename = "familii-rus")]
    pub familii_rus: FamiliiRus,
    #[serde(rename = "familii-traslit")]
    pub familii_traslit: FamiliiTraslit,
    #[serde(rename = "Muzkie_imena_familii_Cyrillic")]
    pub muzkie_imena_familii_cyrillic: MuzkieImenaFamiliiCyrillic,
    #[serde(rename = "Muzkie_imena_familii_Translit")]
    pub muzkie_imena_familii_translit: MuzkieImenaFamiliiTranslit,
    pub russian2: Russian2,
    #[serde(rename = "Russsian_Cyrillic_Dic")]
    pub russsian_cyrillic_dic: RusssianCyrillicDic,
    pub readme: Readme,
    #[serde(rename = "spain_name")]
    pub spain_name: SpainName,
    #[serde(rename = "spanish-dic")]
    pub spanish_dic: SpanishDic,
    #[serde(rename = "Anti-Oxpass")]
    pub anti_oxpass: AntiOxpass,
    #[serde(rename = "long list")]
    pub long_list: LongList,
    #[serde(rename = "Main Wordlist")]
    pub main_wordlist: MainWordlist,
    #[serde(rename = "Secondary")]
    pub secondary: Secondary,
    #[serde(rename = "user passes projekt 1")]
    pub user_passes_projekt_1: UserPassesProjekt1,
    #[serde(rename = "Wordlist 05-April-2003")]
    pub wordlist_05_april_2003: Wordlist05April2003,
    #[serde(rename = "it_wordlist")]
    pub it_wordlist: ItWordlist,
    #[serde(rename = "Bible")]
    pub bible2: Bible2,
    #[serde(rename = "Cities")]
    pub cities2: Cities2,
    pub os: Os,
    #[serde(rename = "names_all")]
    pub names_all: NamesAll,
    #[serde(rename = "splashdata_2015")]
    pub splashdata_2015: Splashdata2015,
    #[serde(rename = "Cracker-Toolz-Top-1000")]
    pub cracker_toolz_top_1000: CrackerToolzTop1000,
    pub commonnum: Commonnum,
    #[serde(rename = "splashdata_2014")]
    pub splashdata_2014: Splashdata2014,
    pub commons: Commons,
    #[serde(rename = "places")]
    pub places2: Places2,
    #[serde(rename = "African")]
    pub african: African,
    #[serde(rename = "Afrikaans_lower")]
    pub afrikaans_lower: AfrikaansLower,
    #[serde(rename = "[COMBO] Mail - Pass (Sql) 30858")]
    pub combo_mail_pass_sql_30858: ComboMailPassSql30858,
    pub a_goodpwl: AGoodpwl,
    #[serde(rename = "pl_wordlist")]
    pub pl_wordlist: PlWordlist,
    pub cizijmena: Cizijmena,
    pub key86: Key86,
    pub xom: Xom,
    #[serde(rename = "Dates")]
    pub dates2: Dates2,
    #[serde(rename = "hak5-nocount")]
    pub hak5_nocount: Hak5Nocount,
    #[serde(rename = "pt_PT_wordlist")]
    pub pt_pt_wordlist: PtPtWordlist,
    #[serde(rename = "swappernet_top50")]
    pub swappernet_top50: SwappernetTop50,
    pub nicecommon: Nicecommon,
    #[serde(rename = "Names")]
    pub names3: Names3,
    #[serde(rename = "scv4-from-vpn24")]
    pub scv4_from_vpn24: Scv4FromVpn24,
    #[serde(rename = "Hosts")]
    pub hosts2: Hosts2,
    #[serde(rename = "Criminal")]
    pub criminal: Criminal,
    pub czech2: Czech2,
    #[serde(rename = "multi_vendor_cctv_dvr_pass")]
    pub multi_vendor_cctv_dvr_pass: MultiVendorCctvDvrPass,
    pub movies2: Movies2,
    pub phrases: Phrases,
    #[serde(rename = "passwords_clarkson_82")]
    pub passwords_clarkson_82: PasswordsClarkson82,
    #[serde(rename = "sv_wordlist")]
    pub sv_wordlist: SvWordlist,
    #[serde(rename = "common-3")]
    pub common_3: Common3,
    pub music: Music,
    #[serde(rename = "Bomb")]
    pub bomb: Bomb,
    pub toker: Toker,
    #[serde(rename = "german")]
    pub german2: German2,
    pub randompastebin2: Randompastebin2,
    #[serde(rename = "mestint-wordlist")]
    pub mestint_wordlist: MestintWordlist,
    #[serde(rename = "estonian-words")]
    pub estonian_words: EstonianWords,
    #[serde(rename = "names-rus")]
    pub names_rus: NamesRus,
    #[serde(rename = "tiny_wordlist")]
    pub tiny_wordlist: TinyWordlist,
    #[serde(rename = "Dutch_extra_lower")]
    pub dutch_extra_lower: DutchExtraLower,
    pub length07: Length07,
    #[serde(rename = "07")]
    pub n07: n07,
    pub composers: Composers,
    #[serde(rename = "tr_wordlist")]
    pub tr_wordlist: TrWordlist,
    #[serde(rename = "KeyboardCombo6")]
    pub keyboard_combo6: KeyboardCombo6,
    #[serde(rename = "klichki-latin")]
    pub klichki_latin: KlichkiLatin,
    #[serde(rename = "hosts-tx")]
    pub hosts_tx: HostsTx,
    #[serde(rename = "Rapidgator")]
    pub rapidgator: Rapidgator,
    #[serde(rename = "unknown-dating")]
    pub unknown_dating: UnknownDating,
    #[serde(rename = "dictionary_russian_big_translit")]
    pub dictionary_russian_big_translit: DictionaryRussianBigTranslit,
    #[serde(rename = "Logins-RDP")]
    pub logins_rdp: LoginsRdp,
    #[serde(rename = "wordlist_dic")]
    pub wordlist_dic: WordlistDic,
    pub phish: Phish,
    #[serde(rename = "actresses_nopunct_nospace_lower")]
    pub actresses_nopunct_nospace_lower: ActressesNopunctNospaceLower,
    #[serde(rename = "Pad")]
    pub pad: Pad,
    pub otherpwl4: Otherpwl4,
    #[serde(rename = "phishPWL")]
    pub phish_pwl: PhishPwl,
    pub directors: Directors,
    #[serde(rename = "L33t")]
    pub l33t: L33t,
    pub designers: Designers,
    pub producers: Producers,
    #[serde(rename = "english-upper")]
    pub english_upper: EnglishUpper,
    #[serde(rename = "sony-autotrader")]
    pub sony_autotrader: SonyAutotrader,
    #[serde(rename = "sony-greece-pins")]
    pub sony_greece_pins: SonyGreecePins,
    #[serde(rename = "Common_passwords")]
    pub common_passwords2: CommonPasswords3,
    pub writers: Writers,
    pub cinematographers: Cinematographers,
    #[serde(rename = "ru_rzts_unsort")]
    pub ru_rzts_unsort: RuRztsUnsort,
    #[serde(rename = "fi_wordlist")]
    pub fi_wordlist: FiWordlist,
    pub editors: Editors,
    #[serde(rename = "english-proper-names")]
    pub english_proper_names: EnglishProperNames,
    #[serde(rename = "small_first")]
    pub small_first: SmallFirst,
    #[serde(rename = "small_last")]
    pub small_last: SmallLast,
    #[serde(rename = "french-wordlist-sans_accent")]
    pub french_wordlist_sans_accent: FrenchWordlistSansAccent,
    #[serde(rename = "Some_passw_21")]
    pub some_passw_21: SomePassw21,
    #[serde(rename = "rockyou-5")]
    pub rockyou_5: Rockyou5,
    #[serde(rename = "top_shortlist")]
    pub top_shortlist: TopShortlist,
    pub keywords: Keywords,
    #[serde(rename = "Antworth")]
    pub antworth: Antworth,
    #[serde(rename = "web1_4")]
    pub web1_4: Web14,
    #[serde(rename = "Password-Names")]
    pub password_names: PasswordNames,
    #[serde(rename = "religion")]
    pub religion2: Religion2,
    #[serde(rename = "Russian_curse")]
    pub russian_curse: RussianCurse,
    pub chemiksp: Chemiksp,
    #[serde(rename = "french")]
    pub french2: French2,
    #[serde(rename = "estonian-names")]
    pub estonian_names: EstonianNames,
    pub pw01: Pw01,
    #[serde(rename = "Czech_mixed")]
    pub czech_mixed: CzechMixed,
    pub elyrics: Elyrics,
    #[serde(rename = "Russian_first")]
    pub russian_first: RussianFirst,
    #[serde(rename = "Russian_last")]
    pub russian_last: RussianLast,
    #[serde(rename = "Russian_koi8_extra_cslang")]
    pub russian_koi8_extra_cslang: RussianKoi8ExtraCslang,
    #[serde(rename = "Russian_koi8_small_acronym")]
    pub russian_koi8_small_acronym: RussianKoi8SmallAcronym,
    #[serde(rename = "Russian_koi8_small_cap")]
    pub russian_koi8_small_cap: RussianKoi8SmallCap,
    #[serde(rename = "Russian_koi8_small_lower")]
    pub russian_koi8_small_lower: RussianKoi8SmallLower,
    #[serde(rename = "Russian_koi8_small_mixed")]
    pub russian_koi8_small_mixed: RussianKoi8SmallMixed,
    #[serde(rename = "Russian_windows1251_extra_cslang")]
    pub russian_windows1251_extra_cslang: RussianWindows1251ExtraCslang,
    #[serde(rename = "Russian_windows1251_small_acronym")]
    pub russian_windows1251_small_acronym: RussianWindows1251SmallAcronym,
    #[serde(rename = "Russian_windows1251_small_cap")]
    pub russian_windows1251_small_cap: RussianWindows1251SmallCap,
    #[serde(rename = "Russian_windows1251_small_lower")]
    pub russian_windows1251_small_lower: RussianWindows1251SmallLower,
    #[serde(rename = "Russian_windows1251_small_mixed")]
    pub russian_windows1251_small_mixed: RussianWindows1251SmallMixed,
    #[serde(rename = "VB [1]")]
    pub vb_1: Vb1,
    #[serde(rename = "n_french")]
    pub n_french: NFrench,
    #[serde(rename = "towns_us")]
    pub towns_us: TownsUs,
    #[serde(rename = "Russian2")]
    pub russian22: Russian22,
    #[serde(rename = "Belarusian (Classical Spelling)")]
    pub belarusian_classical_spelling: BelarusianClassicalSpelling,
    #[serde(rename = "Belarusian (Modern Spelling)")]
    pub belarusian_modern_spelling: BelarusianModernSpelling,
    pub musiccircle: Musiccircle,
    pub mirpesen: Mirpesen,
    pub hotlyrics: Hotlyrics,
    #[serde(rename = "french-names")]
    pub french_names: FrenchNames,
    pub filozof: Filozof,
    #[serde(rename = "dictionary_russian")]
    pub dictionary_russian: DictionaryRussian,
    #[serde(rename = "dictionary_russian_big")]
    pub dictionary_russian_big: DictionaryRussianBig,
    pub stolicy: Stolicy,
    #[serde(rename = "stranu-mira-cyrillic")]
    pub stranu_mira_cyrillic: StranuMiraCyrillic,
    #[serde(rename = "klichki-rus")]
    pub klichki_rus: KlichkiRus,
    #[serde(rename = "Klichki-Zivotnyh-RU")]
    pub klichki_zivotnyh_ru: KlichkiZivotnyhRu,
    #[serde(rename = "rus-mini")]
    pub rus_mini: RusMini,
    #[serde(rename = "Russian (Full)")]
    pub russian_full: RussianFull,
    #[serde(rename = "Russian-KOI8")]
    pub russian_koi8: RussianKoi8,
    #[serde(rename = "Russian-Mini-OEM")]
    pub russian_mini_oem: RussianMiniOem,
    #[serde(rename = "Russian-Mini")]
    pub russian_mini: RussianMini,
    #[serde(rename = "russian")]
    pub russian3: Russian3,
    #[serde(rename = "russian_31799")]
    pub russian_31799: Russian31799,
    #[serde(rename = "russian_name")]
    pub russian_name: RussianName,
    #[serde(rename = "russkie-maty")]
    pub russkie_maty: RusskieMaty,
    #[serde(rename = "ru_rzts_sort_part_1")]
    pub ru_rzts_sort_part_1: RuRztsSortPart1,
    #[serde(rename = "ru_rzts_sort_part_4")]
    pub ru_rzts_sort_part_4: RuRztsSortPart4,
    #[serde(rename = "umenshitelnye-imena")]
    pub umenshitelnye_imena: UmenshitelnyeImena,
    #[serde(rename = "zenskie-muzkie-imena")]
    pub zenskie_muzkie_imena: ZenskieMuzkieImena,
    pub cracked: Cracked,
    #[serde(rename = "Unabr_dict")]
    pub unabr_dict: UnabrDict,
    #[serde(rename = "Some_passw_12")]
    pub some_passw_12: SomePassw12,
    #[serde(rename = "DICT")]
    pub dict: Dict,
    #[serde(rename = "DefUserNames")]
    pub def_user_names: DefUserNames,
    #[serde(rename = "01")]
    pub n01: n01,
    #[serde(rename = "1900-2005")]
    pub n1900_2005: n19002005,
    #[serde(rename = "rus_surnames_first_letter")]
    pub rus_surnames_first_letter: RusSurnamesFirstLetter,
    #[serde(rename = "translit_rus")]
    pub translit_rus: TranslitRus,
    #[serde(rename = "devices-passwords")]
    pub devices_passwords: DevicesPasswords,
    #[serde(rename = "hr_wordlist")]
    pub hr_wordlist: HrWordlist,
    #[serde(rename = "nb_wordlist")]
    pub nb_wordlist: NbWordlist,
    #[serde(rename = "Foldoc")]
    pub foldoc: Foldoc,
    #[serde(rename = "rus_surnames_date099_fin")]
    pub rus_surnames_date099_fin: RusSurnamesDate099Fin,
    #[serde(rename = "Names_women")]
    pub names_women: NamesWomen,
    pub itswapshop: Itswapshop,
    pub knittinglove: Knittinglove,
    #[serde(rename = "Danish_lower")]
    pub danish_lower: DanishLower,
    #[serde(rename = "Malename")]
    pub malename: Malename,
    pub length05: Length05,
    #[serde(rename = "05")]
    pub n05: n05,
    #[serde(rename = "4letters")]
    pub n4letters: n4letters,
    #[serde(rename = "fern-wifi_common")]
    pub fern_wifi_common: FernWifiCommon,
    #[serde(rename = "sl_wordlist")]
    pub sl_wordlist: SlWordlist,
    pub tbswordlist2: Tbswordlist2,
    #[serde(rename = "male-names")]
    pub male_names: MaleNames,
    #[serde(rename = "Datas_ddmmgggg")]
    pub datas_ddmmgggg: DatasDdmmgggg,
    #[serde(rename = "root_userpass")]
    pub root_userpass: RootUserpass,
    pub short: Short,
    #[serde(rename = "FEMALE-N")]
    pub female_n: FemaleN,
    #[serde(rename = "name_surname_ru")]
    pub name_surname_ru: NameSurnameRu,
    pub usernames: Usernames,
    #[serde(rename = "Dutch_clean_lower")]
    pub dutch_clean_lower: DutchCleanLower,
    #[serde(rename = "http_default_pass")]
    pub http_default_pass: HttpDefaultPass,
    #[serde(rename = "cs_wordlist")]
    pub cs_wordlist: CsWordlist,
    #[serde(rename = "Crl")]
    pub crl: Crl,
    #[serde(rename = "Music_rock")]
    pub music_rock: MusicRock,
    #[serde(rename = "My-Passys")]
    pub my_passys: MyPassys,
    #[serde(rename = "fast-names")]
    pub fast_names: FastNames,
    #[serde(rename = "n_common")]
    pub n_common: NCommon,
    #[serde(rename = "common-names")]
    pub common_names: CommonNames,
    #[serde(rename = "CRL")]
    pub crl2: Crl2,
    #[serde(rename = "Literature")]
    pub literature: Literature,
    #[serde(rename = "04")]
    pub n04: n04,
    #[serde(rename = "fox-from-lulzsec")]
    pub fox_from_lulzsec: FoxFromLulzsec,
    pub up37: Up37,
    pub wp: Wp,
    #[serde(rename = "Norwegian_lower")]
    pub norwegian_lower: NorwegianLower,
    #[serde(rename = "music-cl")]
    pub music_cl: MusicCl,
    #[serde(rename = "rus_surnames_fin")]
    pub rus_surnames_fin: RusSurnamesFin,
    #[serde(rename = "Music")]
    pub music2: Music2,
    #[serde(rename = "09")]
    pub n09: n09,
    #[serde(rename = "es_wordlist")]
    pub es_wordlist: EsWordlist,
    pub classical: Classical,
    pub norwegia: Norwegia,
    pub jargon: Jargon,
    #[serde(rename = "Koran")]
    pub koran: Koran,
    pub placesss: Placesss,
    #[serde(rename = "unix")]
    pub unix2: Unix2,
    #[serde(rename = "Names_men")]
    pub names_men: NamesMen,
    #[serde(rename = "8-5-2006-googlecachepasswords")]
    pub n8_5_2006_googlecachepasswords: n852006Googlecachepasswords,
    #[serde(rename = "8-5-2006-googlecachepasswords2")]
    pub n8_5_2006_googlecachepasswords2: n852006Googlecachepasswords2,
    #[serde(rename = "Croatian_lower")]
    pub croatian_lower: CroatianLower,
    #[serde(rename = "Spanish_lower")]
    pub spanish_lower: SpanishLower,
    #[serde(rename = "wordpress_attacks_july2014")]
    pub wordpress_attacks_july20142: WordpressAttacksJuly20142,
    #[serde(rename = "Cis")]
    pub cis: Cis,
    pub colleges: Colleges,
    pub dns1: Dns1,
    pub dns2: Dns2,
    pub dns5: Dns5,
    #[serde(rename = "czech")]
    pub czech3: Czech3,
    #[serde(rename = "spanish")]
    pub spanish2: Spanish2,
    #[serde(rename = "spanish_2")]
    pub spanish_2: Spanish22,
    pub ghostbin: Ghostbin,
    #[serde(rename = "imena_i_slova_s_ciframi")]
    pub imena_i_slova_s_ciframi: ImenaISlovaSCiframi,
    #[serde(rename = "spanish_67233")]
    pub spanish_67233: Spanish67233,
    #[serde(rename = "music-ja")]
    pub music_ja: MusicJa,
    #[serde(rename = "wp_es")]
    pub wp_es: WpEs,
    pub frequent: Frequent,
    #[serde(rename = "Hungarian_lower")]
    pub hungarian_lower: HungarianLower,
    #[serde(rename = "uniqpass_preview")]
    pub uniqpass_preview: UniqpassPreview,
    #[serde(rename = "rus_surnames_date19002020_fin")]
    pub rus_surnames_date19002020_fin: RusSurnamesDate19002020Fin,
    #[serde(rename = "Australian")]
    pub australian: Australian,
    #[serde(rename = "KeyboardCombo4")]
    pub keyboard_combo4: KeyboardCombo4,
    #[serde(rename = "hungarian")]
    pub hungarian2: Hungarian2,
    #[serde(rename = "n_other")]
    pub n_other: NOther,
    #[serde(rename = "other-names")]
    pub other_names: OtherNames,
    #[serde(rename = "wp_fr")]
    pub wp_fr: WpFr,
    #[serde(rename = "Drugs")]
    pub drugs: Drugs,
    pub science: Science,
    #[serde(rename = "Special")]
    pub special: Special,
    #[serde(rename = "special_english")]
    pub special_english: SpecialEnglish,
    #[serde(rename = "facebook-pastebay")]
    pub facebook_pastebay: FacebookPastebay,
    pub internal: Internal,
    #[serde(rename = "movie-ch")]
    pub movie_ch: MovieCh,
    #[serde(rename = "movie-characters")]
    pub movie_characters: MovieCharacters,
    #[serde(rename = "lv_wordlist")]
    pub lv_wordlist: LvWordlist,
    pub statistics: Statistics,
    #[serde(rename = "rus_names_translit")]
    pub rus_names_translit: RusNamesTranslit,
    #[serde(rename = "youtube_names")]
    pub youtube_names: YoutubeNames,
    #[serde(rename = "n_swed")]
    pub n_swed: NSwed,
    #[serde(rename = "English_large_cap")]
    pub english_large_cap: EnglishLargeCap,
    #[serde(rename = "Swedish_lower")]
    pub swedish_lower: SwedishLower,
    #[serde(rename = "Turkish_lower")]
    pub turkish_lower: TurkishLower,
    #[serde(rename = "special-hacker")]
    pub special_hacker: SpecialHacker,
    #[serde(rename = "n_norweg")]
    pub n_norweg: NNorweg,
    pub numbers: Numbers,
    #[serde(rename = "Datas_mmddgggg")]
    pub datas_mmddgggg: DatasMmddgggg,
    #[serde(rename = "kb_change_rus")]
    pub kb_change_rus: KbChangeRus,
    #[serde(rename = "devices-logins")]
    pub devices_logins: DevicesLogins,
    #[serde(rename = "31337_speak")]
    pub n31337_speak: n31337Speak,
    #[serde(rename = "Brithumor")]
    pub brithumor: Brithumor,
    #[serde(rename = "music-sh")]
    pub music_sh: MusicSh,
    #[serde(rename = "us-zipcodes")]
    pub us_zipcodes: UsZipcodes,
    pub shows: Shows,
    #[serde(rename = "uunet-sites")]
    pub uunet_sites: UunetSites,
    pub ceskajmena: Ceskajmena,
    #[serde(rename = "Zodiac")]
    pub zodiac: Zodiac,
    pub chromeplay: Chromeplay,
    #[serde(rename = "Cartoons")]
    pub cartoons: Cartoons,
    pub bacteria: Bacteria,
    #[serde(rename = "Italian_small_lower")]
    pub italian_small_lower: ItalianSmallLower,
    pub oz: Oz,
    #[serde(rename = "common-1")]
    pub common_1: Common1,
    pub dns4: Dns4,
    #[serde(rename = "internet-ftp_sites")]
    pub internet_ftp_sites: InternetFtpSites,
    pub keyba8: Keyba8,
    #[serde(rename = "myths-le")]
    pub myths_le: MythsLe,
    #[serde(rename = "123_NAME_321_000")]
    pub n123_name_321_000: n123Name321000,
    #[serde(rename = "wp_de")]
    pub wp_de: WpDe,
    #[serde(rename = "ArabicNames")]
    pub arabic_names: ArabicNames,
    #[serde(rename = "Congress")]
    pub congress: Congress,
    #[serde(rename = "ONEUP&R")]
    pub oneup_r: OneupR,
    #[serde(rename = "music-co")]
    pub music_co: MusicCo,
    #[serde(rename = "us_cities")]
    pub us_cities2: UsCities2,
    #[serde(rename = "Some_passw_25")]
    pub some_passw_25: SomePassw25,
    #[serde(rename = "03")]
    pub n03: n03,
    pub chars: Chars,
    #[serde(rename = "congress")]
    pub congress2: Congress2,
    pub country: Country,
    #[serde(rename = "English_small_cap")]
    pub english_small_cap: EnglishSmallCap,
    #[serde(rename = "meecos german pwl")]
    pub meecos_german_pwl: MeecosGermanPwl,
    #[serde(rename = "n_statis")]
    pub n_statis: NStatis,
    #[serde(rename = "rus_names_date099_fin")]
    pub rus_names_date099_fin: RusNamesDate099Fin,
    #[serde(rename = "Music_groups")]
    pub music_groups: MusicGroups,
    #[serde(rename = "3letters")]
    pub n3letters: n3letters,
    #[serde(rename = "Actor")]
    pub actor: Actor,
    pub dns3: Dns3,
    #[serde(rename = "maleNames-password")]
    pub male_names_password: MaleNamesPassword,
    #[serde(rename = "old_gold")]
    pub old_gold: OldGold,
    #[serde(rename = "LCarrol")]
    pub lcarrol2: Lcarrol2,
    #[serde(rename = "Latin_lower")]
    pub latin_lower: LatinLower,
    #[serde(rename = "n_stati2")]
    pub n_stati2: NStati2,
    pub numbers2: Numbers2,
    #[serde(rename = "NAMEyy")]
    pub nameyy: Nameyy,
    #[serde(rename = "rus_eng")]
    pub rus_eng: RusEng,
    #[serde(rename = "songs_translit")]
    pub songs_translit: SongsTranslit,
    #[serde(rename = "Famous")]
    pub famous: Famous,
    #[serde(rename = "famous")]
    pub famous2: Famous2,
    #[serde(rename = "n_actor2")]
    pub n_actor2: NActor2,
    #[serde(rename = "n_actors")]
    pub n_actors: NActors,
    #[serde(rename = "n_surna2")]
    pub n_surna2: NSurna2,
    #[serde(rename = "Shakespeare")]
    pub shakespeare: Shakespeare,
    #[serde(rename = "towns_ca")]
    pub towns_ca: TownsCa,
    #[serde(rename = "actor-givenname")]
    pub actor_givenname: ActorGivenname,
    #[serde(rename = "actor-surname")]
    pub actor_surname: ActorSurname,
    #[serde(rename = "given-names")]
    pub given_names: GivenNames,
    #[serde(rename = "KeyboardCombo5")]
    pub keyboard_combo5: KeyboardCombo5,
    pub germanl1: Germanl1,
    #[serde(rename = "NAMEyyyy")]
    pub nameyyyy: Nameyyyy,
    #[serde(rename = "Datas_gggggggg")]
    pub datas_gggggggg: DatasGggggggg,
    #[serde(rename = "wpchit_bg")]
    pub wpchit_bg: WpchitBg,
    #[serde(rename = "kb_rus_noun_male")]
    pub kb_rus_noun_male: KbRusNounMale,
    #[serde(rename = "tr_rus_noun_fem")]
    pub tr_rus_noun_fem: TrRusNounFem,
    #[serde(rename = "dirb_names")]
    pub dirb_names: DirbNames,
    #[serde(rename = "patreon_Twitter")]
    pub patreon_twitter: PatreonTwitter,
    #[serde(rename = "German_large_cap")]
    pub german_large_cap: GermanLargeCap,
    #[serde(rename = "German_large_lower")]
    pub german_large_lower: GermanLargeLower,
    #[serde(rename = "n_family")]
    pub n_family: NFamily,
    pub numbers3: Numbers3,
    #[serde(rename = "Some_passw_18")]
    pub some_passw_18: SomePassw18,
    #[serde(rename = "Some_passw_24")]
    pub some_passw_24: SomePassw24,
    #[serde(rename = "rus_names_date19002020_fin")]
    pub rus_names_date19002020_fin: RusNamesDate19002020Fin,
    #[serde(rename = "rus_names_fin")]
    pub rus_names_fin: RusNamesFin,
    #[serde(rename = "twitter_usernames")]
    pub twitter_usernames: TwitterUsernames,
    pub automobile: Automobile,
    #[serde(rename = "towns_nl")]
    pub towns_nl: TownsNl,
    #[serde(rename = "towns_gb")]
    pub towns_gb: TownsGb,
    pub animals: Animals,
    pub sports: Sports,
    #[serde(rename = "ru_rzts_sort_part_3")]
    pub ru_rzts_sort_part_3: RuRztsSortPart3,
    #[serde(rename = "tr_rus_noun_mul")]
    pub tr_rus_noun_mul: TrRusNounMul,
    #[serde(rename = "German_small_lower")]
    pub german_small_lower: GermanSmallLower,
    #[serde(rename = "Swahili_lower")]
    pub swahili_lower: SwahiliLower,
    #[serde(rename = "Viet74K")]
    pub viet74k: Viet74K,
    #[serde(rename = "crl-name")]
    pub crl_name: CrlName,
    #[serde(rename = "n_femal2")]
    pub n_femal2: NFemal2,
    #[serde(rename = "rus_mat")]
    pub rus_mat: RusMat,
    #[serde(rename = "authors_nopunct_nospace")]
    pub authors_nopunct_nospace: AuthorsNopunctNospace,
    #[serde(rename = "Fungi")]
    pub fungi: Fungi,
    #[serde(rename = "Hindu")]
    pub hindu: Hindu,
    #[serde(rename = "KeyboardCombo7")]
    pub keyboard_combo7: KeyboardCombo7,
    #[serde(rename = "Animals")]
    pub animals2: Animals2,
    pub biology: Biology,
    #[serde(rename = "chinese")]
    pub chinese2: Chinese2,
    #[serde(rename = "crl-names")]
    pub crl_names: CrlNames,
    #[serde(rename = "indian-cities")]
    pub indian_cities: IndianCities,
    #[serde(rename = "IranianNames")]
    pub iranian_names: IranianNames,
    pub germanl: Germanl,
    pub pinyin: Pinyin,
    #[serde(rename = "wp_ru")]
    pub wp_ru: WpRu,
    #[serde(rename = "rus_names_kb_chage")]
    pub rus_names_kb_chage: RusNamesKbChage,
    #[serde(rename = "songs_kb")]
    pub songs_kb: SongsKb,
    #[serde(rename = "patreon_FB")]
    pub patreon_fb: PatreonFb,
    #[serde(rename = "french-wordlist-MAJUSCULE")]
    pub french_wordlist_majuscule: FrenchWordlistMajuscule,
    pub enfuck324: Enfuck324,
    #[serde(rename = "German_small_cap")]
    pub german_small_cap: GermanSmallCap,
    #[serde(rename = "ColorsLCASE")]
    pub colors_lcase: ColorsLcase,
    #[serde(rename = "USStates")]
    pub usstates: Usstates,
    pub dogs: Dogs,
    pub dogterms: Dogterms,
    pub drugssports: Drugssports,
    #[serde(rename = "n_anglos")]
    pub n_anglos: NAnglos,
    #[serde(rename = "n_surnam")]
    pub n_surnam: NSurnam,
    pub numbers4: Numbers4,
    pub numbers5: Numbers5,
    #[serde(rename = "us-count")]
    pub us_count: UsCount,
    pub uplay: Uplay,
    #[serde(rename = "02")]
    pub n02: n02,
    #[serde(rename = "en_emoji")]
    pub en_emoji: EnEmoji,
    #[serde(rename = "towns_mx")]
    pub towns_mx: TownsMx,
    #[serde(rename = "towns_de")]
    pub towns_de: TownsDe,
    #[serde(rename = "International_curse")]
    pub international_curse: InternationalCurse,
    #[serde(rename = "top_1000_usa_femalenames_english")]
    pub top_1000_usa_femalenames_english: Top1000UsaFemalenamesEnglish,
    #[serde(rename = "aol_search_phrases")]
    pub aol_search_phrases: AolSearchPhrases,
    pub algae: Algae,
    #[serde(rename = "ASSurnames")]
    pub assurnames: Assurnames,
    #[serde(rename = "books_of_the_bible")]
    pub books_of_the_bible: BooksOfTheBible,
    #[serde(rename = "Cars")]
    pub cars: Cars,
    pub cartoon: Cartoon,
    #[serde(rename = "cartoons")]
    pub cartoons2: Cartoons2,
    #[serde(rename = "comic_strips")]
    pub comic_strips: ComicStrips,
    #[serde(rename = "days-of-week-multiple-languages")]
    pub days_of_week_multiple_languages: DaysOfWeekMultipleLanguages,
    #[serde(rename = "Emil-hesla154")]
    pub emil_hesla154: EmilHesla154,
    #[serde(rename = "dvou-hesla")]
    pub dvou_hesla: DvouHesla,
    #[serde(rename = "ddmmyyNAME")]
    pub ddmmyy_name: DdmmyyName,
    #[serde(rename = "NAMEddmmyy")]
    pub nameddmmyy: Nameddmmyy,
    #[serde(rename = "NAMEddmmyyyy")]
    pub nameddmmyyyy: Nameddmmyyyy,
    #[serde(rename = "rus_latin")]
    pub rus_latin: RusLatin,
    #[serde(rename = "Unisex")]
    pub unisex: Unisex,
    #[serde(rename = "t1_rzts_sort_part_1")]
    pub t1_rzts_sort_part_1: T1RztsSortPart1,
    #[serde(rename = "date_wordlist")]
    pub date_wordlist: DateWordlist,
    #[serde(rename = "Password-Names1")]
    pub password_names1: PasswordNames1,
    #[serde(rename = "kb_rus_noun_fem")]
    pub kb_rus_noun_fem: KbRusNounFem,
    #[serde(rename = "Croatian_mixed")]
    pub croatian_mixed: CroatianMixed,
    pub lyricsbook: Lyricsbook,
    #[serde(rename = "Dutch_clean_mixed")]
    pub dutch_clean_mixed: DutchCleanMixed,
    #[serde(rename = "Dutch_extra_mixed")]
    pub dutch_extra_mixed: DutchExtraMixed,
    #[serde(rename = "English_extra_acronym")]
    pub english_extra_acronym: EnglishExtraAcronym,
    #[serde(rename = "English_extra_alnum")]
    pub english_extra_alnum: EnglishExtraAlnum,
    pub catala: Catala,
    #[serde(rename = "English_extra_cap")]
    pub english_extra_cap: EnglishExtraCap,
    #[serde(rename = "hci_oracle_passwords")]
    pub hci_oracle_passwords: HciOraclePasswords,
    #[serde(rename = "English_extra_mixed")]
    pub english_extra_mixed: EnglishExtraMixed,
    #[serde(rename = "English_large_acronym")]
    pub english_large_acronym: EnglishLargeAcronym,
    #[serde(rename = "English_large_alnum")]
    pub english_large_alnum: EnglishLargeAlnum,
    #[serde(rename = "English_large_mixed")]
    pub english_large_mixed: EnglishLargeMixed,
    #[serde(rename = "English_small_alnum")]
    pub english_small_alnum: EnglishSmallAlnum,
    #[serde(rename = "English_small_mixed")]
    pub english_small_mixed: EnglishSmallMixed,
    #[serde(rename = "English_tiny_cap")]
    pub english_tiny_cap: EnglishTinyCap,
    #[serde(rename = "Aeneid")]
    pub aeneid: Aeneid,
    #[serde(rename = "Acronyms")]
    pub acronyms: Acronyms,
    #[serde(rename = "French_mixed")]
    pub french_mixed: FrenchMixed,
    pub british: British,
    #[serde(rename = "German_large_alnum")]
    pub german_large_alnum: GermanLargeAlnum,
    #[serde(rename = "German_large_idioms")]
    pub german_large_idioms: GermanLargeIdioms,
    #[serde(rename = "German_large_mixed")]
    pub german_large_mixed: GermanLargeMixed,
    #[serde(rename = "Hungarian_mixed")]
    pub hungarian_mixed: HungarianMixed,
    #[serde(rename = "Italian_large_mixed")]
    pub italian_large_mixed: ItalianLargeMixed,
    #[serde(rename = "Japanese_mixed")]
    pub japanese_mixed: JapaneseMixed,
    #[serde(rename = "Latin_cap")]
    pub latin_cap: LatinCap,
    #[serde(rename = "Latin_mixed")]
    pub latin_mixed: LatinMixed,
    #[serde(rename = "Latin_upper")]
    pub latin_upper: LatinUpper,
    #[serde(rename = "Swahili_mixed")]
    pub swahili_mixed: SwahiliMixed,
    #[serde(rename = "Swahili_upper")]
    pub swahili_upper: SwahiliUpper,
    #[serde(rename = "Swedish_cap")]
    pub swedish_cap: SwedishCap,
    #[serde(rename = "Turkish_mixed")]
    pub turkish_mixed: TurkishMixed,
    #[serde(rename = "Yiddish_lower")]
    pub yiddish_lower: YiddishLower,
    #[serde(rename = "phpmyadmin-locations")]
    pub phpmyadmin_locations: PhpmyadminLocations,
    pub porno: Porno,
    #[serde(rename = "Country")]
    pub country2: Country2,
    #[serde(rename = "Viet11K")]
    pub viet11k: Viet11K,
    #[serde(rename = "Viet22K")]
    pub viet22k: Viet22K,
    #[serde(rename = "Viet39K")]
    pub viet39k: Viet39K,
    #[serde(rename = "drugs")]
    pub drugs2: Drugs2,
    pub sonybmg: Sonybmg,
    pub fable: Fable,
    #[serde(rename = "hindu-names")]
    pub hindu_names: HinduNames,
    pub iliad: Iliad,
    pub microalg: Microalg,
    #[serde(rename = "movies")]
    pub movies3: Movies3,
    #[serde(rename = "n_chines")]
    pub n_chines: NChines,
    pub norse: Norse,
    pub odyssey: Odyssey,
    pub rocknroll: Rocknroll,
    pub tech: Tech,
    pub tolkien: Tolkien,
    pub mixed: Mixed,
    #[serde(rename = "Basic_Spanish_List")]
    pub basic_spanish_list: BasicSpanishList,
    #[serde(rename = "UserPassJay")]
    pub user_pass_jay: UserPassJay,
    pub dsl: Dsl,
    #[serde(rename = "8dig5miluplow2")]
    pub n8dig5miluplow2: n8dig5miluplow2,
    #[serde(rename = "8dig10miluplow2")]
    pub n8dig10miluplow2: n8dig10miluplow2,
    #[serde(rename = "8dig5milup")]
    pub n8dig5milup: n8dig5milup,
    #[serde(rename = "8dig10miluplow")]
    pub n8dig10miluplow: n8dig10miluplow,
    #[serde(rename = "8dig10millow2")]
    pub n8dig10millow2: n8dig10millow2,
    #[serde(rename = "8dig10miluplow3")]
    pub n8dig10miluplow3: n8dig10miluplow3,
    #[serde(rename = "8dig10millow")]
    pub n8dig10millow: n8dig10millow,
    #[serde(rename = "10dig5miluplow4")]
    pub n10dig5miluplow4: n10dig5miluplow4,
    #[serde(rename = "8dig5milup2")]
    pub n8dig5milup2: n8dig5milup2,
    #[serde(rename = "8dig10milup2")]
    pub n8dig10milup2: n8dig10milup2,
    #[serde(rename = "10dig10milup")]
    pub n10dig10milup: n10dig10milup,
    #[serde(rename = "10dig5milup3")]
    pub n10dig5milup3: n10dig5milup3,
    #[serde(rename = "10dig1miluplowtried")]
    pub n10dig1miluplowtried: n10dig1miluplowtried,
    #[serde(rename = "10millionupperlowernum1-9spec")]
    pub n10millionupperlowernum1_9spec: n10millionupperlowernum19spec,
    #[serde(rename = "10dig5milup2")]
    pub n10dig5milup2: n10dig5milup2,
    #[serde(rename = "10dig5miluplow2")]
    pub n10dig5miluplow2: n10dig5miluplow2,
    #[serde(rename = "8dig5miluplow3")]
    pub n8dig5miluplow3: n8dig5miluplow3,
    #[serde(rename = "10dig5milup1")]
    pub n10dig5milup1: n10dig5milup1,
    #[serde(rename = "10dig10miluplow4")]
    pub n10dig10miluplow4: n10dig10miluplow4,
    #[serde(rename = "8dig10milup")]
    pub n8dig10milup: n8dig10milup,
    #[serde(rename = "10dig10milup2")]
    pub n10dig10milup2: n10dig10milup2,
    #[serde(rename = "10dig5miluplow3")]
    pub n10dig5miluplow3: n10dig5miluplow3,
    #[serde(rename = "8dig5milup3")]
    pub n8dig5milup3: n8dig5milup3,
    #[serde(rename = "10dig10miluplow2")]
    pub n10dig10miluplow2: n10dig10miluplow2,
    #[serde(rename = "8dig5miluplow")]
    pub n8dig5miluplow: n8dig5miluplow,
    #[serde(rename = "10dig10miluplow")]
    pub n10dig10miluplow: n10dig10miluplow,
    #[serde(rename = "10dig10miluplow3")]
    pub n10dig10miluplow3: n10dig10miluplow3,
    #[serde(rename = "10dig5miluplow")]
    pub n10dig5miluplow: n10dig5miluplow,
    pub odd37: Odd37,
    #[serde(rename = "proverbs_wordlists")]
    pub proverbs_wordlists: ProverbsWordlists,
    #[serde(rename = "mubix_izmy")]
    pub mubix_izmy: MubixIzmy,
    #[serde(rename = "fr_emoji")]
    pub fr_emoji: FrEmoji,
    #[serde(rename = "sr_wordlist")]
    pub sr_wordlist: SrWordlist,
    #[serde(rename = "ru_wordlist")]
    pub ru_wordlist: RuWordlist,
    #[serde(rename = "el_wordlist")]
    pub el_wordlist: ElWordlist,
    #[serde(rename = "top_1000_usa_familynames_english")]
    pub top_1000_usa_familynames_english: Top1000UsaFamilynamesEnglish,
    #[serde(rename = "top_1000_usa_malenames_english")]
    pub top_1000_usa_malenames_english: Top1000UsaMalenamesEnglish,
    #[serde(rename = "latin")]
    pub latin2: Latin2,
    #[serde(rename = "7letter-lastname")]
    pub n7letter_lastname: n7letterLastname,
    #[serde(rename = "Abbr")]
    pub abbr: Abbr,
    #[serde(rename = "american-proper-names")]
    pub american_proper_names: AmericanProperNames,
    #[serde(rename = "american-upper")]
    pub american_upper: AmericanUpper,
    #[serde(rename = "american-words")]
    pub american_words: AmericanWords,
    #[serde(rename = "Arthur")]
    pub arthur: Arthur,
    #[serde(rename = "Booze")]
    pub booze: Booze,
    #[serde(rename = "british-abbreviations")]
    pub british_abbreviations: BritishAbbreviations,
    #[serde(rename = "british-proper-names")]
    pub british_proper_names: BritishProperNames,
    #[serde(rename = "british-upper")]
    pub british_upper: BritishUpper,
    #[serde(rename = "british-words")]
    pub british_words: BritishWords,
    #[serde(rename = "british_z-abbreviations")]
    pub british_z_abbreviations: BritishZAbbreviations,
    #[serde(rename = "british_z-proper-names")]
    pub british_z_proper_names: BritishZProperNames,
    #[serde(rename = "british_z-upper")]
    pub british_z_upper: BritishZUpper,
    #[serde(rename = "british_z-words")]
    pub british_z_words: BritishZWords,
    #[serde(rename = "canadian-abbreviations")]
    pub canadian_abbreviations: CanadianAbbreviations,
    #[serde(rename = "canadian-proper-names")]
    pub canadian_proper_names: CanadianProperNames,
    #[serde(rename = "canadian-upper")]
    pub canadian_upper: CanadianUpper,
    #[serde(rename = "canadian-words")]
    pub canadian_words: CanadianWords,
    pub charlema: Charlema,
    #[serde(rename = "chinese-names")]
    pub chinese_names: ChineseNames,
    #[serde(rename = "common-base")]
    pub common_base: CommonBase,
    #[serde(rename = "computer-companies")]
    pub computer_companies: ComputerCompanies,
    #[serde(rename = "Domains")]
    pub domains2: Domains2,
    pub dosref: Dosref,
    #[serde(rename = "internet-domains")]
    pub internet_domains: InternetDomains,
    #[serde(rename = "king_arthur")]
    pub king_arthur: KingArthur,
    #[serde(rename = "Languages")]
    pub languages: Languages,
    #[serde(rename = "Microalgae")]
    pub microalgae: Microalgae,
    #[serde(rename = "Oxford_Colleges")]
    pub oxford_colleges: OxfordColleges,
    #[serde(rename = "shakespeare-names")]
    pub shakespeare_names: ShakespeareNames,
    pub trek: Trek,
    pub variant: Variant,
    #[serde(rename = "variant_0")]
    pub variant_0: Variant0,
    #[serde(rename = "variant_1")]
    pub variant_1: Variant1,
    #[serde(rename = "variant_2")]
    pub variant_2: Variant2,
    #[serde(rename = "websters-two_word")]
    pub websters_two_word: WebstersTwoWord,
    #[serde(rename = "world_heritage")]
    pub world_heritage: WorldHeritage,
    #[serde(rename = "yiddish")]
    pub yiddish2: Yiddish2,
    pub chemik: Chemik,
    #[serde(rename = "german-names")]
    pub german_names: GermanNames,
    #[serde(rename = "ddmmyyyyNAME")]
    pub ddmmyyyy_name: DdmmyyyyName,
    #[serde(rename = "strany-mira-translit")]
    pub strany_mira_translit: StranyMiraTranslit,
    #[serde(rename = "k1_rzts_sort_part_1")]
    pub k1_rzts_sort_part_1: K1RztsSortPart1,
    #[serde(rename = "ru_rzts_sort_part_2")]
    pub ru_rzts_sort_part_2: RuRztsSortPart2,
    #[serde(rename = "ru_rzts_sort_part_5")]
    pub ru_rzts_sort_part_5: RuRztsSortPart5,
    #[serde(rename = "Female")]
    pub female: Female,
    #[serde(rename = "Male")]
    pub male: Male,
    pub read: Read,
    #[serde(rename = "turkey_name")]
    pub turkey_name: TurkeyName,
    #[serde(rename = "Datas_dd")]
    pub datas_dd: DatasDd,
    #[serde(rename = "Datas_DDzydfhmGGGG")]
    pub datas_ddzydfhm_gggg: DatasDdzydfhmGggg,
    #[serde(rename = "Datas_gggg-gggg")]
    pub datas_gggg_gggg: DatasGgggGggg,
    #[serde(rename = "Datas_mm-dd-gggg")]
    pub datas_mm_dd_gggg: DatasMmDdGggg,
    #[serde(rename = "Datas_mm")]
    pub datas_mm: DatasMm,
    #[serde(rename = "Datas_zydfhmDDGGGG")]
    pub datas_zydfhm_ddgggg: DatasZydfhmDdgggg,
    #[serde(rename = "InsideCoreByChesteRock")]
    pub inside_core_by_cheste_rock: InsideCoreByChesteRock,
    #[serde(rename = "Password-Names2")]
    pub password_names2: PasswordNames2,
    #[serde(rename = "Pasword-number")]
    pub pasword_number: PaswordNumber,
    #[serde(rename = "USA_domains-email-2015")]
    pub usa_domains_email_2015: UsaDomainsEmail2015,
    #[serde(rename = "AD Wordlist 3")]
    pub ad_wordlist_3: AdWordlist3,
    #[serde(rename = "AD_Wordlist")]
    pub ad_wordlist: AdWordlist,
    #[serde(rename = "Belhh111")]
    pub belhh111: Belhh111,
    #[serde(rename = "Fucklist")]
    pub fucklist: Fucklist,
    #[serde(rename = "Mature combo list")]
    pub mature_combo_list: MatureComboList,
    pub meh: Meh,
    #[serde(rename = "modded word lis01t")]
    pub modded_word_lis01t: ModdedWordLis01t,
    #[serde(rename = "nigga wigga")]
    pub nigga_wigga: NiggaWigga,
    #[serde(rename = "Stupid Number combo")]
    pub stupid_number_combo: StupidNumberCombo,
    #[serde(rename = "Wordlist 38")]
    pub wordlist_38: Wordlist38,
    pub wordlist1: Wordlist1,
    pub wordlist10: Wordlist10,
    #[serde(rename = "Wordlist1324")]
    pub wordlist1324: Wordlist1324,
    pub wordlist3: Wordlist3,
    pub wordlist4: Wordlist4,
    pub wordlist5: Wordlist5,
    pub wordlist7: Wordlist7,
    pub potm: Potm,
    #[serde(rename = "TOP-100-Adobe")]
    pub top_100_adobe: Top100Adobe,
    #[serde(rename = "kb_rus_adj_fem")]
    pub kb_rus_adj_fem: KbRusAdjFem,
    #[serde(rename = "kb_rus_adj_male")]
    pub kb_rus_adj_male: KbRusAdjMale,
    #[serde(rename = "kb_rus_adj_it")]
    pub kb_rus_adj_it: KbRusAdjIt,
    #[serde(rename = "kb_rus_adj_mul")]
    pub kb_rus_adj_mul: KbRusAdjMul,
    #[serde(rename = "kb_rus_noun_it")]
    pub kb_rus_noun_it: KbRusNounIt,
    #[serde(rename = "kb_rus_noun_mul")]
    pub kb_rus_noun_mul: KbRusNounMul,
    #[serde(rename = "months_all")]
    pub months_all: MonthsAll,
    #[serde(rename = "months_all_wo_short")]
    pub months_all_wo_short: MonthsAllWoShort,
    #[serde(rename = "months_short")]
    pub months_short: MonthsShort,
    #[serde(rename = "rus_months_en")]
    pub rus_months_en: RusMonthsEn,
    #[serde(rename = "rus_months_translit")]
    pub rus_months_translit: RusMonthsTranslit,
    #[serde(rename = "tr_rus_adj_fem")]
    pub tr_rus_adj_fem: TrRusAdjFem,
    #[serde(rename = "tr_rus_adj_it")]
    pub tr_rus_adj_it: TrRusAdjIt,
    #[serde(rename = "tr_rus_adj_male")]
    pub tr_rus_adj_male: TrRusAdjMale,
    #[serde(rename = "tr_rus_adj_mul")]
    pub tr_rus_adj_mul: TrRusAdjMul,
    #[serde(rename = "tr_rus_noun_it")]
    pub tr_rus_noun_it: TrRusNounIt,
    pub tripple: Tripple,
    #[serde(rename = "TP-LINK-passwords")]
    pub tp_link_passwords: TpLinkPasswords,
    #[serde(rename = "Netgear")]
    pub netgear: Netgear,
    #[serde(rename = "assetnote_bak")]
    pub assetnote_bak: AssetnoteBak,
    #[serde(rename = "httparchive_directories_1m_2023_05_28.txt")]
    pub httparchive_directories_1m_2023_05_28_txt: HttparchiveDirectories1m20230528Txt,
    #[serde(rename = "httparchive_html_htm_2023_05_28.txt")]
    pub httparchive_html_htm_2023_05_28_txt: HttparchiveHtmlHtm20230528Txt,
    #[serde(rename = "httparchive_php_2023_05_28.txt")]
    pub httparchive_php_2023_05_28_txt: HttparchivePhp20230528Txt,
    #[serde(rename = "httparchive_xml_2023_05_28.txt")]
    pub httparchive_xml_2023_05_28_txt: HttparchiveXml20230528Txt,
    #[serde(rename = "httparchive_jsp_jspa_do_action_2023_05_28.txt")]
    pub httparchive_jsp_jspa_do_action_2023_05_28_txt: HttparchiveJspJspaDoAction20230528Txt,
    #[serde(rename = "httparchive_js_2023_05_28.txt")]
    pub httparchive_js_2023_05_28_txt: HttparchiveJs20230528Txt,
    #[serde(rename = "httparchive_aspx_asp_cfm_svc_ashx_asmx_2023_05_28.txt")]
    pub httparchive_aspx_asp_cfm_svc_ashx_asmx_2023_05_28_txt: HttparchiveAspxAspCfmSvcAshxAsmx20230528Txt,
    #[serde(rename = "httparchive_txt_2023_05_28.txt")]
    pub httparchive_txt_2023_05_28_txt: HttparchiveTxt20230528Txt,
    #[serde(rename = "httparchive_cgi_pl_2023_05_28.txt")]
    pub httparchive_cgi_pl_2023_05_28_txt: HttparchiveCgiPl20230528Txt,
    #[serde(rename = "httparchive_apiroutes_2023_05_28.txt")]
    pub httparchive_apiroutes_2023_05_28_txt: HttparchiveApiroutes20230528Txt,
    #[serde(rename = "httparchive_subdomains_2023_05_28.txt")]
    pub httparchive_subdomains_2023_05_28_txt: HttparchiveSubdomains20230528Txt,
    #[serde(rename = "httparchive_parameters_top_1m_2023_05_28.txt")]
    pub httparchive_parameters_top_1m_2023_05_28_txt: HttparchiveParametersTop1m20230528Txt,
    #[serde(rename = "assetnote_pl")]
    pub assetnote_pl: AssetnotePl,
    #[serde(rename = "assetnote_2m-subdomains")]
    pub assetnote_2m_subdomains: Assetnote2mSubdomains,
    #[serde(rename = "assetnote_raft-medium-files-lowercase")]
    pub assetnote_raft_medium_files_lowercase: AssetnoteRaftMediumFilesLowercase,
    #[serde(rename = "assetnote_raft-small-extensions")]
    pub assetnote_raft_small_extensions: AssetnoteRaftSmallExtensions,
    #[serde(rename = "assetnote_jsp")]
    pub assetnote_jsp: AssetnoteJsp,
    #[serde(rename = "assetnote_raft-medium-directories")]
    pub assetnote_raft_medium_directories: AssetnoteRaftMediumDirectories,
    #[serde(rename = "assetnote_raft-large-words")]
    pub assetnote_raft_large_words: AssetnoteRaftLargeWords,
    #[serde(rename = "assetnote_raft-medium-extensions")]
    pub assetnote_raft_medium_extensions: AssetnoteRaftMediumExtensions,
    #[serde(rename = "assetnote_wordlist_with_underscores")]
    pub assetnote_wordlist_with_underscores: AssetnoteWordlistWithUnderscores,
    #[serde(rename = "assetnote_raft-small-directories-lowercase")]
    pub assetnote_raft_small_directories_lowercase: AssetnoteRaftSmallDirectoriesLowercase,
    #[serde(rename = "assetnote_wordlist_no_underscores")]
    pub assetnote_wordlist_no_underscores: AssetnoteWordlistNoUnderscores,
    #[serde(rename = "assetnote_raft-small-files-lowercase")]
    pub assetnote_raft_small_files_lowercase: AssetnoteRaftSmallFilesLowercase,
    #[serde(rename = "assetnote_do")]
    pub assetnote_do: AssetnoteDo,
    #[serde(rename = "assetnote_best-dns-wordlist")]
    pub assetnote_best_dns_wordlist: AssetnoteBestDnsWordlist,
    #[serde(rename = "assetnote_raft-medium-extensions-lowercase")]
    pub assetnote_raft_medium_extensions_lowercase: AssetnoteRaftMediumExtensionsLowercase,
    #[serde(rename = "assetnote_raft-medium-words")]
    pub assetnote_raft_medium_words: AssetnoteRaftMediumWords,
    #[serde(rename = "assetnote_raft-large-words-lowercase")]
    pub assetnote_raft_large_words_lowercase: AssetnoteRaftLargeWordsLowercase,
    #[serde(rename = "assetnote_raft-medium-directories-lowercase")]
    pub assetnote_raft_medium_directories_lowercase: AssetnoteRaftMediumDirectoriesLowercase,
    #[serde(rename = "assetnote_cfm")]
    pub assetnote_cfm: AssetnoteCfm,
    #[serde(rename = "assetnote_raft-small-words")]
    pub assetnote_raft_small_words: AssetnoteRaftSmallWords,
    #[serde(rename = "assetnote_raft-small-extensions-lowercase")]
    pub assetnote_raft_small_extensions_lowercase: AssetnoteRaftSmallExtensionsLowercase,
    #[serde(rename = "assetnote_raft-medium-files")]
    pub assetnote_raft_medium_files: AssetnoteRaftMediumFiles,
    #[serde(rename = "assetnote_php")]
    pub assetnote_php: AssetnotePhp,
    #[serde(rename = "assetnote_xml_filenames")]
    pub assetnote_xml_filenames: AssetnoteXmlFilenames,
    #[serde(rename = "assetnote_raft-medium-words-lowercase")]
    pub assetnote_raft_medium_words_lowercase: AssetnoteRaftMediumWordsLowercase,
    #[serde(rename = "assetnote_raft-large-directories-lowercase")]
    pub assetnote_raft_large_directories_lowercase: AssetnoteRaftLargeDirectoriesLowercase,
    #[serde(rename = "assetnote_raft-small-directories")]
    pub assetnote_raft_small_directories: AssetnoteRaftSmallDirectories,
    #[serde(rename = "assetnote_asp_lowercase")]
    pub assetnote_asp_lowercase: AssetnoteAspLowercase,
    #[serde(rename = "assetnote_raft-large-directories")]
    pub assetnote_raft_large_directories: AssetnoteRaftLargeDirectories,
    #[serde(rename = "assetnote_raft-small-words-lowercase")]
    pub assetnote_raft_small_words_lowercase: AssetnoteRaftSmallWordsLowercase,
    #[serde(rename = "assetnote_raft-large-words-ext")]
    pub assetnote_raft_large_words_ext: AssetnoteRaftLargeWordsExt,
    #[serde(rename = "assetnote_raft-small-files")]
    pub assetnote_raft_small_files: AssetnoteRaftSmallFiles,
    #[serde(rename = "assetnote_raft-large-extensions-lowercase")]
    pub assetnote_raft_large_extensions_lowercase: AssetnoteRaftLargeExtensionsLowercase,
    #[serde(rename = "assetnote_aspx_lowercase")]
    pub assetnote_aspx_lowercase: AssetnoteAspxLowercase,
    #[serde(rename = "assetnote_raft-large-files-lowercase")]
    pub assetnote_raft_large_files_lowercase: AssetnoteRaftLargeFilesLowercase,
    #[serde(rename = "assetnote_raft-large-files")]
    pub assetnote_raft_large_files: AssetnoteRaftLargeFiles,
    #[serde(rename = "assetnote_html")]
    pub assetnote_html: AssetnoteHtml,
    #[serde(rename = "assetnote_raft-large-extensions")]
    pub assetnote_raft_large_extensions: AssetnoteRaftLargeExtensions,
    #[serde(rename = "assetnote_dot_filenames")]
    pub assetnote_dot_filenames: AssetnoteDotFilenames,
    #[serde(rename = "assetnote_phpmillion")]
    pub assetnote_phpmillion: AssetnotePhpmillion,
    #[serde(rename = "httparchive_symfony_2023_05_28.txt")]
    pub httparchive_symfony_2023_05_28_txt: HttparchiveSymfony20230528Txt,
    #[serde(rename = "httparchive_laravel_2023_05_28.txt")]
    pub httparchive_laravel_2023_05_28_txt: HttparchiveLaravel20230528Txt,
    #[serde(rename = "httparchive_django_2023_05_28.txt")]
    pub httparchive_django_2023_05_28_txt: HttparchiveDjango20230528Txt,
    #[serde(rename = "httparchive_zend_2023_05_28.txt")]
    pub httparchive_zend_2023_05_28_txt: HttparchiveZend20230528Txt,
    #[serde(rename = "httparchive_cherrypy_2023_05_28.txt")]
    pub httparchive_cherrypy_2023_05_28_txt: HttparchiveCherrypy20230528Txt,
    #[serde(rename = "httparchive_nginx_2023_05_28.txt")]
    pub httparchive_nginx_2023_05_28_txt: HttparchiveNginx20230528Txt,
    #[serde(rename = "httparchive_tomcat_2023_05_28.txt")]
    pub httparchive_tomcat_2023_05_28_txt: HttparchiveTomcat20230528Txt,
    #[serde(rename = "httparchive_flask_2023_05_28.txt")]
    pub httparchive_flask_2023_05_28_txt: HttparchiveFlask20230528Txt,
    #[serde(rename = "httparchive_apache_2022_10_28.txt")]
    pub httparchive_apache_2022_10_28_txt: HttparchiveApache20221028Txt,
    #[serde(rename = "httparchive_adobe_experience_manager_2023_05_28.txt")]
    pub httparchive_adobe_experience_manager_2023_05_28_txt: HttparchiveAdobeExperienceManager20230528Txt,
    #[serde(rename = "httparchive_yii_2023_05_28.txt")]
    pub httparchive_yii_2023_05_28_txt: HttparchiveYii20230528Txt,
    #[serde(rename = "httparchive_coldfusion_2023_05_28.txt")]
    pub httparchive_coldfusion_2023_05_28_txt: HttparchiveColdfusion20230528Txt,
    #[serde(rename = "httparchive_express_2023_05_28.txt")]
    pub httparchive_express_2023_05_28_txt: HttparchiveExpress20230528Txt,
    #[serde(rename = "httparchive_spring_2023_05_28.txt")]
    pub httparchive_spring_2023_05_28_txt: HttparchiveSpring20230528Txt,
    #[serde(rename = "httparchive_rails_2023_05_28.txt")]
    pub httparchive_rails_2023_05_28_txt: HttparchiveRails20230528Txt,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n0 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n10 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n11 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n12 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n13 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n14 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n15 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n16 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n17 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n18 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n19 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n20 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n21 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n22 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n23 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n24 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n25 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n26 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n27 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n28 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n365 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n1000 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n6000 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n22750 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n23000 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n32044 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n102842 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n116000 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n190000 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n282939 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n83124311 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n3333333333 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct BitquarkSubdomainsTop100000 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Deepmagic {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DnsJhaddix {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct FierceHostlist {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Namelist {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ShubsStackoverflow {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ShubsSubdomains {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SortedcombinedKnockDnsreconFierceReconng {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SubdomainsTop1million110000 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SubdomainsTop1million20000 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SubdomainsTop1million5000 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CommonHttpPorts {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CommonRouterIps {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NmapPortsTop1000 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DefaultCicsTransactions {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CommonSnmpCommunityStringsOnesixtyone {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CommonSnmpCommunityStrings {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SnmpOnesixtyone {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Snmp {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SecretKeywords {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AdobeCqAem {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AdobeXml {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Apache {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ApacheTomcat {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LowercaseHeaders {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct UppercaseHeaders {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CgiHttpPostWindows {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CgiHttpPost {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CgiMicrosoft {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CgiXplatform {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Cgis {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ColdFusion {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Sap {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Sharepoint {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SiteMinder {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SitefinityFuzz {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Umbraco {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CaoboxCms {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DrupalThemes {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Flyspray1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct JoomlaPlugins {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct JoomlaThemes {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct KenticoCmsModulesThemes {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ModxRevolutionPlugins {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct PhpNuke {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Piwik3 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Sharepoint2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Shopware {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Sitecore {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SitemapMagento {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Symfony315Demo {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Symphony267XsltCms {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Wordpress {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct WpPlugins {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct WpThemes {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CommonDbBackups {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CommonPhpFilenames {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CommonBackdoorsAsp {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CommonBackdoorsJsp {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CommonBackdoorsPhp {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CommonBackdoorsPl {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CommandsDocuments {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CommandsNsf {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CommandsViews {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DominoFiles {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Dh {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct FatwireCms {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Frontpage {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HttpPostMicrosoft {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Hyperion {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Iis {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Jrun {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct JavaScriptMiners {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct JavaServletsCommon {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct JenkinsHudson {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct KitchensinkDirectories {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LinuxFileList {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Logins {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LotusNotes {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct OracleEbsWordlist {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Oracle9i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct OracleAppServer {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Php {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Passwords {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct PublicSourceRepoIssues {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Randomfiles {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RobotsDisallowedTop10 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RobotsDisallowedTop100 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RobotsDisallowedTop1000 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RobotsDisallowedTop500 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Roundcube123 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AllDirs {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AllExtensionless {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct All {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Conf {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Config {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Htaccess {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Properties {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Inc {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Ini {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Mdb {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Mdf {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Sql {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Xml {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Ascx {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Asp {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Aspx {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct C {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Cfm {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Cpp {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Cs {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Css {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Html {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Jar {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Java {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Js {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Jsp {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Jspf {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Php2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Php3 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Php5 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Phpt {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Pl {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Py {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Rb {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Sh {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Swf {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Tpl {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Vb {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Wsdl {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Csproj {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Pdb {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Resx {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Sln {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Suo {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Vbproj {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Admin {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Debug {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Error {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Help {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Index {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Install {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Log {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Root2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Setup {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Test {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Symfony {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SunAppServerGlassfish {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SuniPlanet {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct UrlsDrupal7 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct UrlsSap {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct UrlsJoomla3 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct UrlsWordpress3 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct UnixDotfiles {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Vignette {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SoapFunctions {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Apache2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ActionsLowercase {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ActionsUppercase {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Actions {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ApiSeenInWild {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CommonPaths {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ObjectsLowercase {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ObjectsUppercase {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Objects {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Axis {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Big {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct BurpParameterNames {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Coldfusion {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CommonAndDutch {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CommonAndFrench {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CommonAndItalian {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CommonAndPortugese {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CommonAndSpanish {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CommonApiEndpointsMazen160 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Common {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ConfluenceAdministration {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DefaultWebRootDirectoryLinux {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DefaultWebRootDirectoryWindows {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DominoDirsColdfusion39 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DominoEndpointsColdfusion39 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct FnfFuzz {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Frontpage2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Golang {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Graphql {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Hpsmh {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Hyperion2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Iplanet {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Jboss {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Jrun2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LocalPorts {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Netware {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nginx {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Oracle {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ProxyConf {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Quickhits {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RaftLargeDirectoriesLowercase {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RaftLargeDirectories {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RaftLargeExtensionsLowercase {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RaftLargeExtensions {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RaftLargeFilesLowercase {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RaftLargeFiles {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RaftLargeWordsLowercase {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RaftLargeWords {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RaftMediumDirectoriesLowercase {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RaftMediumDirectories {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RaftMediumExtensionsLowercase {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RaftMediumExtensions {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RaftMediumFilesLowercase {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RaftMediumFiles {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RaftMediumWordsLowercase {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RaftMediumWords {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RaftSmallDirectoriesLowercase {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RaftSmallDirectories {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RaftSmallExtensionsLowercase {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RaftSmallExtensions {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RaftSmallFilesLowercase {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RaftSmallFiles {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RaftSmallWordsLowercase {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RaftSmallWords {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ReverseProxyInconsistencies {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Ror {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Sap2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SpringBoot {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Sunas {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Swagger {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Tests {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Tftp {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Tomcat {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct WebAllContentTypes {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct WebExtensions {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct WebMutations {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Weblogic {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Websphere {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n14AllLettersAZ {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n3Digits000999 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n4Digits00009999 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n5Digits0000099999 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n6Digits000000999999 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MssqlEnumeration {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Mssql {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MySqlReadLocalFiles {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MySqlSqliLoginBypass {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MySql {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NoSql {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Oracle2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct PostgresEnumeration {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Db2enumeration {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct FormatStringJhaddix {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct FuzzingStringsSkullSecurity {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Html5secInjectionsJhaddix {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Json {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Ldap {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LfiJhaddix {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LfiLfisuitePathtotestHuge {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LfiLfisuitePathtotest {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Metacharacters {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SqliPolyglots {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct XssPolyglotUltimate0xsobky {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct XssPolyglotsDmiessler {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct XssPolyglots {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct XssInnerhtMl {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GenericBlindSqli {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GenericSqli {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SsiInjectionJhaddix {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct UriXss {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct UriHex {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Unicode {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct UnixAttacks {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct UserAgentsIe {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct UserAgents {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Billboard {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Car {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Computer {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct EbookReader {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GameConsole {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Glasses {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HandheldGame {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LargeScreen {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MediaPlayer {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Mobile {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MusicPlayer {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Pda {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Phone {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Server {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Tablet {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Tv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Blink {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Edgehtml {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Gecko {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Goanna {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Khtml {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Netfront {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Presto {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Trident {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Webkit {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Admire {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Android {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AopenEtile19 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Blackberry10 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Blackberry23 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Blackberry300 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Blackberry402 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Blackberry40 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Blackberry410 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Blackberry4 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Blackberry7100 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Blackberry7130 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Blackberry7250 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Blackberry7290 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Blackberry7520 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Blackberry80 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Blackberry8100 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Blackberry8110 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Blackberry8120 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Blackberry8220 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Blackberry8300 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Blackberry8310 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Blackberry8320 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Blackberry8330 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Blackberry8520 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Blackberry8530 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Blackberry8700 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Blackberry8800 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Blackberry8820 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Blackberry8900 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Blackberry9000 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Blackberry9100 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Blackberry9105 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Blackberry9220 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Blackberry9300 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Blackberry9310 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Blackberry9315 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Blackberry9320 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Blackberry9330 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Blackberry9350 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Blackberry9360 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Blackberry9370 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Blackberry9380 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Blackberry9500 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Blackberry9520 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Blackberry9530 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Blackberry9550 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Blackberry9620 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Blackberry9630 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Blackberry9650 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Blackberry9670 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Blackberry9700 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Blackberry9720 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Blackberry9780 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Blackberry9790 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Blackberry9800 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Blackberry9810 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Blackberry9850 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Blackberry9860 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Blackberry9890 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Blackberry9900 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Blackberry9930 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Blackberry99900 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct BlackberryQ10 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct BlackberryZSeries {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Buckle {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ChinaMidTablet {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Cricket {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DangerHiptop10 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DangerHiptop20 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DecAlpha {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Desire1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Desire10 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Desire2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Desire200 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Desire210 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Desire300 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Desire310 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Desire320 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Desire326g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Desire400 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Desire500 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Desire501 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Desire510 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Desire512 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Desire516 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Desire520 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Desire526 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Desire526g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Desire526gplus {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Desire530 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Desire550 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Desire555 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Desire600 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Desire601 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Desire610 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Desire612 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Desire616 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Desire619d {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Desire620 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Desire620g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Desire625 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Desire626 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Desire626g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Desire626gplus {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Desire626s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Desire628 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Desire630 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Desire650 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Desire700 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Desire728 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Desire728g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Desire816 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Desire816g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Desire816h {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Desire820 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Desire820g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Desire820q {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Desire820s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Desire820ts {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Desire825 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Desire826 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Desire828 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Desire830 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Desire860 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DesireA8181 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DesireA8183 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DesireC {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DesireEye {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DesireHdA9191 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DesireHdA9192 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DesireHd {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DesireP {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DesireSS510e {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DesireS {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DesireSms {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DesireSv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DesireU {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DesireV {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DesireVc {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DesireX {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DesireXc {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DesireZA7272 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DesireZ {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Desire {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DigitalAlphaserver {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Domino {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DroidRazr {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Droidx {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct F1s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct F5 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Fire2015 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Fire2017 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct FireHd102015 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct FireHd102017 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct FireHd62014 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct FireHd72014 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct FireHd82015 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct FireHd82016 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct FireHd82017 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct FireHdx892014Wan {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct FireHdx892014WiFi {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyAce3 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyAceIi {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyAdmire4g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyApollo {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyBeam {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyCoreAdvance {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyCore {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyEuropa {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyExhibit {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyExpress {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyGio {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyGolden {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyGrand2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyGrandDuos {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyGrandNeoDuos {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyGrandNeo {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyGrand {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyJ2Prime {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyJ7Prime {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyMega58Plus {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyMega58 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyMega63 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyMega70 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyMini {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyNexus {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyNote101 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyNoteIi {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyNotePro {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyNote {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyOmniaIi {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyPremier {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyR {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxySAdvance {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxySDuos2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxySGiorgioArmani {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxySIiEpic4gTouch {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxySIiLte {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxySIiPlus {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxySIi {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxySIiiMiniValueEdition {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxySIiiMini {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxySIii {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxySPlus {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyS {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyS3Neo {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyS4Active {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyS4Advance {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyS4Duos {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyS4MiniDuos {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyS4Mini {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyS4Neo {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyS4 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxySl {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxySpica {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyTab270 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyTab2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyTab3101 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyTab370Kids {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyTab370 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyTab380 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyTab3Lite {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyTab3Neo {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyTab3v3g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyTab3v70 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyTab4100 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyTab4101Advanced {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyTab4101 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyTab470 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyTab480 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyTab4Nook101 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyTabA101 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyTabA70 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyTabA80 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyTabA97 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyTabAPlus80 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyTabAPlus97 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyTabActive80 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyTabE80 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyTabE96 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyTabPro101 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyTabPro122 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyTabPro84 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyTabS105 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyTabS84 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyTabS280 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyTabS297 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyTabS2Plus97 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyTabS397 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyTab {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyTablet {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyTrendPlus {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyView {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyWin {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GalaxyYoung {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Htc0p3p5 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Htc0p3p7 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Htc0p4e1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Htc0p6a1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Htc0p6b {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Htc0p6b120 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Htc0p6b130 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Htc0p6b6 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Htc0p8b2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Htc0p9c2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Htc0p9o1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Htc0p9o110 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Htc0p9o2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Htc0pcv2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Htc0pcv220 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Htc0pe64 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Htc0pfh1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Htc0pfj50 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Htc0pgq1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Htc0pja1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Htc0pja10 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Htc0pkv1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Htc0pkx2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Htc0pm912 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Htc10 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Htc20 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Htc22 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Htc2fkw2bqb3ctl1n4ydwv9rwbkxioejsfkupxlmxgnvny5jbgnn3zevmr8nar969rtxhuyf9nbe7fgwihrnox0yz {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Htc2pq910 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Htc2ps6200 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Htc2ps650 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Htc2pst1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Htc2pst2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Htc2pvd1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Htc2pxh3 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Htc2pzc100 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Htc2pzm3 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Htc2q4r100 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Htc3100 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Htc331zlvw {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Htc331zlvwpp {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Htc606w {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Htc608t {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Htc609d {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Htc6435lvw {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Htc6500lvw {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Htc6515lvw {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Htc6525lvw {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Htc6535lvw {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Htc6545lvw {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Htc6600lvw {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Htc6690lvw {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Htc6900 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Htc6990lvw {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Htc6995lvw {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Htc7 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Htc7088 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Htc802d {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Htc802t {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Htc802w {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Htc8100 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Htc816g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Htc8900 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Htc9060 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcA320 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcA3335 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcA510a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcA510b {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcA510c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcA510e {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcA53ml {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcA6366 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcA7275 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcA8180 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcA9192 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcA9u {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcA9w {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcAcquire {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcAdr6290us {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcAmaze {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcApplewebkit {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcAria {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcB810x {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcBahamas {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcBravo {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcC122vl {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcC525c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcC525u {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcC715c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcChacha {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcChrome {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcClick {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcD100lvw {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcD100lvwpp {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcD10i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcD10u {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcD160lvw {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcD160lvwpp {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcD200lvw {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcD200lvwpp {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcD526h {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcD530u {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcD610t {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcD610x {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcD616w {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcD620h {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcD626ph {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcD626q {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcD626x {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcD628u {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcD650h {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcD728x {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcD816h {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcD816t {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcD816v {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcD816w {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcD816x {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcD820f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcD820mt {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcD820mu {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcD820pi {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcD820s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcD820ts {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcD820u {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcD820us {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcD820ys {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcD826t {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcD826y {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcD828g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcD830x {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcDiamond {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcDlxub1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcDream {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcDroid {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcE9 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcE9pw {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcE9x {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcEr {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcEva {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcEvo {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcEvo3d {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcEvodesign4g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcEvov4g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcExplorer {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcF5151 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcFirst {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcFlyer {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcG1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcG18 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcG2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcG3 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcGlacier {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcGof {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcGone {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcGratia {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcH1000c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcH2000c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcH3000c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcHd {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcHd2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcHd7 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcHero {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcHoliday {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcHtc {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcIncredible {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcIncrediblec {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcIncrediblee {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcIncredibles {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcK2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcKingdom {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcLegend {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcLeo {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcLexikon {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcM10f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcM10h {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcM8 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcM8minx {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcM8st {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcM8sw {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcM8sx {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcM8w {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcM8x {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcM910x {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcM9e {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcM9et {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcM9ew {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcM9pw {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcM9px {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcM9u {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcMagic {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcMytouch {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcNexus {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcOne {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcP3300 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcP3450 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcP3650 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcP3700 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcP4350 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcP4550 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcP4600 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcP515e {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcP6500 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcP715a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcPanache {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcPc93100 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcPg09410 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcPg762 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcPh06130 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcPh39100 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcPls7373adr {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcPn071 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcPn07120 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcPn072 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcPo582 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcPo58220 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcPo881 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcPoo {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcProphet {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcPyramid {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcRezound {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcRhyme {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcRunnymede {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcS510b {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcS620 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcS710d {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcS710e {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcS720e {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcS720t {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcS730 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcS743 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcS9u {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcSalsa {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcSensation {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcSensationxe {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcSensationxl {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcSmart {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcSnap {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcSprint {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcSt7377 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcT120c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcT320e {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcT328d {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcT328t {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcT329t {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcT329w {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcT528t {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcT9295 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcTattoo {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcTitan {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcTouch {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcTouch2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcTytn {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcU11 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcU12 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcUi {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcV01 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcV1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcVelocity {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcVision {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcVivo {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcVle {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcVya2f4 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcWildfire {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcWildfires {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcWindows {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcWizard {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcX315e {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcX515a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcX515c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcX515e {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcX710a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcX920e {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcX9u {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcZ560e {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcZ710a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtcZ710t {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HuaweiY5 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Iconia {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Imprint {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Instinct {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Ipad1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Ipad2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Ipad3 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Ipad4 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct IpadAir2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct IpadAirPro97Inch {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct IpadAirPro {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct IpadAir {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Ipad {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Iphone3gs {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Iphone4 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Iphone4s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Iphone5 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Iphone5c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Iphone5s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Iphone6Plus {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Iphone6 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Iphone6sPlus {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Iphone6s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Iphone7 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct IphoneSe {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Iphone {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Ipod {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct J7Pro {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct J7 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Jasper {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Karbonn1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct KarbonnK3000 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct KarbonnK9 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Kindle10 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Kindle20 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Kindle23 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Kindle25 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Kindle3 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct KindleFire2ndGen {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct KindleFireHd72013 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct KindleFireHd7 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct KindleFireHd89Wan {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct KindleFireHd89WiFi {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct KindleFireHdx72013Wan {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct KindleFireHdx72013WiFi {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct KindleFireHdx892013Wan {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct KindleFireHdx892013WiFi {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct KindleFire {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Kindle {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Lg4iqj {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Lg4qids9gmhfkskf69uybvgdkgc4fw6a0u2esximevrxhuykscsybp4zz0f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Lg4uh9zxgf {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Lg7gynvw {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Lg9x4bzft {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgA133 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgA165 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgA200 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgA250 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgA290 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgA340 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgA350 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgA380 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgA390 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgA395 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgA447 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgAk495 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgAn170 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgAn200 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgAn272 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgAn430 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgAn510 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgAs110 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgAs323 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgAs330 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgAs375 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgAs680 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgAs695 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgAs730 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgAs780 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgAs855 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgAs990 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgAs991 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgAs992 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgAs993 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgAx8370 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgB450 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgB460 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgB470 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgBh3uz8uyns {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgBl40f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgC105 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgC193 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgC195 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgC195n {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgC199 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgC205 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgC297 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgC299 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgC300 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgC320 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgC333 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgC360 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgC370 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgC375 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgC395 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgC398 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgC410 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgC555 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgC660 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgC660h {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgC660r {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgC710h {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgC729 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgC800 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgC800g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgC900 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgC900b {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgC900k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgCt810 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgCu920 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD100 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD100ar {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD105 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD107 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD120 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD120ar {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD125 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD150 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD157f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD160 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD165 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD165ar {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD170 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD175f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD180f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD213 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD213ar {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD221 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD227 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD280 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD280n {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD285 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD290 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD290n {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD295 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD300 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD315 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD320 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD320ar {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD320n {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD321 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD325 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD329 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD331 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD335 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD335e {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD337 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD370 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD373 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD375ar {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD380 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD385 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD390 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD390ar {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD390n {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD392 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD393 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD400 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD405 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD405n {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD410 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD410hn {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD415 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD500 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD505 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD520 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD605 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD610ar {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD610tr {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD618 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD620 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD625 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD631 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD680 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD681 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD682 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD682tr {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD683 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD685 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD686 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD690 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD690n {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD693 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD693ar {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD693n {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD693tr {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD700 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD722 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD722ar {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD722j {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD722v {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD723 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD724 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD725 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD727 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD800 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD801 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD802 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD802t {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD802tr {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD803 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD805 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD806 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD838 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD850 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD851 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD852 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD852g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD855 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD855k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD856 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD857 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD858 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD858hk {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD950 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD950g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD955 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD956 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD958 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgD959 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE400 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE400b {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE400f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE400g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE400r {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE405 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE405f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE410 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE410b {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE410f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE410g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE410i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE411g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE415f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE415g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE420 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE425 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE425f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE425g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE425j {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE430 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE431g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE435 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE435f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE435g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE435k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE440 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE440f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE440g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE445 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE450 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE450b {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE450f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE450g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE451g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE455 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE455f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE455g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE460 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE460f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE465f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE465g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE467f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE470f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE475f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE510 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE510f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE510g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE610 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE610v {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE612 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE612f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE612g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE615 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE615f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE617g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE720 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE720b {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE730 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE739 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE900 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE900h {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE970 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE971 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE973 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE975 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE975k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE975w {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE976 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE977 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE980 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE980h {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE986 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE988 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgE989 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF100l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF100s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF120k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF120l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF120s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF160 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF160k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF160l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF160lv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF160s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF180 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF180k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF180l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF180s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF200 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF200k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF200l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF200s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF220k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF240 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF240k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF240l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF240s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF260s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF2p69a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF300k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF300l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF310l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF310lr {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF320 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF320k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF320l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF320s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF340s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF350k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF350l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF350s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF370s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF400 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF400k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF400l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF400s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF410s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF430l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF440l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF460k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF460l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF460s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF470k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF470l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF490l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF500k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF500l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF500s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF510l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF510s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF520k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF520s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF540s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF560k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF600k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF600l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF600s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF620l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF620s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF670k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF670s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF700k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF700l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF700s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF720l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF720s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF750k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF770s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF800k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF800l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF800s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgF820l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgFelalg8tkz5ooi8qislex {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgG2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgG2x {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgG3 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgG6 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgG710 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgGb190 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgGc900 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgGd510 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgGd580 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgGm205 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgGm360 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgGr500 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgGr500r {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgGr700 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgGs290 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgGt350 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgGt365 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgGt400 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgGt405 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgGt4hioauwamgshot6ui4hj48lfdpmbzspr8n7s6yodyuculng {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgGt505 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgGt540 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgGt540f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgGt550 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgGt810h {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgGu290f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgGu295 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgGw300 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgGw305 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgGw382f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgGw620 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgGx200 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH220 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH221 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH221ar {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH222 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH320 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH324 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH326 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH340 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH340ar {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH340gt {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH340n {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH342 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH343 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH345 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH410 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH420 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH422 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH440 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH440ar {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH440n {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH442 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH443 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH445 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH500 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH502 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH520 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH522 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH525 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH525n {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH540 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH542 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH630 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH630d {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH631 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH634 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH635 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH636 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH650 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH700 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH735 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH736 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH740 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH788 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH788sg {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH810 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH811 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH812 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH815 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH815k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH818 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH820 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH820pr {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH830 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH831 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH840 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH845 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH850 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH860 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH870 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH870ds {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH870s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH871 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH872 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH873 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH900 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH901 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH910 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH915 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH918 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH930 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH931 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH932 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH933 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH950 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH955 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH960 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH961n {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH962 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH990 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgH990ds {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgJ8wopx2kzcjpf6ayecpsynxbvnm3tizoiyfssexkr {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgJz1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgK100 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgK120 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgK120gt {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgK121 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgK130 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgK20 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgK200 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgK200f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgK210 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgK212 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgK220 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgK240 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgK330 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgK332 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgK350 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgK371 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgK373 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgK410 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgK420 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgK425 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgK428 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgK430 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgK450 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgK500 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgK500n {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgK520 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgK530 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgK535 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgK540 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgK550 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgK557 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgK580 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgK600 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgKamkvjqclcbi5eunmn1zgwm2wjuxpmckkpgy {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgKc910 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgKd876 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgKe850 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgKf300 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgKg800 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgKm555 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgKm570 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgKm900 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgKp199 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgKp210 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgKp270v {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgKp500 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgKp502 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgKp570 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgKs20 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgKs360 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgKu3700 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgKu5400 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgKu5900 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgKu990 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgKu990i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgL01d {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgL157bl {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgL158vl {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgL15g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgL160l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgL163bl {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgL164vl {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgL16c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgL18vc {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgL21g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgL22 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgL22c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgL23 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgL24 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgL25 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgL31l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgL33l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgL34c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgL35g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgL38c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgL39c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgL40g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgL41c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgL43al {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgL44vl {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgL45c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgL51al {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgL52vl {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgL53bl {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgL55c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgL56vl {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgL57bl {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgL58vl {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgL59bl {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgL61al {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgL62vl {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgL63bl {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgL64vl {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgL75c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgL81al {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgL82vl {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgL83bl {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgL84vl {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgL85c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgL86c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgL96g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgL9z8arwq {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLg100c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLg108c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLg109c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLg220c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLg221c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLg231c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLg235c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLg236c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLg237c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLg238c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLg265 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLg290c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLg305c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLg306g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLg328bg {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLg329g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLg440g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLg441g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLg442bg {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLg501c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLg505c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLg511c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLg530g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLg620g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLg730 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLg800g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLg840g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLg855 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLg870 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLg900g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLgc440 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLgc441 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLgls755 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLgmp450 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLgms210 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLgms450 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLk430 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLk460 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLs450 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLs620 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLs660 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLs665 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLs670 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLs675 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLs676 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLs696 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLs720 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLs740 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLs751 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLs755 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLs770 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLs775 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLs777 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLs840 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLs855 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLs860 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLs885 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLs970 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLs980 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLs990 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLs991 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLs992 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLs993 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLs995 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLs996 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLs997 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLs998 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLu3000 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLu5400 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLu6200 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLu6500 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLw770 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLx260 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLx550 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgLx600 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgM150 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgM151 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgM153 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgM154 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgM160 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgM200 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgM210 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgM250 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgM255 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgM257 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgM320 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgM320g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgM322 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgM327 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgM400 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgM430 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgM470 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgM700 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgM703 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgM710 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgMn180 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgMn270 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgMn510 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgMp260 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgMp450 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgMs210 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgMs323 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgMs330 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgMs345 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgMs395 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgMs428 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgMs500 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgMs550 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgMs631 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgMs659 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgMs695 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgMs769 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgMs840 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgMs870 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgMs910 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgMt375 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgMv300k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgMv300s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgMx380 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgN1zirptrdginz8vrvoygtec2a2z8eb31fpmyl {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgP350 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgP350f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgP350g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgP500h {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgP504 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgP505 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgP505r {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgP655h {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgP659 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgP690 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgP690b {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgP690f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgP698 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgP698f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgP700 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgP705 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgP705f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgP705g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgP708g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgP710 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgP712 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgP713 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgP713go {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgP713tr {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgP714 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgP715 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgP716 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgP720h {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgP725 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgP760 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgP765 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgP768 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgP778 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgP870 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgP875 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgP875h {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgP880 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgP880g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgP895 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgP920 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgP920h {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgP925 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgP925g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgP930 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgP935 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgP936 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgP940 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgP940h {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgP970 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgP970g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgP970h {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgP990 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgP990h {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgP990hn {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgP999 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgQ710al {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgRcx9wkd {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgRvspklycaiuqbaynx1yhv3ju1yyeqdmnc {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgS365 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgSp200 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgSp320 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgSu640 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgSu660 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgSu760 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgSu870 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgT01 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgT300 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgT31 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgT310 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgT32 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgT370 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgT375 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgT385 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgT385b {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgT395 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgT480k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgT500 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgT510 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgT515 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgT565 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgT580 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgT585 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgTp260 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgTp450 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgU2brfxju {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgUk410 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgUk495 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgUk750 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgUlqkuchgtzp7kkypm2l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgUn150 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgUn160 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgUn161 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgUn170 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgUn200 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgUn270 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgUn272 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgUn280 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgUn530 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgUs110 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgUs215 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgUs375 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgUs550 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgUs601 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgUs610 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgUs700 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgUs701 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgUs730 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgUs780 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgUs990 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgUs991 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgUs992 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgUs995 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgUs996 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgUs997 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgUs998 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgUx700 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgV20 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgV31 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgV32 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgV33 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgV34 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgV35 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgV400 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgV400s1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgV410 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgV411 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgV480 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgV490 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgV495 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgV496 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgV497 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgV498 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgV498s1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgV500 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgV507l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgV510 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgV520 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgV521 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgV522 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgV530 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgV533 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgV700 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgV700n {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgV755 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgV900 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgV905r {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgV909 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgV930 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgV940n {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgVm101 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgVm265 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgVm510 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgVm670 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgVm696 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgVm701 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgVn150 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgVn170 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgVn210 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgVn250l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgVn250p {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgVn251l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgVn251p {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgVn270l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgVn270p {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgVn271 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgVn280 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgVn360 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgVn370 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgVn530 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgVp200 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgVs410pp {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgVs450pp {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgVs501 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgVs700 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgVs980 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgVs985 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgVx10000 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgVx11000 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgVx5500 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgVx5600 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgVx8300 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgVx8370 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgVx8575 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgVx9200 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgVx9600 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgVx9700 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgVx9900 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgX130g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgX135 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgX137 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgX145 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgX147 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgX150 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgX155 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgX160 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgX165g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgX170ftv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgX170g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgX180g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgX190 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgX210 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgX220 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgX230 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgX230yk {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgX240 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgX330 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgX330t {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgY75 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LgZ23 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LiquidMt {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Lumia1020 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Lumia1320 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Lumia1520 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Lumia430 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Lumia435 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Lumia505 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Lumia510 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Lumia520 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Lumia521 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Lumia525 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Lumia527 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Lumia530 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Lumia532 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Lumia535 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Lumia540 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Lumia550 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Lumia610 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Lumia620 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Lumia625 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Lumia625h {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Lumia630 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Lumia635 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Lumia636 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Lumia638 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Lumia640 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Lumia645 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Lumia650 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Lumia710 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Lumia720 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Lumia730 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Lumia735 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Lumia800 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Lumia8000 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Lumia810 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Lumia820 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Lumia822 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Lumia830 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Lumia900 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Lumia920 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Lumia925 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Lumia928 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Lumia929 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Lumia930 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Lumia950 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Lumia980 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LumiaCcf {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LumiaIcon {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Lumia {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MauiBasedPlatform {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MauiBasedWapBrowser {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MauiBasedWapPlatform {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MiA1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MicrosoftWindowsHttpServices {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Mk902 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Motion4g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MotoE1stGen {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MotoE2ndGen {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MotoG1stGen {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MotoG2ndGen {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MotorolaDroidMini {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MotorolaDroidTurbo {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MotorolaDroidUltra {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MotorolaV177 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MotorolaV3 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MotorolaV360v {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MotorolaV3i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MotorolaV3r {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MotorolaV600 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MotorolaV860 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MotorolaV9mm {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MotorolaVe440 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MotorolaXoom {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Mytouch4g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct N07b {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct N503i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct N503is {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct N750 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct N900i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct N904i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct N905i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NeoX5 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NeoX6 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NeoX7 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NeoX8 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NeoX88 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nexus10 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nexus4 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nexus5 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nexus5x {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nexus6 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nexus6p {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nexus7 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nexus9 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NexusOne {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NexusS {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nintendo3ds {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NintendoDsi {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NintendoWii {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NintendoWiiu {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia10 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia109 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia110 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia1100 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia111 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia112 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia1120 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia113 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia114 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia1320 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia1600 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia1680c2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia200 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia201 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia2010 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia202 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia2020 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia203 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia205 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia2051 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia2052 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia2055 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia206 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia208 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia210 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia215 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia216 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia220 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia2220s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia225 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia230 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia2320c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia2330c2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia2330c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia2600c2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia2600c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia2610 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia26261 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia2626 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia2630 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia2680s2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia2680s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia2690 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia2700 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia2700c2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia2700c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia2710c2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia2710c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia2730c1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia2730c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia2760 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia3 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia300 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia301 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia302 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia3020 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia303 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia305 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia306 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia308 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia309 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia310 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia3100 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia3108 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia3109c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia311 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia3110c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia3120classic {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia3200 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia3208c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia3230 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia3250 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia3310 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia3310i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia3330 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia3350 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia3500c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia3555 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia3600slide {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia3650 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia3710fold {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia5 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia500 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia5000d2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia501 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia501s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia502 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia503 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia503s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia5070 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia510 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia5130 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia5130c2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia5140i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia515 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia520 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia5200 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia520t {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia5220xpressmusic {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia5228 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia52301b {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia52301c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia5230C {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia5230 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia5233 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia5233ucbrowser {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia5235 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia5236 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia5238 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia525 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia5250 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia5300 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia5310 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia5310xpressmusic {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia5320 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia5320d1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia5320di {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia53301d {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia5330 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia5530 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia5530c2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia5610 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia5610d1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia5630d1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia5700 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia5700xpressmusic {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia5730s1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia58001 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia5800 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia5800d1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia5800d {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia5800xpressmusic {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia5802 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia6 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia6020 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia603 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia6030 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia6030b {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia6060 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia6070 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia6080 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia6085 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia6086 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia610 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia6100 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia6103 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia6110 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia6110navigator {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia6120c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia6120c720 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia6120cucbrowser {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia6122ccn0102 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia620 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia6210 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia6210navigator {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia6220c1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia6220c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia6230 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia6233 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia625h {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia6260s1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia6263 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia6270 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia6280 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia6300 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia6301 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia6303classic {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia6303iclassic {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia6350 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia6500s1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia6600 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia6600f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia6600i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia6600s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia6620 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia6630 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia6670 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia6680 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia6681 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia6700c1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia6700s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia6730c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia6760s1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia6790s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia7 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia700 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia701 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia710 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia7100s2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia7110 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia720 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia720t {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia7210c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia7210supernova {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia7230 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia7250 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia7250i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia7310 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia7310c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia7600 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia7610 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia7610supernova {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia7650 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia7960 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia8 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia800 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia808 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia808pureview {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia8110 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia820 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia8310 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia8350 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia8800 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia888 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia8910i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia9 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia900 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia909 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia9110 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia920 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia920t {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia925 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia925t {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia9300 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia9300i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia9500 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaAsha {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaAsha230dualsim {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaAsha230singlesim {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaAsha500dualsim {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaAsha500singlesim {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaBrowser {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaC101 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaC102 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaC200 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaC201 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaC202 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaC203 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaC205 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaC206 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaC207 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaC2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaC300 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaC301 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaC500 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaC502 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaC503 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaC505 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaC506 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaC5 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaC600 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaC601 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaC700 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaC7 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaE500 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaE501 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaE511 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaE512 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaE51 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaE521 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaE600 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaE6 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaE60 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaE61 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaE61i1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaE61i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaE631 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaE632 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaE633 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaE63 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaE63ucbrowser {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaE651 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaE65 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaE661 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaE66 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaE700 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaE701 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaE711 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaE712 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaE713 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaE71 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaE71x {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaE721 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaE722 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaE73 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaE751 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaE75 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaE901 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaE90 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaFi {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaJ7 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaMit {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaN001 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaN3310 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaN42 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaN5130 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaN701 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaN70 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaN71 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaN721 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaN72 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaN731 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaN732 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaN735 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaN73 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaN761 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaN76 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaN781 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaN78 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaN791 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaN79 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaN800 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaN8 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaN801 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaN803 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaN813 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaN82 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaN841 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaN851 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaN853 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaN85 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaN861 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaN9 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaN901 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaN900 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaN931 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaN952 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaN953 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaN95 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaN95000 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaN961 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaN96 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaN971 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaN973 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaN974 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaN975 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaN97 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaN97i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaNokia {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaNokian832gb {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaNr {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaNxx {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaPaxi {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaProfile {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaRm1038 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaRm821 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaRm915 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaRm840 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaS60 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaSeries40 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaSeries60 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaTurbo {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaVivaz {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaWap {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaWeb {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaX200 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaX201 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaX202 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaX203 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaX205 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaX2ds {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaX300 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaX302 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaX501 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaX600 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaX6 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaX700 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaX7 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaXl {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NokiaXplus {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nokia {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NookEreaderColor {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NookEreader {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct One1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct One2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct One3 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct One4 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct One6 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct One7 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct One801e {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct One801s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct OneA9 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct OneA9s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct OneCustom {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct OneDual {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct OneE8 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct OneE9 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct OneE9plus {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct OneE9s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct OneHtc {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct OneHtc6500lvw {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct OneM8 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct OneM8s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct OneM9 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct OneM9plus {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct OneM9s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct OneMax {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct OneMe {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct OneMini {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct OneMobile {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct OneS {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct OneS9 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct OneSv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct OneV {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct OneVx {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct OneX {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct OneX10 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct OneX9 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct OneXl {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct One {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct OppoA37f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct OppoA37fw {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct OptimusC {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct OptimusL9 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct OptimusM {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct OptimusOne {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct OptimusS {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct OptimusT {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct OptimusU {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct OptimusV {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct PalmCentro690 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct PalmLifedrive {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct PalmPixi {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct PalmTreo650 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct PalmTreo755 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct PalmTx {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Pixel {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Playstation3 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct PlaystationPortable {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct PlaystationVita {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct PresarioA7f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct R9s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RadarC110e {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Ruby {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungChat220 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGt002 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGt1240 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGt1440 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGt1500 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGt19100 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGt19300 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGt23 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGt3gh {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGt5830l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGt7204 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGt7220 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGt7240r {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGt7245 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGt7250 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGt7303 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGt7320 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGt7325 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGt7326 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGt7327 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGt7340 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGt7405 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGt810 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGt8190 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGt8220s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGt8280 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGt8552 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGt9000 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGt9505 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtA20 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtA7100 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtA9500 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtAndroid {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtB2710 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtB3210 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtB3310 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtB3313 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtB3410 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtB3410w {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtB5310 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtB5330 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtB5330l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtB5369 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtB5510 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtB5510b {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtB5510l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtB5512 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtB5722 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtB7300 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtB7320 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtB7330 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtB7350 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtB7510 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtB7510b {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtB7510l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtB7610 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtB7722 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtB9150 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtBn {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtC3010 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtC3011 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtC3200 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtC3212 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtC3212i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtC3222 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtC3222w {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtC3260 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtC3262 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtC3300i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtC3300k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtC3303 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtC3303i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtC3303k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtC3310 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtC3310r {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtC3312 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtC3312r {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtC3322 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtC3322i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtC3330 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtC3350 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtC3510 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtC3510t {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtC3520 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtC3520i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtC3530 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtC3536w {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtC3560 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtC3590 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtC3592 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtC3595 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtC3595v {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtC3750 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtC3752 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtC3782 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtC4 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtC4b {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtC4wb {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtC5010e {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtC5212i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtC6112 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtC6712 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtC8 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtCitrix {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtE1130b {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtE1265 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtE1282t {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtE1500 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtE2120 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtE2120b {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtE2120i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtE2121 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtE2121b {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtE2121l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtE2130 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtE2152 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtE2152i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtE2200 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtE2202 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtE2222 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtE2230 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtE2230m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtE2232 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtE2250 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtE2252 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtE2262 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtE2330 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtE2350b {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtE2370 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtE2530 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtE2550 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtE2600 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtE2652 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtE2652w {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtE3210 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtE3210b {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtE3213k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtE3300 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtE3300i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtE3300l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtE3300v {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtE3309 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtE3309i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtE3309t {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtH9500 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtH9503 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtI20 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtI5801 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtI6410 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtI8150 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtI8150b {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtI8150t {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtI8159 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtI8268 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtI8350 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtI8550e {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtI8750 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtI9050 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtI9082c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtI9082i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtI9100g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtI9100m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtI9100p {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtI9100t {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtI9103mobile {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtI9128e {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtI9128i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtI9158v {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtI9195l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtI93000 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtI9300build {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtI9305n {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtI9308i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtI9500build {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtI9505g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtI9505x {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtI9507v {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtI9600 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtL9300 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtM2310 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtM3710 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtM5650 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtM8800 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtM8910 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtN5100 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtN5105 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtN5110 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtN5120 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtN7000b {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtN7005 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtN7100t {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtN7102 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtN7105 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtN7105t {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtN7108 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtN717 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtN8000 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtN8005 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtN8010 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtN8020 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtN9000 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtN9005 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtN9300 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtP1000l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtP1000m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtP1000n {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtP1000r {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtP1000t {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtP1010 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtP3100b {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtP3105 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtP3108 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtP3110 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtP5100 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtP51103 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtP5200 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtP5210xd1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtP5220 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtP6200 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtP6200l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtP6201 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtP6210 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtP6211 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtP6800 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtP6810 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtP7100 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtP7300 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtP7300b {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtP7310 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtP7320 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtP7320t {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtP7500d {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtP7500m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtP7500r {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtP7500v {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtP7501 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtP7511 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtP8110 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS3310 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS3330 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS3332 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS3333 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS3350 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS3353 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS3370 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS3550 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS3570 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS3572 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS3600i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS3650 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS3653 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS3653w {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS3770c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS3770k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS3770m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS3770y {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS3778v {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS3800w {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS3802 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS3850 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5220 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5220r {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5222 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5222r {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5230 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5230w {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5233a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5233s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5233t {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5233w {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5250 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5253 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5260 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5260p {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5263 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5270k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5270l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5270y {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5280 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5282 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5283b {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5292 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5300 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5300b {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5300l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5301 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5301b {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5301l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5302 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5302b {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5303 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5303b {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5310 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5310b {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5310c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5310g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5310i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5310l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5310m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5310t {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5312 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5312b {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5312c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5312l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5330 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5333 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5350 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5360 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5360b {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5360build {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5360l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5360t {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5363 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5367 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5369 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5380 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5380b {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5380d {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5380k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5503 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5510t {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5511t {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5550 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5560 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5560i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5570b {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5570i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5570l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5600 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5603 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5610 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5610k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5611 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5620 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5620l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5660l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5660m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5660v {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5660z {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5670 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5670b {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5670l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5690 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5690l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5690m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5690r {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5750e {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5753e {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5830 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5830b {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5830c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5830d {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5830g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5830i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5830l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5830m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5830t {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5830v {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5831 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS5839i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS6010 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS6010l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS6012 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS6012b {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS6102 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS6102b {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS6293t {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS6310b {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS6312 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS6313t {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS6352 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS6358 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS6500 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS6500d {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS6500l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS6500t {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS6790 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS6790l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS6790n {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS6792l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS6800 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS6802 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS6802b {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS6810 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS6810b {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS6810l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS6810m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS6810p {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS6812 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS6812b {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS6812i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS6818 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS7070 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS7230e {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS7233e {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS7250 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS7250d {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS7262 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS7270 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS7270l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS7272 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS7273t {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS7278u {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS7390 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS7390g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS7390l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS7392 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS7392l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS7500 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS7500l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS7500t {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS7530 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS7530l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS7560 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS7560m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS7562 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS7562c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS7562i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS7562l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS7568 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS7568i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS7572 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS7580e {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS7583t {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS758x {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS7710 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS7710l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS7898 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS8000l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS8003 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS8500 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS8500b {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS8501 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS8530 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS8600 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtS900 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtSi9100 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtSl {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtT320nzwaxar {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtT9500 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungGtTb001 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchA850 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchA870 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchF689 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchF859 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchI100 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchI110 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchI200pp {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchI400 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchI405 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchI415 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchI435 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchI500 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchI509 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchI510 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchI535pp {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchI545 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchI545l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchI545pp {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchI589 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchI699 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchI699i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchI705 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchI739 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchI759 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchI770 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchI779 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchI800 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchI815 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchI829 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchI869 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchI889 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchI905 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchI910 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchI915 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchI920 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchI925 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchI925u {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchI929 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchI930 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchI939i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchI959 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchL710 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchM828c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchN719 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchP709 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchR211 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchR500 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchR530c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchR530m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchR530u {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchR530x {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchR680 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchR730 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchR740c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchR760 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchR760x {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchR830 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchR830c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchR860u {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchR880 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchR890 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchR910 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchR915 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchR920 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchR930 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchR940 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchR950 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchR960 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchR970 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchR970x {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchS720c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchS735c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchS738c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchS950c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchS960l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchS968c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchU350 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchU360 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchU365 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchU380 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchU410 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchU430 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchU450 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchU460l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchU460p {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchU485 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchU640 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchU660 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchU680 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchU750l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchU750p {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchU810 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchU820 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchU900 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchU960 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchW169 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchW259 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSchW279 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSgh000 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSgh1337 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghA107 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghA117 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghA157 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghA157v {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghA167 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghA177 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghA187 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghA197 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghA207 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghA256 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghA667 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghA687 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghA697 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghA727 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghA736 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghA777 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghA797 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghA817 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghA847 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghA847m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghA867 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghA877 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghA887 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghA927 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghA997 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghA997d {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghA997m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghB130 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghC160 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghC414w {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghD780 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghD880 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghD900 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghD900i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghD980 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghE250 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghE250i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghE250v {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghE370 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghE640 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghF250 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghF480 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghF480i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghF490 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghI1337 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghI187 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghI200 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghI257 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghI257m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghI317m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghI337 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghI337m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghI337z {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghI407 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghI437 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghI437p {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghI437z {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghI467 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghI467m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghI497 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghI527 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghI527m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghI537 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghI547 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghI547c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghI577 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghI600v {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghI616 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghI617 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghI637 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghI667 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghI677 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghI717 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghI717d {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghI717m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghI717r {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghI727 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghI727r {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghI757m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghI777 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghI780 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghI827 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghI827d {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghI847 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghI857 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghI896 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghI897 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghI900 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghI900orange {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghI900v {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghI917 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghI917r {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghI927 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghI927r {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghI937 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghI957 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghI957d {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghI957m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghI957r {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghI987 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghI997 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghI997r {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghJ700 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghJ700i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghL700 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghL760 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghM150 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghM200 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghM819n {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghM919n {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghM919v {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghN075t {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghS150g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghS275g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghS275m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghS390g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghS425g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghS730g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghS730m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghS959g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghS970g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghT139 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghT189n {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghT199 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghT229 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghT249 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghT255g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghT259 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghT319 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghT329 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghT340g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghT359 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghT369 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghT379 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghT399 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghT399n {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghT401g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghT404g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghT409 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghT459 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghT469 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghT479 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghT499 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghT499v {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghT499y {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghT528g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghT559 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghT589 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghT589r {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghT589w {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghT599v {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghT669 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghT669y {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghT679 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghT679m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghT699 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghT749 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghT759 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghT769 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghT779 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghT839 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghT849 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghT859 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghT869 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghT879 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghT889v {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghT899m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghT959 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghT959d {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghT959p {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghT959v {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghT959w {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghT989d {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghT999l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghT999n {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghT999v {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghU800 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSghZv50 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungShvE110s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungShvE120k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungShvE120l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungShvE120s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungShvE140k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungShvE140l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungShvE140s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungShvE150s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungShvE160k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungShvE160l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungShvE160s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungShvE170l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungShvE170s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungShvE210k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungShvE210l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungShvE210s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungShvE220s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungShvE230k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungShvE230s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungShvE250k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungShvE250l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungShvE250s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungShvE270k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungShvE270l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungShvE270s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungShvE275s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungShvE300k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungShvE300l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungShvE300s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungShvE310k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungShvE310l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungShvE310s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungShvE330k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungShvE330l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungShvE330s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungShvE370k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungShvE400s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungShvE470s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungShvE500s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSm001 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSm1329 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSm350e {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSm705 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSm910u {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSm920t {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSm970f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA3000 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA300f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA300fu {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA300g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA300h {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA300m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA300y {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA300yz {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA310f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA310m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA310n0 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA310x {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA310y {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA320f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA320fl {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA320y {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA500 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA5000 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA5009 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA500f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA500fu {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA500g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA500h {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA500k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA500l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA500m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA500s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA500w {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA500xz {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA500y {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA500yz {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA5100 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA5108 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA510f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA510fd {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA510k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA510l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA510m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA510s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA510y {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA520f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA520l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA520s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA520w {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA520x {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA530f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA530n {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA530w {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA600f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA600fn {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA600g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA6050 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA605f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA605fn {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA605g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA605gn {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA605k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA7000 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA7009 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA700f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA700fd {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA700h {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA700k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA700l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA700s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA700yd {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA71 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA7100 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA710f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA710k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA710l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA710m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA710s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA710y {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA720f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA720s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA720x {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA730f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA750f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA750fn {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA8000 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA800f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA800i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA800iz {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA800s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA800yz {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA810f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA810s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA810yz {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA9 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA9000 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA9100 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmA910f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmB311v {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmB312e {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmB313e {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmB350e {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmB351e {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmB355e {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmB360e {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmB510k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmB550h {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmB690v {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmB780a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmB780w {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmC101 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmC105 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmC105a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmC105k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmC105l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmC111 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmC115 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmC115l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmC115m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmC115w {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmC5000 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmC5010 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmC5018 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmC7000 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmC7010 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmC701f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmC7100 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmC7108 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmC710f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmC9000 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmC9008 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmC900f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmC900y {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmE500f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmE500h {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmE500m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmE7000 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmE700f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmE700h {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmE700m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG110b {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG110h {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG110m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG130bt {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG130bu {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG130e {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG130h {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG130hn {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG130m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG150nk {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG150ns {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG2817f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG310hn {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG310r5 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG3139d {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG313f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG313h {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG313hn {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG313hu {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG313hy {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG313hz {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG313m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG313ml {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG313mu {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG313my {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG313u {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG316hu {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG316m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG316ml {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG316my {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG316u {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG318h {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG318hz {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG318ml {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG318mz {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG350 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG3502i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG3502l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG3502t {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG3502u {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG3508 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG3508j {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG3509 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG3509i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG350e {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG350l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG350m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG3518 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG355h {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG355hn {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG355hq {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG355j {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG355m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG357fz {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG357m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG3588v {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG3608 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG3609 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG360az {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG360bt {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG360f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG360fy {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG360g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG360gy {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG360h {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG360hu {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG360m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG360p {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG360r6 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG360t {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG360t1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG360v {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG361f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG361h {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG361hu {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG3812 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG3812b {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG3815 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG3818 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG3858 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG386f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG386t {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG386t1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG386w {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG388f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG389f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG390f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG390w {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG390y {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG495f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG5108q {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG5306w {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG5308w {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG530a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG530az {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG530bt {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG530f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG530fz {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG530h {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG530m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG530mu {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG530p {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG530r4 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG530r7 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG530t {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG530t1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG530w {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG530y {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG531bt {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG531f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG531h {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG531m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG531y {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG532f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG532m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG532mt {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG5500 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG550fy {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG550t {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG550t1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG550t2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG5510 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG5520 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG5528 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG5700 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG570f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG570m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG570y {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG6000 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG600f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG600fy {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG600s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG6100 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG610k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG610m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG610s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG610y {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG611f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG611ff {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG611m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG611mt {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG615f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG615fu {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG625f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG710 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG7102t {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG7105 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG7105h {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG7105l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG7106 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG7108 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG7108v {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG7109 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG710k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG710l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG710s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG7202 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG720ax {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG720n0 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG730a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG730v {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG730w8 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG7508q {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG7509 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG750a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG750f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG750h {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG800a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG800f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG800h {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG800hq {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG800m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG800r4 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG800y {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG8508s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG850a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG850f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG850fq {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG850k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG850l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG850m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG850s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG850w {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG850y {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG860p {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG870a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG870f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG870w {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG881f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG8850 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG885f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG885s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG890a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG891a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG892a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG892u {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG900 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG9000 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG9006v {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG9006w {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG9008v {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG9008w {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG9009d {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG9009w {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG900a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG900az {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG900f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG900fbuild {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG900fd {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG900fq {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG900h {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG900i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG900j {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG900k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG900l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG900m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG900md {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG900p {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG900r4 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG900r6 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG900r7 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG900s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG900t {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG900t1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG900t3 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG900v {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG900w8 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG900x {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG901f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG903f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG903m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG903w {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG906k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG906l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG906s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG910s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG920 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG9200 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG9208 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG9209 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG920a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG920az {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG920f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG920i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG920k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG920l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG920p {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG920r4 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG920r6 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG920r7 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG920s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG920t {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG920t1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG920v {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG920w8 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG920x {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG9250 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG925a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG925f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG925i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG925k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG925l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG925p {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG925r4 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG925r6 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG925r7 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG925s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG925t {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG925v {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG925w8 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG925x {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG928 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG9280 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG9287 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG9287c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG928a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG928c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG928f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG928g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG928i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG928k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG928l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG928n0 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG928p {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG928r4 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG928s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG928t {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG928v {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG928w8 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG928x {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG9300 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG930a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG930az {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG930f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG930fd {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG930k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG930l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG930p {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG930r4 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG930r6 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG930r7 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG930s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG930t {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG930t1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG930u {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG930v {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG930vc {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG930vl {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG930w8 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG930x {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG935 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG9350 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG935a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG935c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG935f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG935k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG935l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG935p {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG935r4 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG935s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG935t {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG935u {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG935v {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG935vc {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG935w8 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG935x {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG950 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG9500 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG950f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG950n {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG950p {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG950u {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG950u1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG950w {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG950x {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG950xu {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG9550 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG9550u {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG9558 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG955a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG955f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG955k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG955n {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG955s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG955u {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG955u1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG955w {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG955x {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG955xu {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG960 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG9600 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG960f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG960n {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG960u {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG960u1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG960w {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG960xn {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG9650 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG965f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG965n {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG965u {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG965u1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG965w {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG965x {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG965xu {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG982a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmG990v {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmGalaxy {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmGalaxynote8 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmI9060i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ100f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ100fn {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ100g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ100h {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ100m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ100ml {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ100mu {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ100vpp {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ100y {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ105b {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ105f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ105h {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ105m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ105y {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ106b {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ106f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ106h {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ106m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ110f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ110g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ110h {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ110l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ110m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ111f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ111m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ120a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ120az {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ120f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ120fn {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ120g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ120h {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ120m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ120w {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ120zn {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ200bt {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ200f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ200g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ200gu {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ200h {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ200m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ200y {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ210f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ250f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ250g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ250m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ260g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ310 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ3109 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ3110 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ3119 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ3119s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ320a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ320az {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ320f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ320fn {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ320g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ320h {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ320m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ320n0 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ320p {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ320r4 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ320v {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ320vpp {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ320w8 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ320y {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ320yz {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ320zn {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ321az {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ326az {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ327a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ327az {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ327p {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ327r4 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ327r6 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ327r7 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ327t {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ327t1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ327u {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ327v {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ327vpp {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ327w {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ3300 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ3308 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ330f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ330fn {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ330g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ330l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ337a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ337az {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ337p {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ337t {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ337v {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ337vpp {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ337w {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ400f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ400m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ415f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ5007 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ5008 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ500f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ500fn {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ500g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ500h {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ500m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ500n0 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ500y {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ5108 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ510f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ510fn {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ510fq {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ510gn {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ510h {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ510k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ510l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ510mn {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ510s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ510un {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ530f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ530fm {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ530g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ530k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ530l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ530s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ530y {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ600f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ600fn {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ600g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ600gf {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ610f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ700 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ7008 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ700f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ700h {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ700k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ700m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ700p {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ700t {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ700t1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ701f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ701m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ701mt {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ7108 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ710fn {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ710fq {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ710gn {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ710k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ710mn {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ720f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ727a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ727az {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ727p {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ727r4 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ727s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ727t {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ727t1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ727u {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ727v {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ727vpp {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ730f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ730fm {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ730g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ730k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ737a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ737p {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ737s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ737t {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ737v {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ800fn {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ810f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ810g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ810gf {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ810m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ810y {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmJ900fn {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN750 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN7500q {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN7502 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN7505 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN7505l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN7506v {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN7507 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN7508v {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN750k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN750l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN750s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN900 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN9000q {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN9002 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN9005 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN9006 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN9007 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN9008 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN9008s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN9008v {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN9009 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN900a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN900k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN900l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN900p {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN900r4 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN900s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN900t {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN900u {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN900v {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN900w8 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN910 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN9100 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN9108v {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN910a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN910c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN910f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN910g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN910h {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN910k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN910l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN910p {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN910r4 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN910s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN910t {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN910t2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN910t3 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN910u {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN910v {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN910w8 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN910x {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN9150 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN915a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN915f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN915fy {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN915g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN915k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN915l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN915p {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN915r4 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN915s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN915t {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN915v {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN915w8 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN915x {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN916k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN916l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN916s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN920 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN9200 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN9208 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN920a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN920c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN920f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN920g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN920i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN920k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN920l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN920p {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN920r4 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN920r6 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN920r7 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN920s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN920t {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN920v {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN920w8 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN920x {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN9300 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN930a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN930f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN930l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN930p {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN930s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN930t {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN930v {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN930w8 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN930x {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN935f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN935k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN935l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN935s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN9500 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN950f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN950fd {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN950k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN950n {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN950u {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN950u1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN950w {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN950x {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN9550 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN9600 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN960f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN960n {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN960u {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN960u1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN960w {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN960x {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmN960xu {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmP355c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmP355m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmP355y {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmP555c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmP555m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmP585y {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmP605k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmP605m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmP9000 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmP905f0 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmP905m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmPen15 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmR720 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmR730a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmR732 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmR750 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmR750a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmR760 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmR765 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmR765v {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmR810 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmS120vl {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmS320vl {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmS327vl {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmS337tl {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmS367vl {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmS550t {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmS550tl {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmS727vl {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmS737tl {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmS765c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmS766c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmS777c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmS820l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmS890l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmS902l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmS903vl {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmS906l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmS907vl {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmS920l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmS975l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmS978l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmT111m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmT111nq {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmT113nu {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmT116bu {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmT116ir {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmT116nq {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmT116nu {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmT116ny {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmT210l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmT210x {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmT211m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmT2127s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmT217a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmT217t {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmT220 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmT2303 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmT230nt {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmT235y {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmT2397 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmT239m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmT285m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmT287 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmT320nzwaxar {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmT322 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmT331c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmT335l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmT357w {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmT3777 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmT377r4 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmT377t {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmT377vzkavzw {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmT377w {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmT378v {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmT380 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmT385 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmT385c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmT387v {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmT395 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmT397u {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmT530nn {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmT537r4 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmT550x {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmT561m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmT561y {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmT567v {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmT585n0 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmT587 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmT590 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmT595 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmT705m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmT705w {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmT705y {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmT719y {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmT800x {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmT805c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmT805m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmT810x {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmT815c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmT819c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmT820nzkaxar {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmT825c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmT825y {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmT827r4 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmT827v {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmT830 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmT835 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmT837v {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmW2014 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmW750v {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmW900w8 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmZ130h {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmZ200f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmZ200m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmZ200y {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmZ300h {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmZ400f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmZ400y {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSmZ9005 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSph3970dci {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSphD600 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSphD700 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSphD710bst {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSphD710vmub {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSphI325 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSphI800 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSphIp830w {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSphL300 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSphL520 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSphL600 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSphL710t {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSphL720t {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSphL900 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSphM340 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSphM540 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSphM575 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSphM580 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSphM580bst {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSphM800 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSphM820 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSphM840 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSphM900 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSphM910 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSphM920 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSphM930 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSphM930bst {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSphM950 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSphP100 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungSphP500 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SmartTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonC510 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonC510a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonC510v {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonC6603 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonC702 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonC901 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonC902 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonC903 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonCk13i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonCk15a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonCk15i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonE10a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonE10i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonE10iv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonE15a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonE15av {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonE15i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonE15iv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonE16i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonE800 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonF305 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonG502 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonG700 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonG705 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonG900 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonIs11s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonIs12s {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonJ105i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonJ108a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonJ108i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonJ10i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonJ10i2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonJ20i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonK300 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonK310iv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonK320i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonK500i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonK510i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonK530i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonK550i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonK610i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonK630i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonK660i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonK700c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonK700i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonK750i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonK770i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonK800 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonK800a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonK800c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonK800i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonK800iv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonK810i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonK818c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonK850i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonK858c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonLt15a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonLt15i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonLt15iv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonLt18 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonLt18a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonLt18i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonLt18iv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonLt22i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonLt26i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonLt26ii {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonLt26w {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonLt28at {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonLt28h {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonLt28i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonM1i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonMk16a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonMk16i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonMt11a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonMt11i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonMt11iv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonMt15a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonMt15i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonMt15iv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonMt25i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonMt27i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonP100 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonP1000i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonP1i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonP990i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonR800a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonR800at {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonR800i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonR800x {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonR800xhttp {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonS312 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonS500i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonS6 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonS700i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonSk17a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonSk17i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonSk17iv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonSo {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonSt15a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonSt15i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonSt17a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonSt17i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonSt18a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonSt18av {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonSt18i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonSt18iv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonSt25a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonSt25i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonSt25iv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonSt27a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonSt27i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonSt27iv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonT100 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonT200 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonT280i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonT700 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonT707 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonT715 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonT715a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonTm717 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonU10i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonU1a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonU1i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonU1iv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonU20a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonU20i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonU20iv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonU5 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonU5a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonU5i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonU8i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonV600i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonW100i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonW150a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonW150i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonW20 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonW200a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonW200i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonW205 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonW20i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonW300i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonW302 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonW350i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonW395 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonW518a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonW580i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonW595 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonW610i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonW660i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonW700c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonW705 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonW750i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonW800c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonW800i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonW810i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonW840i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonW850i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonW880i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonW890i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonW902 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonW910i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonW950i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonW960i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonW980i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonW995 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonW995a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonWt13i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonWt19a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonWt19i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonX10a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonX10i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonX10iv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonX1i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonX2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonXperia {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonZ310a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonZ530i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonZ780i {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricssonZ800 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyEricsson {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl22ex553DigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl24ex320DigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl24w600aDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl24w605aDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl26ex550DigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl32cx520DigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl32cx523DigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl32cx525DigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl32ex425DigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl32ex520DigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl32ex525DigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl32ex550DigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl32ex557DigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl32ex650DigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl32ex653DigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl32ex655DigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl32ex720DigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl32ex721DigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl32hx750DigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl32hx757DigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl32j1DigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl32w600aDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl32w650aDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl32w651aDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl32w653aDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl32w654aDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl32w655aDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl32w670aDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl32w700bDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl32w700cDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl32w705bDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl32w705cDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl32w706bDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl37ex720DigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl37ex725DigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl40cx520DigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl40ex520DigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl40ex521DigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl40ex525DigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl40ex640DigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl40ex650DigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl40ex720DigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl40ex723DigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl40ex725DigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl40nx650DigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl40nx720DigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl40nx727DigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl40w590bDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl40w600bDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl40w605bDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl40w700cDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl40w705cDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl42w650aDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl42w653aDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl42w654aDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl42w655aDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl42w670aDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl42w674aDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl42w700bDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl42w705bDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl42w706bDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl42w800aDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl42w800bDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl42w804aDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl42w805aDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl42w805bDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl42w807aDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl42w809aDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl42w815bDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl42w828bDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl42w829bDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl42w900bDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl43w780cDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl46ex520DigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl46ex621DigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl46ex645DigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl46ex650DigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl46ex720DigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl46hx729DigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl46hx750DigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl46hx820DigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl46hx850DigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl46hx855DigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl46nx720DigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl46w700aDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl46w704aDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl46w705aDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl46w900aDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl46w904aDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl46w905aDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl46w954aDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl46w955aDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl47w800aDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl47w802aDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl47w804aDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl47w805aDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl47w850aDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl48w585bDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl48w600bDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl48w605bDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl48w607bDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl48w609bDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl48w700cDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl48w705cDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl50ex645DigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl50r550aDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl50w650aDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl50w656aDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl50w685aDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl50w700aDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl50w700bDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl50w704aDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl50w705bDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl50w790bDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl50w800bDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl50w805bDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl50w807bDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl50w815bDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl50w828bDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl50w829bDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl50w900bDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl55ex640DigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl55ex720DigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl55hx729DigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl55hx750DigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl55hx753DigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl55hx850DigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl55hx950DigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl55w700bDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl55w790bDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl55w800aDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl55w800bDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl55w802aDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl55w805aDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl55w805bDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl55w807aDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl55w815bDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl55w828bDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl55w829bDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl55w905aDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl55w955bDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl60ex645DigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl60r510aDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl60r520aDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl60r550aDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl60r555aDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl60r557aDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl60w600bDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl60w605bDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl60w610bDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl60w630bDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl60w850bDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl60w855bDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl60w857bDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl65w850aDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl65w855aDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl65w955bDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl70r550aDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl70r555aDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyKdl70w850bDigitalTv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyPlaystation4 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyPrsT1Reader {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyPrsT3Reader {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Sparcstation {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct TabuletSparta {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct TeslaModelSDashboard {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct TransformerPad {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct TransformerPrime {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Transformer {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Ultrasparc {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Vivo {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct WindowsPhone7 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct WindowsPhone7lumia520 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Xbox360 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct XboxOne {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Xbox {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Xoom2MediaEdition {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct XperiaX {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteAndroid {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteBlade {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteBladerunner {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteE520 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteF102 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteF160 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteF555 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteF555n {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteF900 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteJack {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteK88 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteK92 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteLibra {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteMe {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteN910 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteP107a20 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteP80aiii {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteR230 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteS50 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteSkate {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteSydney {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteT100 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteT116a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteT126 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteT2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteT20 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteT3 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteT55 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteT95 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteT96 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteTara3g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteV6500 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteX500 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteZ221 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteZ222 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteZ223 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteZ331 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteZ431 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteZ432 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteZ433 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteZ667g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteZ669 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteZ716bl {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteZ740 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteZ740g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteZ753g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteZ755 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteZ777 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteZ787 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteZ791g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteZ792 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteZ812 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteZ813 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteZ815 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteZ818l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteZ830 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteZ831 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteZ832 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteZ835 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteZ851m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteZ852 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteZ861bl {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteZ955l {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteZ956 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteZ958 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteZ962bl {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteZ965 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteZ971 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteZ983 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteZ987 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteZ988 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteZ990 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteZ990g {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteZ992 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteZ993 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteZ995 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteZ998 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZteZ999 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AUnixBasedOs {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Bada {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Beos {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct BlackberryOs {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Chromeos {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Darwin {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct FireOs {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Freebsd {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Haiku {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HpWebos {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Ios {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Irix {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Linux {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Livearea {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MacOsX {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Mac {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Macos {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Openbsd {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Palmos {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RimTabletOs {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Sunos {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Symbian {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Webos {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct WindowsMobile {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct WindowsPhone {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Windows {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n126Browser {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n1337browser {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n1password {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n200pleasebot {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n360spider {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n3bRoomsWebBrowser {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n80legsWebCrawler {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct APassionForJazzMediaCrawler {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AbachoCrawler {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AccoonaAiCrawler {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AccoonaBusinessCrawler {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AdmantxPlatformSemanticAnalyzer {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AdobeAir {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AhrefsBacklinkResearchBot {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AlertsiteMonitoringBot {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AlexaBot {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AlexaCertificationScanner {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AlexaSiteAudit {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Alienblue {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Amaya {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AmazonApiGateway {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AndroidBrowser {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AnyapexWebDirectoryCrawler {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AolBrowser {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ArachmoDownloadManager {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Arora {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AvantBrowser {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AvantgoBrowser {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Awesomium {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct BaiduBoxApp {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct BaiduImageSpider {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct BaiduSpider {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct BaiduUnionSpider {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct BecomeComCrawler {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct BeslistShoppingCrawler {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Bingbot {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Bingpreview {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct BitLyLinkChecker {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct BlackberryBrowser {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Blazer {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct BlitzbotCrawler {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct BlueChrome {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct BoithoDistributedCrawler {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Bonecho {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Brave {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct BroadsignXpress {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct BrowsershotsComCrossBrowserTester {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Camino {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CareerbotSearchCrawler {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Catchbot {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CatchpointAnalyser {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Charlotte {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Chimera {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Chrome {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Chromeplus {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Chromium {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ClamavWebsiteScanner {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Coda {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CoderNut {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Cometbird {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ComodoDragon {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ComodoIcedragon {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ContentCrawlerSpider {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Converacrawler {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Coolnovo {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CosmosCrawler {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CovarioSpider {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Curl {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DataparksearchEngine {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DelphiEmbeddedWebBrowser {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DiffbotScanner {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Dillo {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DiscordBot {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DiscoveryEngineCrawler {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DlinkBackdoor {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Dolfin {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DomainReAnimatorBot {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DomaintoolsSurveybot {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Dooble {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DoradoWapBrowser {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DotcomMonitorBot {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DotnetdotcomdotorgCrawler {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Dragon {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DuckduckgoFaviconsBot {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct EaOriginBrowser {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct EarthcomCrawler {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Earthworm {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Edge {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ElectronApplication {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Elinks {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct EmbeddedWebBrowser {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct EmeraldshieldComFilter {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct EnvolkSpider {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Epiphany {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct EvaliantImpressionsBot {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct EveInGameBrowser {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ExaleadCrawler {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ExaleadImageCrawler {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ExbLanguageCrawler {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Excel {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct FacebookApp {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct FacebookBot {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct FastEnterpriseCrawler {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct FastFreshCrawler {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Fennec {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct FindlinksCrawlerBot {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Firebird {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct FirefoxFocus {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Firefox {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Flashfire {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Flock {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Galeon {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GenieoBot {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GnipUnwindfetchorCrawler {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Gomezagent {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GoogleAppEngineSoftware {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GoogleEarthPro {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GoogleEarth {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GoogleFaviconCrawler {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GoogleImageProxy {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GoogleSMediaPartnersSystemAdsense {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GoogleSearchApp {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GoogleSiteVerifierBot {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GoogleSnippetFetcher {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GoogleStructuredDataTestingTool {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GoogleWeblightProxy {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GooglebotMobile {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Googlebot {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GrapeshotBot {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GtmetrixAnalyser {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Httpclient {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Ibrowser {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Icab {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Iceape {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Iceweasel {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct InternetArchiverBot {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct InternetChannel {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct InternetExplorerMobile {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct InternetExplorer {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct InternetTvBrowser {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Iris {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Itunes {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct JakartaCommonsHttpclient {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct JavaRuntimeEnvironment {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct JavafxPlatform {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct KMeleon {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Kazehakase {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct KindleBrowser {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Konqueror {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LbBrowser {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LibraryForWwwInPerl {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Light {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LinkcheckAnalyser {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Links {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LiquidMtBrowser {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Lunascape {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Lynx {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Majestic12DistributedSearchBot {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Maxthon {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MeanpathBot {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MercuryBrowser {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MicrosoftCryptoapi {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Midori {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Minefield {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Mosaic {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MotorolaInternetBrowser {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MsnBot {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MsnMediaBot {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MvisionPlayer {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Naenara {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Netcast {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NetcraftWebServerSurvey {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NetfrontBrowserNx {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NetscapeNavigator {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Netsurf {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nexplayer {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NintendoBrowser {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NintendoDsiBrowser {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NookWebBrowser {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NutraspaceSearch {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Obigo {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Office {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Okhttp {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Omniweb {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Onebrowser {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Onenote {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct OpenWebkitSharpBasedBrowser {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct OpenwaveMobileBrowser {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct OperaMini {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Opera {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Orca {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct OutformDigitalDisplay {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Outlook {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Ovi {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct PaleMoon {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Phoenix {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct PinterestApp {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct PinterestBot {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct PlaybookWebBrowser {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Playstation4Browser {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Powerpoint {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ProEngineerWildfire {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ProximicSearch {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Puffin {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct PythonUrllib {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Qihoo360 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct QqBrowser {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct QqdownloadDownloadManager {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct QtBasedBrowser {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Qtcarbrowser {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct QualysSslAssessmentScanner {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Qupzilla {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Raptr {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Rekonq {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Roccat {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Rockmelt {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Ruxitsynthetic {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Safari {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Safepay {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SamsungBrowser {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Seamonkey {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Secondlife {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Shiretoko {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Silk {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Skyfire {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SlackbotLinkChecker {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Sleipnir {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Slimbrowser {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SogouExplorer {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SogouSearchDog {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Songbird {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyWebBrowser {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SosospiderSearchBot {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SpeedcurveSpeedTester {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Splash {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Spraycan {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SquiderBot {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SrwareIron {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Teashark {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Tencenttraveler {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Tenfourfox {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct TheworldBrowser {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Thunderbird {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct TopsyButterflyRobot {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct TweetmemeBot {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct TwitterApp {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Twitterbot {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct UcBrowser {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ValveSteamGameOverlay {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ValveSteamTenfootDisplay {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Vienna {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct VisionMobileBrowser {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct VisualBasicProject {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Vivaldi {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct VoilabotBeta {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Voilabot {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct W3cCssValidator {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct W3cLinkChecker {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct W3cValidator {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct W3m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Waterfox {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct WebkitBasedBrowser {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct WeblinkPreview {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Weblink {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct WebosBrowser {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Webpositive {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Webtv {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct WebviewBasedBrowser {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Wechat {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Wget {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Word {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Wyzo {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct YahooCacheSystem {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct YahooSlurpWebCrawlerBot {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct YandexBrowser {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct YandexSearchBot {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct YodaobotSearchBot {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Analyser {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Application {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Crawler {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DownloadHelper {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct InAppBrowser {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Proxy {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SecurityAnalyser {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SiteMonitor {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SoftwareLibrary {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Tool {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct WebBrowser {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct UserAgentsWhatismybrowserdotcomLarge {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct UserAgentsWhatismybrowserdotcomMid {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct UserAgentsWhatismybrowserdotcomSmall {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct WindowsAttacks {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct XmlFuzz {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct XssBruteLogic {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct XssBypassStringsBruteLogic {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct XssCheatSheetPortSwigger {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct XssJhaddix {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct XssRsnake {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct XssSomdev {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct XssVectorsMario {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct XssWithContextJhaddix {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct XssWithoutParenthesesSemiColonsPortswigger {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct XxeFuzzing {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AlphanumCaseExtra {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AlphanumCase {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct BigListOfNaughtyStrings {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Char {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CommandInjectionCommix {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DobleUriHex {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ExtensionTest {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ExtensionsBo0oM {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ExtensionsCompressed {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ExtensionsMostCommon {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ExtensionsSkipfish {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct FuzzBo0oM {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NumericFieldsOnly {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SpecialChars {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CurlProtocols {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DnsResolvers {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Domains1millionTop {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct IkeGroupid {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LangEnglish {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LangFrenchFull {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LangFrenchSmall {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LangGerman {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LangPortuguese {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LangSpanish {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct PiLarge {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Cities {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CityStateCountry {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CommonSurnames {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Dates {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtmlColors {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct StreetNames {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Alabama {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Alaska {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct American {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Arizona {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Arkansas {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Bloomington {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct California {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Colorado {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Connecticut {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Delaware {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct District {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Federated {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Florida {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Georgia {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Guam {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Honolulu {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Idaho {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Illinois {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Indiana {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Iowa {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Kansas {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Kentucky {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Las {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Louisiana {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Maine {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Marshall {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Maryland {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Massachusetts {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Mississippi {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Missouri {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Montana {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nebraska {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct New {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct North {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Northern {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Ohio {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Oklahoma {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Oregon {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Palau {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Pennsylvania {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Provo {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Puerto {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Rhode {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct South {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Southfield {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Tennessee {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Texas {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Vermont {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Virgin {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Virginia {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Washington {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct West {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Wisconsin {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Wyoming {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AlabamaSchool {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AlaskaSchool {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ArizonaSchool {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ArkansasSchool {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CaliforniaSchool {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ColoradoSchool {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ConnecticutSchool {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DelawareSchool {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct FloridaSchool {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GeorgiaSchool {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HawaiiSchool {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct IdahoSchool {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct IllinoisSchool {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct IndianaSchool {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct IowaSchool {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct KansasSchool {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct KentuckySchool {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LouisianaSchool {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MaineSchool {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MarylandSchool {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MassachusettsSchool {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MichiganSchool {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MinnesotaSchool {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MissouriSchool {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MontanaSchool {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NebraskaSchool {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NevadaSchool {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NewHampshireSchool {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NewJerseySchool {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NewMexicoSchool {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NewYorkSchool {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NorthCarolinaSchool {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NorthDakotaSchool {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct OhioSchool {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct OklahomaSchool {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct OregonSchool {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct PennslyvaniaSchool {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RhodeIslandSchool {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SouthCarolinaSchool {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SouthDakotaSchool {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct TennesseeSchool {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct TexasSchool {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct UtahSchool {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct VermontSchool {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct VirginiaSchool {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct WashingtonDcSchool {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct WashingtonSchool {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct WestVirginiaSchool {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct WisconsinSchool {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct WyomingSchool {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AmericanSamoaSchool {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct BureauOfIndianAffairsSchool {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DistrictOfColumbiaSchool {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GuamSchool {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MississippiSchool {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct OtherSchool {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct PennsylvaniaSchool {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct PuertoRicoSchool {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct VirginIslandsSchool {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZipCodes {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct UsCities {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ContentType {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtmlEvents {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HtmlTags {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HttpRequestHeadersCommonIpAddress {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HttpRequestHeadersCommonNonStandardExamples {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HttpRequestHeadersCommonNonStandardFields {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HttpRequestHeadersCommonStandardExamples {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HttpRequestHeadersCommonStandardFields {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SessionId {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct WordlistSkipfish {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n10MillionPasswordListTop100 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n10MillionPasswordListTop1000 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n10MillionPasswordListTop10000 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n10MillionPasswordListTop100000 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n10MillionPasswordListTop1000000 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n10MillionPasswordListTop500 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n100kMostUsedPasswordsNcsc {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n10kMostCommon {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n500WorstPasswords {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SplashData2014 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SplashData20151 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SplashData20152 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Best1050 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Best110 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Best15 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CommonPasswordsWin {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct FourDigitPinCodesSortedByFrequencyWithcount {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MedicalDevices {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Top20CommonSshPasswords {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct TopPasswordsShortlist {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct WorstPasswords2017Top100Slashdata {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Milw0rmDictionary {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct OracleEbsPasswordlist {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct OracleEbsUserlist {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Db2Betterdefaultpasslist {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DefaultPasswords {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct FtpBetterdefaultpasslist {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MssqlBetterdefaultpasslist {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MysqlBetterdefaultpasslist {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct OracleBetterdefaultpasslist {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct PostgresBetterdefaultpasslist {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ScadaPass {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SshBetterdefaultpasslist {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct TelnetBetterdefaultpasslist {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct TelnetPhenoelit {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct TomcatBetterdefaultpasslist {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct VncBetterdefaultpasslist {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct WindowsBetterdefaultpasslist {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SucuriTopWordpressPasswords {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MultiplesourcesPasswordsFabianFingerle {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct PythonHeraldingSep2019 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct WordpressAttacksJuly2014 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct KeyboardCombinations {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n000webhost {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AshleyMadison {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LizardSquad {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Adobe100 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AllegedGmailPasswords {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct BibleWithcount {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Bible {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Carders {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ElitehackerWithcount {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Elitehacker {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct FaithwritersWithcount {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Faithwriters {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Hak5Withcount {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Hak5 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HoneynetWithcount {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Honeynet {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Honeynet2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Hotmail {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Izmy {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Md5decryptorUk {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MuslimMatchWithcount {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MuslimMatch {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MyspaceWithcount {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Myspace {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct PhpbbCleanedUp {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct PhpbbWithcount {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Phpbb {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct PornUnknownWithcount {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct PornUnknown {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Rockyou05 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Rockyou10 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Rockyou15 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Rockyou20 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Rockyou25 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Rockyou30 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Rockyou35 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Rockyou40 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Rockyou45 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Rockyou50 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Rockyou55 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Rockyou60 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Rockyou65 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Rockyou70 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Rockyou75 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RockyouWithcount {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Rockyou {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Singles {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Tuscl {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Youporn2012Raw {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Youporn2012 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Conficker {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MiraiBotnet {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MostPopularLetterPasses {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct PhpMagicHashes {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n1337speak {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct KorelogicPassword {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct PasswordPermutations {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ScrabbleHackerhouse {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CainAndAbel {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct JohnTheRipper {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct UserPassComboJay {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ProbableV2WpaTop447 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ProbableV2WpaTop4800 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ProbableV2WpaTop62 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Bt4Password {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CirtDefaultPasswords {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ClarksonUniversity82 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Darkc0de {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Darkweb2017Top10 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Darkweb2017Top100 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Darkweb2017Top1000 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Darkweb2017Top10000 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DerPostillon {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DutchWordlist {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MssqlPasswordsNansh0uGuardicore {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Openwall {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ProbableV2Top12000 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ProbableV2Top1575 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ProbableV2Top207 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RichelieuFrenchTop20000 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RichelieuFrenchTop5000 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct StupidOnesInProduction {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct TwitterBanned {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct UnkownAzul {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct XatoNet10MillionPasswords10 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct XatoNet10MillionPasswords100 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct XatoNet10MillionPasswords1000 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct XatoNet10MillionPasswords10000 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct XatoNet10MillionPasswords100000 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct XatoNet10MillionPasswords1000000 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct XatoNet10MillionPasswordsDup {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct XatoNet10MillionPasswords {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CommonAdminBase64 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MultiplesourcesUsersFabianFingerle {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct FamilynamesUsaTop1000 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct FemalenamesUsaTop1000 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MalenamesUsaTop1000 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Names {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CirtDefaultUsernames {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MssqlUsernamesNansh0uGuardicore {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct TopUsernamesShortlist {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct XatoNet10MillionUsernamesDup {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct XatoNet10MillionUsernames {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Hashesorg2019 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Weakpass2a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Weakpass2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HashesOrg {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Weakpass1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Dchtpassv1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Weakpass {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DicAss {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Weakpass2Wifi {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct WeakpassWifi1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Top2BillionProbableV2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HkHlmFounds {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Breachcompilation {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NummerDb {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct B0n3zSortedWordlist {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct OnlyLatin {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Md5decryptAwesomeWordlist {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct B0n3z {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Antipublic {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Top353MillionProbableV2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct PasscapeComp {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct EvilGhost {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Top109MillionProbableV2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct InsideProFull {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Kac {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Crackstation {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SuperMegaDic {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Uniq {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct PasswordsCollection {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HyperionOnHackForumsNetRelease {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MegaCracker {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct WordlistBySheezV8 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Rp4 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Top29MillionProbableV2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Rp2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Passwords2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Wordlist82Million {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Lolwtfhax {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ENtr0pYAllSortUniq {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MixLoginsEmail2016 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Hashkiller {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MecaPasslist {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CrackstationHumanOnly {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct BacktrackBigPasswordLibrary {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NaxxatoeDictTotalNewUnsorted {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HyperWordlistDic {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HashcatPot {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ErrorNeoMixedRawV0 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct WordlistByKakoluk {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct WordlistBySheezV6 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RealEnglish {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HashkillerOutput {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct WordListCollectionClean {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Hashash {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct M3GThiCthWordlistCleaned {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RealPassLogin {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MegaSlovar {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n231MioPwsMin8Digits {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RandomSocialUsernamesupd {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Collection {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Weakpass2p {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Domains {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SkullSecurityComp {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct FlingTop {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AdobeUsers {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Top1pt6MillionProbableV2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct BestByChesteRock1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MostSecurity {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Dazzlepod {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GmailAlleged {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GmailOutPass {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MemberLogin {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Gmail {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Sqlmap {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Linkedin {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n10MillionPasswordListTop10000002 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct WordsUsernames {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Gamigo {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SoundcloudUsernames {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Wordlist {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Antichat {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ClearedPrimaryPasslisV2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Rp3 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Mailpassname {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AminnoMember {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Misc {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n3000000ComboList {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CustomWpa {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Huge {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Mailpass17 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Xsplit {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NetZwerg {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Enwiki20140502AllTitlesWordlists {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Mail {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct WordlistFinal {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct VbPasswords {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct WordlistWww {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Ut2004 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct UltimatePasswordsList {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CleanV2OutPass {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Mangled {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AminnoMemberEmailParsed {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct WordpressUsernames {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Top304ThousandProbableV2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ArgonWordlistV2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AllRounder {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct International1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RobloxUsernames {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MailOutPass {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct TinyButMighty {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n14MioMostCommonPasswords {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct WpalistClean37Mio {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Wordlist2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SuperWpa {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DavajjUltimateWordlist {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Wordlist22 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct EmailLogins {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Sprashivairu {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Lulzsec {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Human3 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct YandexAlleged {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct WordlistByDarkircop {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct English {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Human1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Bfield {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Kippo {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Common2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n10MillionPasswordListTop1000002 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Logins2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Human4 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MusicBrainzWordlists {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Vkontakte {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct UsaLoginsEmail2015 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Gawker {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Yahoo {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Realpass3 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct WordList843 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct InstagramHashtags {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Webhost000Thechief {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Freerainbowtables {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Theargon {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LoginsEnRu {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LeakedEmail2014 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct InsideProFound {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CracklibWords {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Cracklib {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct General {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Gdict {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ThedefinitvepasswordlistComplete {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Md5this06 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct International2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Mailru {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n1000000passYandexRuOutPass {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ComputerRelated {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ImdbWordlists {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Dictionary {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct EmailPassGames {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n6d58207a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct VkNickname {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AshleyMadison2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct OpenlibraryWordlist {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ForbesUsers {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Misc2013 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Bad5 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Hackforums {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Medium {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Thematic {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ThematicSummary {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Aha {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n681a79de {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Realpass2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct B6a9f16a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Familii {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Mupass {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RagnarokOnline2003 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct D5a9ec3f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct FacebookFirst {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct FacebookFirstnames {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct FacebookLast {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct FacebookLastnames {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n2275000PasswordList {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Mats999kEdited {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Ffgbeach {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Human2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n1222532f {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ThisIsItPwlfinal {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct TechAndScience {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MusicSongs {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RussianDomains {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Hugedb {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Enwiktionary20140522AllTitlesWordlists {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Eb30e455 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Stratfor {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Supercommon {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct InsideProMini {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n3d2c6707 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Combocanem765927Userpass {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct BestByChesteRock3 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Combo18e {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Bigdict {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Bad6 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Rootkit {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct EnjinUsernames {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Xac2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Xaf2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SuperPwl {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Fanfiction {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct German {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NamesNet {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Vk {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Cracklib2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Passwordwordlist {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Tbswordlist1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct B5fb43b6 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Realpass {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct FacebookWords {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct PolskaWordlist2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Dico {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Xag2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Word02 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n0vhfirstpass {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Milw0rm {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n372481d4 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct F04d073b {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ArgonOuther {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Xad2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Top12ThousandProbableV2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Yandexru {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Blackhat {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DeliciousTakoyaki {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GermanDic {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct BestByChesteRock2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct WorldPoker {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GeonamesWordlists {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Surname2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct EmailPassMutilHoster14122015 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Passwordlist {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n10MillionPasswordListTop100002 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nmap {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Majypwl {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Mixed660kPws {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Randompastebin1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MusicArtists {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct VkSurnames {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n5497a0c7 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Whitefox {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct C046a38b {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Xab2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Name {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Abbreviation {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Used {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Gamers {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct VkNames {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Allwords {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n30k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n29e5152a {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Mayhem {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct InsideOtherByChesteRock {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Pron {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ComboNew {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct FinnishUnknown {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct BruteXPassword {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n10kMostCommon2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CommonRoots {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Army {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct BigWpaList1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MusicAlbums {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Fe2a5103 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Xaa2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct B5791f06 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ThCPwl81k {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Happybirthdaytoeq {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ActressCharactersNopunctNospaceLower {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n42500m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct FacebookNamesUnique {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Walla {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Best64ByChesteRock {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Surnames {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Ebooks {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Surnames2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Cinnescape {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Mru {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n3wifiWordlist {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n54fbb463 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Encyclopedia1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct UnknownPorn {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Cain {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct BigWpaList2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CainandAbel {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Words {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct InetMac {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct PlainText {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct TopDomains {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RussianUsers {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct InsideProMicro {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct John {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Fabfreeforums {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Weekend {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct FinalWordlist {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Elitepwl {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct OtherPwl1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Leets {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Tomsawyer {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MEgaPwl {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Wpa {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n2Pwl {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SomePassw28 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct TetrisfriendsUsernames {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyDelboca {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MusicMisc {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AwakenedLands {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct IcqPopular {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Mini {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct PopularRussia {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct UnixFreshScanner {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n14kRuOutPass {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MiniPass {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Blackstar {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Net {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Abc {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Random {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Sonyleaked {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct WordList768 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct InstagramUsernames {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Quequero {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct FacebookLastfirst {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct EnglishLargeLower {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct TwoWord {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Gaming {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Opnkorea {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Dictionaries {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct FacadecomputerWordlist {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct English2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Films {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct PasswordsYouporn2012 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct PasswordsYouporn2012Raw {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Alypaa {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Top1575Probable2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Enwikibooks20140606AllTitlesWordlists {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HotPwList {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HostPwlist {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MiscDictionary {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Italian {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ListaPassword {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RouterscanWordlist20150530 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Culture {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct FacebookFirstlast {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct EnglishSmallLower {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Lower {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Lower3 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Hellfire {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct FacebookF {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SmerksPwL {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct WorldOfWarcraftUsernames {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HostNLeet {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Common4 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Finnish {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Bad2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct FinnishWww {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n06 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MiniQwerty {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Numpass {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Danish {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n3360Common {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ProsapHotel {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Quotes {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DanishLargeLower {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Bad3 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n02bc69bc {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n3785b57c {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct TytePwl8500 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Titles {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Acdc27sDictionary {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DannyPwl {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Danish2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct IpmiPasswords {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct FinnishLower {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Xae2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DirbBest1050 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyRestlessBeauty {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct WifimapsWordlist {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct KnuthBig {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct BigWpaList3 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Mindo {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MidgetsBiggerCommonPwl {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Suomifutisnet {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DefaultPassForServicesUnhash {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Sunrise {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct PatreonEmail {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Lineup37 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Lineupodd37 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Norwegian {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CommonSmall {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Actors {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HkgroupPasswordsSorted {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n10MillionPasswordListTop10002 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ItalianLargeLower {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Payas0Host {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Religion {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CommonPasswords {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Top630Passwords2009 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Japanese {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Starin {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n50kNames {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct EnWordlist {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct FacebookPhished {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Encyclopedia2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Junk {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct EnGbWordlist {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Movies {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct TopPasswordsRdp {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MidgetsCommonPwl {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct EnUsWordlist {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct French {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct BurnettTop1024 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Pbs {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct FacebookUsernames {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct EnglishExtraLower {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AllDictionaries {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Lower2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct German1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Kali2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Casio {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct FaithwritersNocount {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Soundtracks {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct UnixPasswords {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Opisrael {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CriminalAndJunk {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NormR {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SomePassw26 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n10MillionPasswordListTop5002 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Randompastebin3 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Dates0101190031312020 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct BooksWordlists {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct OnlineBrute {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Fasttrack {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Businessname {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Classic {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CommonPass {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct WlFr {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct FrenchLower {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Xah6 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Line37 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CommonPasswords2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Unix {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct BooksNopunctNospaceLower {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MostCommonPass {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Words2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GoodByChesteRock {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct List {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Jargon2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Voodo {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Knuth {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct UsenetLoginIds {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct UsenetL {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Dansk {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Ud {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Web2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct WebsterDictionary {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Beale {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n2of4brif {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Top207ProbableV2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Hosts {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct UsenetM {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Kjbible {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct UsenetMachines {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SnmpDefaultPass {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RouterScanPopularPasswords {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct TelnetCiscoDefaultPass {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n5desk {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct League {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Netflix {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Megabeast {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Kali {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Policy {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct EnglishTinyLower {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SomePassw27 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Places {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CrackingIllyzByScrappy {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct BurnettTop500 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Twitter32m {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Otherpwl2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Passwords22 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct EnglishWords {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Minix {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Klichki {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct WordlistTop500PswMangled {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Length06 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NamesPet {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct UnixDictionary {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GoldenPass {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Actresses {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Cow {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct PolishLower {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Names2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct UsenetN {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SomePassw23 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Polish {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Dutch {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DicForBrNames {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct UsenetNames {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Otherpwl5 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CoyotecultWordlist {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Ethnolog {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n10MillionPasswordListTop1002 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Opsea {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CaseMutation {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DaWordlist {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Digits {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct PassByFrog416 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Englex {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NamesLast {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Eharmony {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Brizilian {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Gnu {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Python {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct UunetSi {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct PtBrWordlist {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Zipcodes {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RusCitiesTranslit {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Yandex {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Db2DefaultPass {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct JapaneseLower {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n1000000cl {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Keyboard {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Italian2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AdvlamerSequences {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct TimsPasswordList {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct BigAssPassList {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Utf8 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct BoersePwListe {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Length08 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n08 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Lcarrol {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct KeyboardCombo3 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct FrenchWordlistAccent {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DefPass {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct FlRudump {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct FrWordlist {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct IndianNames {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n89b6c191 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NlWordlist {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Latina {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct PatreonYoutube {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Asteroid {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Chinese {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Korean {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Medak {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Spanish {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Malagasy {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Serbian {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Russian {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Malayalam {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Sanskrit {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Swedish {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Occitan {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CzechLower {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Malay {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Marathi {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Turkish {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nepali {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Tamil {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Telugu {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Thai {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Macedonian {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Czech {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Bihari {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Arabic {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Albanian {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Catalan {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Hindi {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Esperanto {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Indonesian {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Ukrainian {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Hafan {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct PanPrstenu {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RusCitiesKbchange {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Somali {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Romanian {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Ossetian {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Slovene {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Swati {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Uzbek {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Vietnamese {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Navajo {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Yiddish {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Turkmen {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Urdu {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Welsh {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Romansh {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Mongolian {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Wolof {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Panjabi {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct WesternFrisian {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Tibetan {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Pashto {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Oriya {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NorthernSami {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Maltese {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Tonga {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Portuguese {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Volapuk {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Maori {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Persian {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NorwegianNynorsk {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Yoruba {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Slovak {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Quechua {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Uighur {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Sindhi {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Luxembourgish {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Tatar {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Sardinian {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Tajik {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Tagalog {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Pali {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Walloon {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct InternationalNames {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DumpCtf365 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct FileLocations {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DeWordlist {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Assamese {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Abkhaz {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Chuvash {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Bengali {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Armenian {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Afrikaans {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ChurchSlavonic {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Bashkir {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Corsican {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Bambara {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Burmese {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Azerbaijani {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Cornish {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Basque {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Chechen {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Bulgarian {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Belarusian {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Aragonese {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Avaric {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Amharic {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Bosnian {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Aymara {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Divehi {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Breton {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Croatian {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Javanese {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Kurdish {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Georgian {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Haitian {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Lingala {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Komi {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Icelandic {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Lao {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Hungarian {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Interlingue {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Irish {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Gaelic {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Greek {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Interlingua {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Ido {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Igbo {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Latvian {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Guarani {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Kirghiz {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Galician {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Gujarati {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Faroese {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Lithuanian {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Kalaallisut {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Kinyarwanda {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Limburgish {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Kannada {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Estonian {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Hebrew {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Kazakh {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Khmer {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Latin {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Sundanese {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Swahili {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Sinhala {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Manx {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AmericanEnglishHomophones {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct OzHomophones {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Akvaristika {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Lecivky {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Myslivost {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct FamiliiRus {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct FamiliiTraslit {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MuzkieImenaFamiliiCyrillic {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MuzkieImenaFamiliiTranslit {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Russian2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RusssianCyrillicDic {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Readme {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SpainName {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SpanishDic {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AntiOxpass {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LongList {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MainWordlist {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Secondary {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct UserPassesProjekt1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Wordlist05April2003 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ItWordlist {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Bible2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Cities2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Os {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NamesAll {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Splashdata2015 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CrackerToolzTop1000 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Commonnum {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Splashdata2014 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Commons {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Places2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct African {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AfrikaansLower {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ComboMailPassSql30858 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AGoodpwl {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct PlWordlist {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Cizijmena {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Key86 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Xom {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Dates2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Hak5Nocount {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct PtPtWordlist {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SwappernetTop50 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nicecommon {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Names3 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Scv4FromVpn24 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Hosts2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Criminal {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Czech2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MultiVendorCctvDvrPass {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Movies2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Phrases {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct PasswordsClarkson82 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SvWordlist {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Common3 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Music {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Bomb {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Toker {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct German2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Randompastebin2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MestintWordlist {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct EstonianWords {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NamesRus {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct TinyWordlist {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DutchExtraLower {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Length07 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n07 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Composers {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct TrWordlist {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct KeyboardCombo6 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct KlichkiLatin {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HostsTx {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Rapidgator {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct UnknownDating {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DictionaryRussianBigTranslit {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LoginsRdp {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct WordlistDic {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Phish {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ActressesNopunctNospaceLower {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Pad {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Otherpwl4 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct PhishPwl {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Directors {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct L33t {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Designers {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Producers {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct EnglishUpper {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyAutotrader {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SonyGreecePins {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CommonPasswords3 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Writers {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Cinematographers {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RuRztsUnsort {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct FiWordlist {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Editors {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct EnglishProperNames {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SmallFirst {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SmallLast {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct FrenchWordlistSansAccent {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SomePassw21 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Rockyou5 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct TopShortlist {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Keywords {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Antworth {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Web14 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct PasswordNames {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Religion2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RussianCurse {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Chemiksp {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct French2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct EstonianNames {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Pw01 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CzechMixed {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Elyrics {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RussianFirst {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RussianLast {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RussianKoi8ExtraCslang {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RussianKoi8SmallAcronym {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RussianKoi8SmallCap {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RussianKoi8SmallLower {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RussianKoi8SmallMixed {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RussianWindows1251ExtraCslang {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RussianWindows1251SmallAcronym {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RussianWindows1251SmallCap {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RussianWindows1251SmallLower {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RussianWindows1251SmallMixed {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Vb1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NFrench {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct TownsUs {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Russian22 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct BelarusianClassicalSpelling {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct BelarusianModernSpelling {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Musiccircle {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Mirpesen {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Hotlyrics {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct FrenchNames {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Filozof {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DictionaryRussian {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DictionaryRussianBig {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Stolicy {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct StranuMiraCyrillic {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct KlichkiRus {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct KlichkiZivotnyhRu {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RusMini {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RussianFull {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RussianKoi8 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RussianMiniOem {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RussianMini {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Russian3 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Russian31799 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RussianName {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RusskieMaty {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RuRztsSortPart1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RuRztsSortPart4 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct UmenshitelnyeImena {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ZenskieMuzkieImena {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Cracked {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct UnabrDict {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SomePassw12 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Dict {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DefUserNames {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n01 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n19002005 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RusSurnamesFirstLetter {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct TranslitRus {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DevicesPasswords {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HrWordlist {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NbWordlist {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Foldoc {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RusSurnamesDate099Fin {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NamesWomen {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Itswapshop {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Knittinglove {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DanishLower {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Malename {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Length05 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n05 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n4letters {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct FernWifiCommon {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SlWordlist {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Tbswordlist2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MaleNames {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DatasDdmmgggg {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RootUserpass {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Short {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct FemaleN {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NameSurnameRu {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Usernames {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DutchCleanLower {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HttpDefaultPass {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CsWordlist {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Crl {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MusicRock {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MyPassys {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct FastNames {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NCommon {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CommonNames {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Crl2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Literature {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n04 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct FoxFromLulzsec {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Up37 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Wp {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NorwegianLower {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MusicCl {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RusSurnamesFin {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Music2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n09 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct EsWordlist {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Classical {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Norwegia {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Jargon {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Koran {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Placesss {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Unix2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NamesMen {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n852006Googlecachepasswords {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n852006Googlecachepasswords2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CroatianLower {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SpanishLower {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct WordpressAttacksJuly20142 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Cis {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Colleges {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Dns1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Dns2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Dns5 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Czech3 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Spanish2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Spanish22 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Ghostbin {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ImenaISlovaSCiframi {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Spanish67233 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MusicJa {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct WpEs {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Frequent {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HungarianLower {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct UniqpassPreview {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RusSurnamesDate19002020Fin {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Australian {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct KeyboardCombo4 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Hungarian2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NOther {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct OtherNames {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct WpFr {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Drugs {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Science {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Special {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SpecialEnglish {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct FacebookPastebay {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Internal {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MovieCh {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MovieCharacters {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LvWordlist {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Statistics {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RusNamesTranslit {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct YoutubeNames {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NSwed {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct EnglishLargeCap {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SwedishLower {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct TurkishLower {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SpecialHacker {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NNorweg {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Numbers {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DatasMmddgggg {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct KbChangeRus {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DevicesLogins {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n31337Speak {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Brithumor {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MusicSh {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct UsZipcodes {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Shows {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct UunetSites {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Ceskajmena {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Zodiac {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Chromeplay {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Cartoons {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Bacteria {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ItalianSmallLower {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Oz {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Common1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Dns4 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct InternetFtpSites {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Keyba8 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MythsLe {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n123Name321000 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct WpDe {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ArabicNames {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Congress {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct OneupR {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MusicCo {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct UsCities2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SomePassw25 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n03 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Chars {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Congress2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Country {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct EnglishSmallCap {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MeecosGermanPwl {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NStatis {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RusNamesDate099Fin {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MusicGroups {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n3letters {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Actor {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Dns3 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MaleNamesPassword {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct OldGold {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Lcarrol2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LatinLower {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NStati2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Numbers2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nameyy {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RusEng {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SongsTranslit {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Famous {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Famous2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NActor2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NActors {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NSurna2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Shakespeare {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct TownsCa {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ActorGivenname {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ActorSurname {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GivenNames {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct KeyboardCombo5 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Germanl1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nameyyyy {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DatasGggggggg {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct WpchitBg {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct KbRusNounMale {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct TrRusNounFem {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DirbNames {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct PatreonTwitter {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GermanLargeCap {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GermanLargeLower {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NFamily {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Numbers3 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SomePassw18 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SomePassw24 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RusNamesDate19002020Fin {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RusNamesFin {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct TwitterUsernames {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Automobile {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct TownsNl {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct TownsGb {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Animals {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Sports {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RuRztsSortPart3 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct TrRusNounMul {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GermanSmallLower {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SwahiliLower {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Viet74K {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CrlName {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NFemal2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RusMat {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AuthorsNopunctNospace {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Fungi {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Hindu {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct KeyboardCombo7 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Animals2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Biology {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Chinese2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CrlNames {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct IndianCities {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct IranianNames {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Germanl {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Pinyin {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct WpRu {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RusNamesKbChage {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SongsKb {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct PatreonFb {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct FrenchWordlistMajuscule {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Enfuck324 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GermanSmallCap {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ColorsLcase {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Usstates {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Dogs {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Dogterms {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Drugssports {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NAnglos {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NSurnam {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Numbers4 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Numbers5 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct UsCount {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Uplay {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n02 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct EnEmoji {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct TownsMx {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct TownsDe {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct InternationalCurse {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Top1000UsaFemalenamesEnglish {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AolSearchPhrases {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Algae {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Assurnames {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct BooksOfTheBible {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Cars {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Cartoon {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Cartoons2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ComicStrips {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DaysOfWeekMultipleLanguages {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct EmilHesla154 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DvouHesla {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DdmmyyName {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nameddmmyy {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Nameddmmyyyy {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RusLatin {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Unisex {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct T1RztsSortPart1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DateWordlist {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct PasswordNames1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct KbRusNounFem {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CroatianMixed {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Lyricsbook {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DutchCleanMixed {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DutchExtraMixed {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct EnglishExtraAcronym {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct EnglishExtraAlnum {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Catala {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct EnglishExtraCap {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HciOraclePasswords {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct EnglishExtraMixed {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct EnglishLargeAcronym {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct EnglishLargeAlnum {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct EnglishLargeMixed {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct EnglishSmallAlnum {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct EnglishSmallMixed {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct EnglishTinyCap {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Aeneid {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Acronyms {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct FrenchMixed {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct British {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GermanLargeAlnum {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GermanLargeIdioms {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GermanLargeMixed {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HungarianMixed {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ItalianLargeMixed {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct JapaneseMixed {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LatinCap {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LatinMixed {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LatinUpper {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SwahiliMixed {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SwahiliUpper {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SwedishCap {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct TurkishMixed {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct YiddishLower {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct PhpmyadminLocations {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Porno {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Country2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Viet11K {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Viet22K {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Viet39K {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Drugs2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Sonybmg {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Fable {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HinduNames {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Iliad {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Microalg {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Movies3 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NChines {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Norse {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Odyssey {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Rocknroll {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Tech {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Tolkien {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Mixed {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct BasicSpanishList {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct UserPassJay {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Dsl {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n8dig5miluplow2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n8dig10miluplow2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n8dig5milup {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n8dig10miluplow {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n8dig10millow2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n8dig10miluplow3 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n8dig10millow {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n10dig5miluplow4 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n8dig5milup2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n8dig10milup2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n10dig10milup {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n10dig5milup3 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n10dig1miluplowtried {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n10millionupperlowernum19spec {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n10dig5milup2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n10dig5miluplow2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n8dig5miluplow3 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n10dig5milup1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n10dig10miluplow4 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n8dig10milup {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n10dig10milup2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n10dig5miluplow3 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n8dig5milup3 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n10dig10miluplow2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n8dig5miluplow {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n10dig10miluplow {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n10dig10miluplow3 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n10dig5miluplow {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Odd37 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ProverbsWordlists {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MubixIzmy {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct FrEmoji {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SrWordlist {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RuWordlist {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ElWordlist {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Top1000UsaFamilynamesEnglish {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Top1000UsaMalenamesEnglish {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Latin2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct n7letterLastname {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Abbr {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AmericanProperNames {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AmericanUpper {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AmericanWords {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Arthur {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Booze {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct BritishAbbreviations {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct BritishProperNames {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct BritishUpper {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct BritishWords {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct BritishZAbbreviations {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct BritishZProperNames {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct BritishZUpper {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct BritishZWords {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CanadianAbbreviations {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CanadianProperNames {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CanadianUpper {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CanadianWords {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Charlema {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ChineseNames {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CommonBase {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ComputerCompanies {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Domains2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Dosref {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct InternetDomains {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct KingArthur {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Languages {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Microalgae {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct OxfordColleges {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ShakespeareNames {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Trek {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Variant {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Variant0 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Variant1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Variant2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct WebstersTwoWord {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct WorldHeritage {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Yiddish2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Chemik {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GermanNames {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DdmmyyyyName {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct StranyMiraTranslit {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct K1RztsSortPart1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RuRztsSortPart2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RuRztsSortPart5 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Female {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Male {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Read {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct TurkeyName {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DatasDd {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DatasDdzydfhmGggg {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DatasGgggGggg {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DatasMmDdGggg {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DatasMm {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DatasZydfhmDdgggg {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct InsideCoreByChesteRock {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct PasswordNames2 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct PaswordNumber {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct UsaDomainsEmail2015 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AdWordlist3 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AdWordlist {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Belhh111 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Fucklist {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MatureComboList {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Meh {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ModdedWordLis01t {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NiggaWigga {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct StupidNumberCombo {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Wordlist38 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Wordlist1 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Wordlist10 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Wordlist1324 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Wordlist3 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Wordlist4 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Wordlist5 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Wordlist7 {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Potm {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Top100Adobe {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct KbRusAdjFem {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct KbRusAdjMale {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct KbRusAdjIt {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct KbRusAdjMul {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct KbRusNounIt {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct KbRusNounMul {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MonthsAll {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MonthsAllWoShort {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MonthsShort {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RusMonthsEn {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RusMonthsTranslit {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct TrRusAdjFem {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct TrRusAdjIt {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct TrRusAdjMale {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct TrRusAdjMul {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct TrRusNounIt {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Tripple {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct TpLinkPasswords {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Netgear {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AssetnoteBak {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HttparchiveDirectories1m20230528Txt {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HttparchiveHtmlHtm20230528Txt {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HttparchivePhp20230528Txt {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HttparchiveXml20230528Txt {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HttparchiveJspJspaDoAction20230528Txt {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HttparchiveJs20230528Txt {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HttparchiveAspxAspCfmSvcAshxAsmx20230528Txt {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HttparchiveTxt20230528Txt {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HttparchiveCgiPl20230528Txt {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HttparchiveApiroutes20230528Txt {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HttparchiveSubdomains20230528Txt {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HttparchiveParametersTop1m20230528Txt {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AssetnotePl {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Assetnote2mSubdomains {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AssetnoteRaftMediumFilesLowercase {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AssetnoteRaftSmallExtensions {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AssetnoteJsp {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AssetnoteRaftMediumDirectories {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AssetnoteRaftLargeWords {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AssetnoteRaftMediumExtensions {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AssetnoteWordlistWithUnderscores {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AssetnoteRaftSmallDirectoriesLowercase {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AssetnoteWordlistNoUnderscores {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AssetnoteRaftSmallFilesLowercase {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AssetnoteDo {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AssetnoteBestDnsWordlist {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AssetnoteRaftMediumExtensionsLowercase {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AssetnoteRaftMediumWords {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AssetnoteRaftLargeWordsLowercase {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AssetnoteRaftMediumDirectoriesLowercase {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AssetnoteCfm {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AssetnoteRaftSmallWords {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AssetnoteRaftSmallExtensionsLowercase {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AssetnoteRaftMediumFiles {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AssetnotePhp {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AssetnoteXmlFilenames {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AssetnoteRaftMediumWordsLowercase {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AssetnoteRaftLargeDirectoriesLowercase {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AssetnoteRaftSmallDirectories {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AssetnoteAspLowercase {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AssetnoteRaftLargeDirectories {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AssetnoteRaftSmallWordsLowercase {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AssetnoteRaftLargeWordsExt {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AssetnoteRaftSmallFiles {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AssetnoteRaftLargeExtensionsLowercase {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AssetnoteAspxLowercase {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AssetnoteRaftLargeFilesLowercase {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AssetnoteRaftLargeFiles {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AssetnoteHtml {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AssetnoteRaftLargeExtensions {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AssetnoteDotFilenames {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AssetnotePhpmillion {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HttparchiveSymfony20230528Txt {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HttparchiveLaravel20230528Txt {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HttparchiveDjango20230528Txt {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HttparchiveZend20230528Txt {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HttparchiveCherrypy20230528Txt {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HttparchiveNginx20230528Txt {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HttparchiveTomcat20230528Txt {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HttparchiveFlask20230528Txt {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HttparchiveApache20221028Txt {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HttparchiveAdobeExperienceManager20230528Txt {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HttparchiveYii20230528Txt {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HttparchiveColdfusion20230528Txt {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HttparchiveExpress20230528Txt {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HttparchiveSpring20230528Txt {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HttparchiveRails20230528Txt {
    pub url: String,
    pub size: String,
    pub unit: String,
    pub group: String,
}
